!STARTOFREGISTRYGENERATEDINCLUDE 'inc/nl_config.inc'
!
! WARNING This file is generated automatically by use_registry
! using the data base in the file named Registry.
! Do not edit.  Your changes to this file will be lost.
!
#ifdef NL_get_ROUTINES
#if (NNN == 0)
SUBROUTINE nl_get_run_days ( id_id , run_days )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: run_days
  INTEGER id_id
  run_days = model_config_rec%run_days
  RETURN
END SUBROUTINE nl_get_run_days
SUBROUTINE nl_get_run_hours ( id_id , run_hours )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: run_hours
  INTEGER id_id
  run_hours = model_config_rec%run_hours
  RETURN
END SUBROUTINE nl_get_run_hours
SUBROUTINE nl_get_run_minutes ( id_id , run_minutes )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: run_minutes
  INTEGER id_id
  run_minutes = model_config_rec%run_minutes
  RETURN
END SUBROUTINE nl_get_run_minutes
SUBROUTINE nl_get_run_seconds ( id_id , run_seconds )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: run_seconds
  INTEGER id_id
  run_seconds = model_config_rec%run_seconds
  RETURN
END SUBROUTINE nl_get_run_seconds
SUBROUTINE nl_get_start_year ( id_id , start_year )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: start_year
  INTEGER id_id
  start_year = model_config_rec%start_year(id_id)
  RETURN
END SUBROUTINE nl_get_start_year
SUBROUTINE nl_get_start_month ( id_id , start_month )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: start_month
  INTEGER id_id
  start_month = model_config_rec%start_month(id_id)
  RETURN
END SUBROUTINE nl_get_start_month
SUBROUTINE nl_get_start_day ( id_id , start_day )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: start_day
  INTEGER id_id
  start_day = model_config_rec%start_day(id_id)
  RETURN
END SUBROUTINE nl_get_start_day
SUBROUTINE nl_get_start_hour ( id_id , start_hour )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: start_hour
  INTEGER id_id
  start_hour = model_config_rec%start_hour(id_id)
  RETURN
END SUBROUTINE nl_get_start_hour
SUBROUTINE nl_get_start_minute ( id_id , start_minute )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: start_minute
  INTEGER id_id
  start_minute = model_config_rec%start_minute(id_id)
  RETURN
END SUBROUTINE nl_get_start_minute
SUBROUTINE nl_get_start_second ( id_id , start_second )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: start_second
  INTEGER id_id
  start_second = model_config_rec%start_second(id_id)
  RETURN
END SUBROUTINE nl_get_start_second
SUBROUTINE nl_get_end_year ( id_id , end_year )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: end_year
  INTEGER id_id
  end_year = model_config_rec%end_year(id_id)
  RETURN
END SUBROUTINE nl_get_end_year
SUBROUTINE nl_get_end_month ( id_id , end_month )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: end_month
  INTEGER id_id
  end_month = model_config_rec%end_month(id_id)
  RETURN
END SUBROUTINE nl_get_end_month
SUBROUTINE nl_get_end_day ( id_id , end_day )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: end_day
  INTEGER id_id
  end_day = model_config_rec%end_day(id_id)
  RETURN
END SUBROUTINE nl_get_end_day
SUBROUTINE nl_get_end_hour ( id_id , end_hour )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: end_hour
  INTEGER id_id
  end_hour = model_config_rec%end_hour(id_id)
  RETURN
END SUBROUTINE nl_get_end_hour
SUBROUTINE nl_get_end_minute ( id_id , end_minute )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: end_minute
  INTEGER id_id
  end_minute = model_config_rec%end_minute(id_id)
  RETURN
END SUBROUTINE nl_get_end_minute
SUBROUTINE nl_get_end_second ( id_id , end_second )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: end_second
  INTEGER id_id
  end_second = model_config_rec%end_second(id_id)
  RETURN
END SUBROUTINE nl_get_end_second
SUBROUTINE nl_get_interval_seconds ( id_id , interval_seconds )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: interval_seconds
  INTEGER id_id
  interval_seconds = model_config_rec%interval_seconds
  RETURN
END SUBROUTINE nl_get_interval_seconds
SUBROUTINE nl_get_input_from_file ( id_id , input_from_file )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: input_from_file
  INTEGER id_id
  input_from_file = model_config_rec%input_from_file(id_id)
  RETURN
END SUBROUTINE nl_get_input_from_file
SUBROUTINE nl_get_fine_input_stream ( id_id , fine_input_stream )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: fine_input_stream
  INTEGER id_id
  fine_input_stream = model_config_rec%fine_input_stream(id_id)
  RETURN
END SUBROUTINE nl_get_fine_input_stream
SUBROUTINE nl_get_input_from_hires ( id_id , input_from_hires )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: input_from_hires
  INTEGER id_id
  input_from_hires = model_config_rec%input_from_hires(id_id)
  RETURN
END SUBROUTINE nl_get_input_from_hires
SUBROUTINE nl_get_rsmas_data_path ( id_id , rsmas_data_path )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: rsmas_data_path
  INTEGER id_id
  rsmas_data_path = trim(model_config_rec%rsmas_data_path)
  RETURN
END SUBROUTINE nl_get_rsmas_data_path
SUBROUTINE nl_get_all_ic_times ( id_id , all_ic_times )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: all_ic_times
  INTEGER id_id
  all_ic_times = model_config_rec%all_ic_times
  RETURN
END SUBROUTINE nl_get_all_ic_times
SUBROUTINE nl_get_julyr ( id_id , julyr )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: julyr
  INTEGER id_id
  julyr = model_config_rec%julyr(id_id)
  RETURN
END SUBROUTINE nl_get_julyr
SUBROUTINE nl_get_julday ( id_id , julday )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: julday
  INTEGER id_id
  julday = model_config_rec%julday(id_id)
  RETURN
END SUBROUTINE nl_get_julday
SUBROUTINE nl_get_gmt ( id_id , gmt )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: gmt
  INTEGER id_id
  gmt = model_config_rec%gmt(id_id)
  RETURN
END SUBROUTINE nl_get_gmt
SUBROUTINE nl_get_input_inname ( id_id , input_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: input_inname
  INTEGER id_id
  input_inname = trim(model_config_rec%input_inname)
  RETURN
END SUBROUTINE nl_get_input_inname
SUBROUTINE nl_get_input_outname ( id_id , input_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: input_outname
  INTEGER id_id
  input_outname = trim(model_config_rec%input_outname)
  RETURN
END SUBROUTINE nl_get_input_outname
SUBROUTINE nl_get_bdy_inname ( id_id , bdy_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: bdy_inname
  INTEGER id_id
  bdy_inname = trim(model_config_rec%bdy_inname)
  RETURN
END SUBROUTINE nl_get_bdy_inname
SUBROUTINE nl_get_bdy_outname ( id_id , bdy_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: bdy_outname
  INTEGER id_id
  bdy_outname = trim(model_config_rec%bdy_outname)
  RETURN
END SUBROUTINE nl_get_bdy_outname
SUBROUTINE nl_get_rst_inname ( id_id , rst_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: rst_inname
  INTEGER id_id
  rst_inname = trim(model_config_rec%rst_inname)
  RETURN
END SUBROUTINE nl_get_rst_inname
SUBROUTINE nl_get_rst_outname ( id_id , rst_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: rst_outname
  INTEGER id_id
  rst_outname = trim(model_config_rec%rst_outname)
  RETURN
END SUBROUTINE nl_get_rst_outname
SUBROUTINE nl_get_write_input ( id_id , write_input )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: write_input
  INTEGER id_id
  write_input = model_config_rec%write_input
  RETURN
END SUBROUTINE nl_get_write_input
SUBROUTINE nl_get_write_restart_at_0h ( id_id , write_restart_at_0h )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: write_restart_at_0h
  INTEGER id_id
  write_restart_at_0h = model_config_rec%write_restart_at_0h
  RETURN
END SUBROUTINE nl_get_write_restart_at_0h
SUBROUTINE nl_get_write_hist_at_0h_rst ( id_id , write_hist_at_0h_rst )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: write_hist_at_0h_rst
  INTEGER id_id
  write_hist_at_0h_rst = model_config_rec%write_hist_at_0h_rst
  RETURN
END SUBROUTINE nl_get_write_hist_at_0h_rst
SUBROUTINE nl_get_adjust_output_times ( id_id , adjust_output_times )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: adjust_output_times
  INTEGER id_id
  adjust_output_times = model_config_rec%adjust_output_times
  RETURN
END SUBROUTINE nl_get_adjust_output_times
SUBROUTINE nl_get_adjust_input_times ( id_id , adjust_input_times )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: adjust_input_times
  INTEGER id_id
  adjust_input_times = model_config_rec%adjust_input_times
  RETURN
END SUBROUTINE nl_get_adjust_input_times
SUBROUTINE nl_get_diag_print ( id_id , diag_print )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: diag_print
  INTEGER id_id
  diag_print = model_config_rec%diag_print
  RETURN
END SUBROUTINE nl_get_diag_print
SUBROUTINE nl_get_nocolons ( id_id , nocolons )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: nocolons
  INTEGER id_id
  nocolons = model_config_rec%nocolons
  RETURN
END SUBROUTINE nl_get_nocolons
SUBROUTINE nl_get_cycling ( id_id , cycling )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: cycling
  INTEGER id_id
  cycling = model_config_rec%cycling
  RETURN
END SUBROUTINE nl_get_cycling
SUBROUTINE nl_get_output_diagnostics ( id_id , output_diagnostics )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: output_diagnostics
  INTEGER id_id
  output_diagnostics = model_config_rec%output_diagnostics
  RETURN
END SUBROUTINE nl_get_output_diagnostics
SUBROUTINE nl_get_nwp_diagnostics ( id_id , nwp_diagnostics )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: nwp_diagnostics
  INTEGER id_id
  nwp_diagnostics = model_config_rec%nwp_diagnostics
  RETURN
END SUBROUTINE nl_get_nwp_diagnostics
SUBROUTINE nl_get_output_ready_flag ( id_id , output_ready_flag )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: output_ready_flag
  INTEGER id_id
  output_ready_flag = model_config_rec%output_ready_flag
  RETURN
END SUBROUTINE nl_get_output_ready_flag
SUBROUTINE nl_get_force_use_old_data ( id_id , force_use_old_data )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: force_use_old_data
  INTEGER id_id
  force_use_old_data = model_config_rec%force_use_old_data
  RETURN
END SUBROUTINE nl_get_force_use_old_data
SUBROUTINE nl_get_usepio ( id_id , usepio )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: usepio
  INTEGER id_id
  usepio = model_config_rec%usepio
  RETURN
END SUBROUTINE nl_get_usepio
SUBROUTINE nl_get_pioprocs ( id_id , pioprocs )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: pioprocs
  INTEGER id_id
  pioprocs = model_config_rec%pioprocs
  RETURN
END SUBROUTINE nl_get_pioprocs
SUBROUTINE nl_get_piostart ( id_id , piostart )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: piostart
  INTEGER id_id
  piostart = model_config_rec%piostart
  RETURN
END SUBROUTINE nl_get_piostart
SUBROUTINE nl_get_piostride ( id_id , piostride )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: piostride
  INTEGER id_id
  piostride = model_config_rec%piostride
  RETURN
END SUBROUTINE nl_get_piostride
SUBROUTINE nl_get_pioshift ( id_id , pioshift )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: pioshift
  INTEGER id_id
  pioshift = model_config_rec%pioshift
  RETURN
END SUBROUTINE nl_get_pioshift
SUBROUTINE nl_get_dfi_opt ( id_id , dfi_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: dfi_opt
  INTEGER id_id
  dfi_opt = model_config_rec%dfi_opt
  RETURN
END SUBROUTINE nl_get_dfi_opt
SUBROUTINE nl_get_dfi_savehydmeteors ( id_id , dfi_savehydmeteors )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: dfi_savehydmeteors
  INTEGER id_id
  dfi_savehydmeteors = model_config_rec%dfi_savehydmeteors
  RETURN
END SUBROUTINE nl_get_dfi_savehydmeteors
SUBROUTINE nl_get_dfi_nfilter ( id_id , dfi_nfilter )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: dfi_nfilter
  INTEGER id_id
  dfi_nfilter = model_config_rec%dfi_nfilter
  RETURN
END SUBROUTINE nl_get_dfi_nfilter
SUBROUTINE nl_get_dfi_write_filtered_input ( id_id , dfi_write_filtered_input )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: dfi_write_filtered_input
  INTEGER id_id
  dfi_write_filtered_input = model_config_rec%dfi_write_filtered_input
  RETURN
END SUBROUTINE nl_get_dfi_write_filtered_input
SUBROUTINE nl_get_dfi_write_dfi_history ( id_id , dfi_write_dfi_history )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: dfi_write_dfi_history
  INTEGER id_id
  dfi_write_dfi_history = model_config_rec%dfi_write_dfi_history
  RETURN
END SUBROUTINE nl_get_dfi_write_dfi_history
SUBROUTINE nl_get_dfi_cutoff_seconds ( id_id , dfi_cutoff_seconds )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: dfi_cutoff_seconds
  INTEGER id_id
  dfi_cutoff_seconds = model_config_rec%dfi_cutoff_seconds
  RETURN
END SUBROUTINE nl_get_dfi_cutoff_seconds
SUBROUTINE nl_get_dfi_time_dim ( id_id , dfi_time_dim )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: dfi_time_dim
  INTEGER id_id
  dfi_time_dim = model_config_rec%dfi_time_dim
  RETURN
END SUBROUTINE nl_get_dfi_time_dim
SUBROUTINE nl_get_dfi_fwdstop_year ( id_id , dfi_fwdstop_year )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: dfi_fwdstop_year
  INTEGER id_id
  dfi_fwdstop_year = model_config_rec%dfi_fwdstop_year
  RETURN
END SUBROUTINE nl_get_dfi_fwdstop_year
SUBROUTINE nl_get_dfi_fwdstop_month ( id_id , dfi_fwdstop_month )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: dfi_fwdstop_month
  INTEGER id_id
  dfi_fwdstop_month = model_config_rec%dfi_fwdstop_month
  RETURN
END SUBROUTINE nl_get_dfi_fwdstop_month
SUBROUTINE nl_get_dfi_fwdstop_day ( id_id , dfi_fwdstop_day )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: dfi_fwdstop_day
  INTEGER id_id
  dfi_fwdstop_day = model_config_rec%dfi_fwdstop_day
  RETURN
END SUBROUTINE nl_get_dfi_fwdstop_day
SUBROUTINE nl_get_dfi_fwdstop_hour ( id_id , dfi_fwdstop_hour )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: dfi_fwdstop_hour
  INTEGER id_id
  dfi_fwdstop_hour = model_config_rec%dfi_fwdstop_hour
  RETURN
END SUBROUTINE nl_get_dfi_fwdstop_hour
SUBROUTINE nl_get_dfi_fwdstop_minute ( id_id , dfi_fwdstop_minute )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: dfi_fwdstop_minute
  INTEGER id_id
  dfi_fwdstop_minute = model_config_rec%dfi_fwdstop_minute
  RETURN
END SUBROUTINE nl_get_dfi_fwdstop_minute
SUBROUTINE nl_get_dfi_fwdstop_second ( id_id , dfi_fwdstop_second )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: dfi_fwdstop_second
  INTEGER id_id
  dfi_fwdstop_second = model_config_rec%dfi_fwdstop_second
  RETURN
END SUBROUTINE nl_get_dfi_fwdstop_second
SUBROUTINE nl_get_dfi_bckstop_year ( id_id , dfi_bckstop_year )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: dfi_bckstop_year
  INTEGER id_id
  dfi_bckstop_year = model_config_rec%dfi_bckstop_year
  RETURN
END SUBROUTINE nl_get_dfi_bckstop_year
SUBROUTINE nl_get_dfi_bckstop_month ( id_id , dfi_bckstop_month )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: dfi_bckstop_month
  INTEGER id_id
  dfi_bckstop_month = model_config_rec%dfi_bckstop_month
  RETURN
END SUBROUTINE nl_get_dfi_bckstop_month
SUBROUTINE nl_get_dfi_bckstop_day ( id_id , dfi_bckstop_day )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: dfi_bckstop_day
  INTEGER id_id
  dfi_bckstop_day = model_config_rec%dfi_bckstop_day
  RETURN
END SUBROUTINE nl_get_dfi_bckstop_day
SUBROUTINE nl_get_dfi_bckstop_hour ( id_id , dfi_bckstop_hour )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: dfi_bckstop_hour
  INTEGER id_id
  dfi_bckstop_hour = model_config_rec%dfi_bckstop_hour
  RETURN
END SUBROUTINE nl_get_dfi_bckstop_hour
SUBROUTINE nl_get_dfi_bckstop_minute ( id_id , dfi_bckstop_minute )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: dfi_bckstop_minute
  INTEGER id_id
  dfi_bckstop_minute = model_config_rec%dfi_bckstop_minute
  RETURN
END SUBROUTINE nl_get_dfi_bckstop_minute
SUBROUTINE nl_get_dfi_bckstop_second ( id_id , dfi_bckstop_second )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: dfi_bckstop_second
  INTEGER id_id
  dfi_bckstop_second = model_config_rec%dfi_bckstop_second
  RETURN
END SUBROUTINE nl_get_dfi_bckstop_second
SUBROUTINE nl_get_time_step ( id_id , time_step )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: time_step
  INTEGER id_id
  time_step = model_config_rec%time_step
  RETURN
END SUBROUTINE nl_get_time_step
SUBROUTINE nl_get_time_step_fract_num ( id_id , time_step_fract_num )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: time_step_fract_num
  INTEGER id_id
  time_step_fract_num = model_config_rec%time_step_fract_num
  RETURN
END SUBROUTINE nl_get_time_step_fract_num
SUBROUTINE nl_get_time_step_fract_den ( id_id , time_step_fract_den )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: time_step_fract_den
  INTEGER id_id
  time_step_fract_den = model_config_rec%time_step_fract_den
  RETURN
END SUBROUTINE nl_get_time_step_fract_den
SUBROUTINE nl_get_time_step_dfi ( id_id , time_step_dfi )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: time_step_dfi
  INTEGER id_id
  time_step_dfi = model_config_rec%time_step_dfi
  RETURN
END SUBROUTINE nl_get_time_step_dfi
SUBROUTINE nl_get_min_time_step ( id_id , min_time_step )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: min_time_step
  INTEGER id_id
  min_time_step = model_config_rec%min_time_step(id_id)
  RETURN
END SUBROUTINE nl_get_min_time_step
SUBROUTINE nl_get_min_time_step_den ( id_id , min_time_step_den )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: min_time_step_den
  INTEGER id_id
  min_time_step_den = model_config_rec%min_time_step_den(id_id)
  RETURN
END SUBROUTINE nl_get_min_time_step_den
SUBROUTINE nl_get_max_time_step ( id_id , max_time_step )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: max_time_step
  INTEGER id_id
  max_time_step = model_config_rec%max_time_step(id_id)
  RETURN
END SUBROUTINE nl_get_max_time_step
SUBROUTINE nl_get_max_time_step_den ( id_id , max_time_step_den )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: max_time_step_den
  INTEGER id_id
  max_time_step_den = model_config_rec%max_time_step_den(id_id)
  RETURN
END SUBROUTINE nl_get_max_time_step_den
SUBROUTINE nl_get_target_cfl ( id_id , target_cfl )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: target_cfl
  INTEGER id_id
  target_cfl = model_config_rec%target_cfl(id_id)
  RETURN
END SUBROUTINE nl_get_target_cfl
SUBROUTINE nl_get_target_hcfl ( id_id , target_hcfl )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: target_hcfl
  INTEGER id_id
  target_hcfl = model_config_rec%target_hcfl(id_id)
  RETURN
END SUBROUTINE nl_get_target_hcfl
SUBROUTINE nl_get_max_step_increase_pct ( id_id , max_step_increase_pct )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: max_step_increase_pct
  INTEGER id_id
  max_step_increase_pct = model_config_rec%max_step_increase_pct(id_id)
  RETURN
END SUBROUTINE nl_get_max_step_increase_pct
SUBROUTINE nl_get_starting_time_step ( id_id , starting_time_step )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: starting_time_step
  INTEGER id_id
  starting_time_step = model_config_rec%starting_time_step(id_id)
  RETURN
END SUBROUTINE nl_get_starting_time_step
SUBROUTINE nl_get_starting_time_step_den ( id_id , starting_time_step_den )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: starting_time_step_den
  INTEGER id_id
  starting_time_step_den = model_config_rec%starting_time_step_den(id_id)
  RETURN
END SUBROUTINE nl_get_starting_time_step_den
SUBROUTINE nl_get_step_to_output_time ( id_id , step_to_output_time )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: step_to_output_time
  INTEGER id_id
  step_to_output_time = model_config_rec%step_to_output_time
  RETURN
END SUBROUTINE nl_get_step_to_output_time
SUBROUTINE nl_get_adaptation_domain ( id_id , adaptation_domain )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: adaptation_domain
  INTEGER id_id
  adaptation_domain = model_config_rec%adaptation_domain
  RETURN
END SUBROUTINE nl_get_adaptation_domain
SUBROUTINE nl_get_use_adaptive_time_step ( id_id , use_adaptive_time_step )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: use_adaptive_time_step
  INTEGER id_id
  use_adaptive_time_step = model_config_rec%use_adaptive_time_step
  RETURN
END SUBROUTINE nl_get_use_adaptive_time_step
SUBROUTINE nl_get_use_adaptive_time_step_dfi ( id_id , use_adaptive_time_step_dfi )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: use_adaptive_time_step_dfi
  INTEGER id_id
  use_adaptive_time_step_dfi = model_config_rec%use_adaptive_time_step_dfi
  RETURN
END SUBROUTINE nl_get_use_adaptive_time_step_dfi
SUBROUTINE nl_get_max_dom ( id_id , max_dom )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: max_dom
  INTEGER id_id
  max_dom = model_config_rec%max_dom
  RETURN
END SUBROUTINE nl_get_max_dom
SUBROUTINE nl_get_lats_to_mic ( id_id , lats_to_mic )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: lats_to_mic
  INTEGER id_id
  lats_to_mic = model_config_rec%lats_to_mic
  RETURN
END SUBROUTINE nl_get_lats_to_mic
SUBROUTINE nl_get_s_we ( id_id , s_we )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: s_we
  INTEGER id_id
  s_we = model_config_rec%s_we(id_id)
  RETURN
END SUBROUTINE nl_get_s_we
SUBROUTINE nl_get_e_we ( id_id , e_we )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: e_we
  INTEGER id_id
  e_we = model_config_rec%e_we(id_id)
  RETURN
END SUBROUTINE nl_get_e_we
SUBROUTINE nl_get_s_sn ( id_id , s_sn )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: s_sn
  INTEGER id_id
  s_sn = model_config_rec%s_sn(id_id)
  RETURN
END SUBROUTINE nl_get_s_sn
SUBROUTINE nl_get_e_sn ( id_id , e_sn )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: e_sn
  INTEGER id_id
  e_sn = model_config_rec%e_sn(id_id)
  RETURN
END SUBROUTINE nl_get_e_sn
SUBROUTINE nl_get_s_vert ( id_id , s_vert )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: s_vert
  INTEGER id_id
  s_vert = model_config_rec%s_vert(id_id)
  RETURN
END SUBROUTINE nl_get_s_vert
SUBROUTINE nl_get_e_vert ( id_id , e_vert )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: e_vert
  INTEGER id_id
  e_vert = model_config_rec%e_vert(id_id)
  RETURN
END SUBROUTINE nl_get_e_vert
SUBROUTINE nl_get_num_metgrid_levels ( id_id , num_metgrid_levels )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: num_metgrid_levels
  INTEGER id_id
  num_metgrid_levels = model_config_rec%num_metgrid_levels
  RETURN
END SUBROUTINE nl_get_num_metgrid_levels
SUBROUTINE nl_get_num_metgrid_soil_levels ( id_id , num_metgrid_soil_levels )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: num_metgrid_soil_levels
  INTEGER id_id
  num_metgrid_soil_levels = model_config_rec%num_metgrid_soil_levels
  RETURN
END SUBROUTINE nl_get_num_metgrid_soil_levels
SUBROUTINE nl_get_p_top_requested ( id_id , p_top_requested )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: p_top_requested
  INTEGER id_id
  p_top_requested = model_config_rec%p_top_requested
  RETURN
END SUBROUTINE nl_get_p_top_requested
SUBROUTINE nl_get_interp_theta ( id_id , interp_theta )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: interp_theta
  INTEGER id_id
  interp_theta = model_config_rec%interp_theta
  RETURN
END SUBROUTINE nl_get_interp_theta
SUBROUTINE nl_get_interp_type ( id_id , interp_type )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: interp_type
  INTEGER id_id
  interp_type = model_config_rec%interp_type
  RETURN
END SUBROUTINE nl_get_interp_type
SUBROUTINE nl_get_rebalance ( id_id , rebalance )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: rebalance
  INTEGER id_id
  rebalance = model_config_rec%rebalance
  RETURN
END SUBROUTINE nl_get_rebalance
SUBROUTINE nl_get_vert_refine_method ( id_id , vert_refine_method )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: vert_refine_method
  INTEGER id_id
  vert_refine_method = model_config_rec%vert_refine_method(id_id)
  RETURN
END SUBROUTINE nl_get_vert_refine_method
SUBROUTINE nl_get_vert_refine_fact ( id_id , vert_refine_fact )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: vert_refine_fact
  INTEGER id_id
  vert_refine_fact = model_config_rec%vert_refine_fact
  RETURN
END SUBROUTINE nl_get_vert_refine_fact
SUBROUTINE nl_get_extrap_type ( id_id , extrap_type )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: extrap_type
  INTEGER id_id
  extrap_type = model_config_rec%extrap_type
  RETURN
END SUBROUTINE nl_get_extrap_type
SUBROUTINE nl_get_t_extrap_type ( id_id , t_extrap_type )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: t_extrap_type
  INTEGER id_id
  t_extrap_type = model_config_rec%t_extrap_type
  RETURN
END SUBROUTINE nl_get_t_extrap_type
SUBROUTINE nl_get_hypsometric_opt ( id_id , hypsometric_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: hypsometric_opt
  INTEGER id_id
  hypsometric_opt = model_config_rec%hypsometric_opt
  RETURN
END SUBROUTINE nl_get_hypsometric_opt
SUBROUTINE nl_get_lowest_lev_from_sfc ( id_id , lowest_lev_from_sfc )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: lowest_lev_from_sfc
  INTEGER id_id
  lowest_lev_from_sfc = model_config_rec%lowest_lev_from_sfc
  RETURN
END SUBROUTINE nl_get_lowest_lev_from_sfc
SUBROUTINE nl_get_use_levels_below_ground ( id_id , use_levels_below_ground )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: use_levels_below_ground
  INTEGER id_id
  use_levels_below_ground = model_config_rec%use_levels_below_ground
  RETURN
END SUBROUTINE nl_get_use_levels_below_ground
SUBROUTINE nl_get_use_tavg_for_tsk ( id_id , use_tavg_for_tsk )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: use_tavg_for_tsk
  INTEGER id_id
  use_tavg_for_tsk = model_config_rec%use_tavg_for_tsk
  RETURN
END SUBROUTINE nl_get_use_tavg_for_tsk
SUBROUTINE nl_get_use_surface ( id_id , use_surface )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: use_surface
  INTEGER id_id
  use_surface = model_config_rec%use_surface
  RETURN
END SUBROUTINE nl_get_use_surface
SUBROUTINE nl_get_lagrange_order ( id_id , lagrange_order )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: lagrange_order
  INTEGER id_id
  lagrange_order = model_config_rec%lagrange_order
  RETURN
END SUBROUTINE nl_get_lagrange_order
SUBROUTINE nl_get_force_sfc_in_vinterp ( id_id , force_sfc_in_vinterp )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: force_sfc_in_vinterp
  INTEGER id_id
  force_sfc_in_vinterp = model_config_rec%force_sfc_in_vinterp
  RETURN
END SUBROUTINE nl_get_force_sfc_in_vinterp
SUBROUTINE nl_get_zap_close_levels ( id_id , zap_close_levels )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: zap_close_levels
  INTEGER id_id
  zap_close_levels = model_config_rec%zap_close_levels
  RETURN
END SUBROUTINE nl_get_zap_close_levels
SUBROUTINE nl_get_maxw_horiz_pres_diff ( id_id , maxw_horiz_pres_diff )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: maxw_horiz_pres_diff
  INTEGER id_id
  maxw_horiz_pres_diff = model_config_rec%maxw_horiz_pres_diff
  RETURN
END SUBROUTINE nl_get_maxw_horiz_pres_diff
SUBROUTINE nl_get_trop_horiz_pres_diff ( id_id , trop_horiz_pres_diff )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: trop_horiz_pres_diff
  INTEGER id_id
  trop_horiz_pres_diff = model_config_rec%trop_horiz_pres_diff
  RETURN
END SUBROUTINE nl_get_trop_horiz_pres_diff
SUBROUTINE nl_get_maxw_above_this_level ( id_id , maxw_above_this_level )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: maxw_above_this_level
  INTEGER id_id
  maxw_above_this_level = model_config_rec%maxw_above_this_level
  RETURN
END SUBROUTINE nl_get_maxw_above_this_level
SUBROUTINE nl_get_use_maxw_level ( id_id , use_maxw_level )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: use_maxw_level
  INTEGER id_id
  use_maxw_level = model_config_rec%use_maxw_level
  RETURN
END SUBROUTINE nl_get_use_maxw_level
SUBROUTINE nl_get_use_trop_level ( id_id , use_trop_level )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: use_trop_level
  INTEGER id_id
  use_trop_level = model_config_rec%use_trop_level
  RETURN
END SUBROUTINE nl_get_use_trop_level
SUBROUTINE nl_get_sfcp_to_sfcp ( id_id , sfcp_to_sfcp )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: sfcp_to_sfcp
  INTEGER id_id
  sfcp_to_sfcp = model_config_rec%sfcp_to_sfcp
  RETURN
END SUBROUTINE nl_get_sfcp_to_sfcp
SUBROUTINE nl_get_adjust_heights ( id_id , adjust_heights )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: adjust_heights
  INTEGER id_id
  adjust_heights = model_config_rec%adjust_heights
  RETURN
END SUBROUTINE nl_get_adjust_heights
SUBROUTINE nl_get_smooth_cg_topo ( id_id , smooth_cg_topo )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: smooth_cg_topo
  INTEGER id_id
  smooth_cg_topo = model_config_rec%smooth_cg_topo
  RETURN
END SUBROUTINE nl_get_smooth_cg_topo
SUBROUTINE nl_get_nest_interp_coord ( id_id , nest_interp_coord )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: nest_interp_coord
  INTEGER id_id
  nest_interp_coord = model_config_rec%nest_interp_coord
  RETURN
END SUBROUTINE nl_get_nest_interp_coord
SUBROUTINE nl_get_interp_method_type ( id_id , interp_method_type )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: interp_method_type
  INTEGER id_id
  interp_method_type = model_config_rec%interp_method_type
  RETURN
END SUBROUTINE nl_get_interp_method_type
SUBROUTINE nl_get_aggregate_lu ( id_id , aggregate_lu )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: aggregate_lu
  INTEGER id_id
  aggregate_lu = model_config_rec%aggregate_lu
  RETURN
END SUBROUTINE nl_get_aggregate_lu
SUBROUTINE nl_get_rh2qv_wrt_liquid ( id_id , rh2qv_wrt_liquid )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: rh2qv_wrt_liquid
  INTEGER id_id
  rh2qv_wrt_liquid = model_config_rec%rh2qv_wrt_liquid
  RETURN
END SUBROUTINE nl_get_rh2qv_wrt_liquid
SUBROUTINE nl_get_rh2qv_method ( id_id , rh2qv_method )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: rh2qv_method
  INTEGER id_id
  rh2qv_method = model_config_rec%rh2qv_method
  RETURN
END SUBROUTINE nl_get_rh2qv_method
SUBROUTINE nl_get_qv_max_p_safe ( id_id , qv_max_p_safe )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: qv_max_p_safe
  INTEGER id_id
  qv_max_p_safe = model_config_rec%qv_max_p_safe
  RETURN
END SUBROUTINE nl_get_qv_max_p_safe
SUBROUTINE nl_get_qv_max_flag ( id_id , qv_max_flag )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: qv_max_flag
  INTEGER id_id
  qv_max_flag = model_config_rec%qv_max_flag
  RETURN
END SUBROUTINE nl_get_qv_max_flag
SUBROUTINE nl_get_qv_max_value ( id_id , qv_max_value )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: qv_max_value
  INTEGER id_id
  qv_max_value = model_config_rec%qv_max_value
  RETURN
END SUBROUTINE nl_get_qv_max_value
SUBROUTINE nl_get_qv_min_p_safe ( id_id , qv_min_p_safe )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: qv_min_p_safe
  INTEGER id_id
  qv_min_p_safe = model_config_rec%qv_min_p_safe
  RETURN
END SUBROUTINE nl_get_qv_min_p_safe
SUBROUTINE nl_get_qv_min_flag ( id_id , qv_min_flag )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: qv_min_flag
  INTEGER id_id
  qv_min_flag = model_config_rec%qv_min_flag
  RETURN
END SUBROUTINE nl_get_qv_min_flag
SUBROUTINE nl_get_qv_min_value ( id_id , qv_min_value )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: qv_min_value
  INTEGER id_id
  qv_min_value = model_config_rec%qv_min_value
  RETURN
END SUBROUTINE nl_get_qv_min_value
SUBROUTINE nl_get_ideal_init_method ( id_id , ideal_init_method )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: ideal_init_method
  INTEGER id_id
  ideal_init_method = model_config_rec%ideal_init_method
  RETURN
END SUBROUTINE nl_get_ideal_init_method
SUBROUTINE nl_get_dx ( id_id , dx )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: dx
  INTEGER id_id
  dx = model_config_rec%dx(id_id)
  RETURN
END SUBROUTINE nl_get_dx
SUBROUTINE nl_get_dy ( id_id , dy )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: dy
  INTEGER id_id
  dy = model_config_rec%dy(id_id)
  RETURN
END SUBROUTINE nl_get_dy
SUBROUTINE nl_get_grid_id ( id_id , grid_id )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: grid_id
  INTEGER id_id
  grid_id = model_config_rec%grid_id(id_id)
  RETURN
END SUBROUTINE nl_get_grid_id
SUBROUTINE nl_get_grid_allowed ( id_id , grid_allowed )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: grid_allowed
  INTEGER id_id
  grid_allowed = model_config_rec%grid_allowed(id_id)
  RETURN
END SUBROUTINE nl_get_grid_allowed
SUBROUTINE nl_get_parent_id ( id_id , parent_id )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: parent_id
  INTEGER id_id
  parent_id = model_config_rec%parent_id(id_id)
  RETURN
END SUBROUTINE nl_get_parent_id
SUBROUTINE nl_get_i_parent_start ( id_id , i_parent_start )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: i_parent_start
  INTEGER id_id
  i_parent_start = model_config_rec%i_parent_start(id_id)
  RETURN
END SUBROUTINE nl_get_i_parent_start
SUBROUTINE nl_get_j_parent_start ( id_id , j_parent_start )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: j_parent_start
  INTEGER id_id
  j_parent_start = model_config_rec%j_parent_start(id_id)
  RETURN
END SUBROUTINE nl_get_j_parent_start
SUBROUTINE nl_get_parent_grid_ratio ( id_id , parent_grid_ratio )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: parent_grid_ratio
  INTEGER id_id
  parent_grid_ratio = model_config_rec%parent_grid_ratio(id_id)
  RETURN
END SUBROUTINE nl_get_parent_grid_ratio
SUBROUTINE nl_get_parent_time_step_ratio ( id_id , parent_time_step_ratio )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: parent_time_step_ratio
  INTEGER id_id
  parent_time_step_ratio = model_config_rec%parent_time_step_ratio(id_id)
  RETURN
END SUBROUTINE nl_get_parent_time_step_ratio
SUBROUTINE nl_get_feedback ( id_id , feedback )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: feedback
  INTEGER id_id
  feedback = model_config_rec%feedback
  RETURN
END SUBROUTINE nl_get_feedback
SUBROUTINE nl_get_smooth_option ( id_id , smooth_option )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: smooth_option
  INTEGER id_id
  smooth_option = model_config_rec%smooth_option
  RETURN
END SUBROUTINE nl_get_smooth_option
SUBROUTINE nl_get_blend_width ( id_id , blend_width )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: blend_width
  INTEGER id_id
  blend_width = model_config_rec%blend_width
  RETURN
END SUBROUTINE nl_get_blend_width
SUBROUTINE nl_get_ztop ( id_id , ztop )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: ztop
  INTEGER id_id
  ztop = model_config_rec%ztop(id_id)
  RETURN
END SUBROUTINE nl_get_ztop
SUBROUTINE nl_get_moad_grid_ratio ( id_id , moad_grid_ratio )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: moad_grid_ratio
  INTEGER id_id
  moad_grid_ratio = model_config_rec%moad_grid_ratio(id_id)
  RETURN
END SUBROUTINE nl_get_moad_grid_ratio
SUBROUTINE nl_get_moad_time_step_ratio ( id_id , moad_time_step_ratio )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: moad_time_step_ratio
  INTEGER id_id
  moad_time_step_ratio = model_config_rec%moad_time_step_ratio(id_id)
  RETURN
END SUBROUTINE nl_get_moad_time_step_ratio
SUBROUTINE nl_get_shw ( id_id , shw )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: shw
  INTEGER id_id
  shw = model_config_rec%shw(id_id)
  RETURN
END SUBROUTINE nl_get_shw
SUBROUTINE nl_get_tile_sz_x ( id_id , tile_sz_x )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: tile_sz_x
  INTEGER id_id
  tile_sz_x = model_config_rec%tile_sz_x
  RETURN
END SUBROUTINE nl_get_tile_sz_x
SUBROUTINE nl_get_tile_sz_y ( id_id , tile_sz_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: tile_sz_y
  INTEGER id_id
  tile_sz_y = model_config_rec%tile_sz_y
  RETURN
END SUBROUTINE nl_get_tile_sz_y
SUBROUTINE nl_get_numtiles ( id_id , numtiles )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: numtiles
  INTEGER id_id
  numtiles = model_config_rec%numtiles
  RETURN
END SUBROUTINE nl_get_numtiles
SUBROUTINE nl_get_numtiles_inc ( id_id , numtiles_inc )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: numtiles_inc
  INTEGER id_id
  numtiles_inc = model_config_rec%numtiles_inc
  RETURN
END SUBROUTINE nl_get_numtiles_inc
SUBROUTINE nl_get_numtiles_x ( id_id , numtiles_x )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: numtiles_x
  INTEGER id_id
  numtiles_x = model_config_rec%numtiles_x
  RETURN
END SUBROUTINE nl_get_numtiles_x
SUBROUTINE nl_get_numtiles_y ( id_id , numtiles_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: numtiles_y
  INTEGER id_id
  numtiles_y = model_config_rec%numtiles_y
  RETURN
END SUBROUTINE nl_get_numtiles_y
SUBROUTINE nl_get_tile_strategy ( id_id , tile_strategy )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: tile_strategy
  INTEGER id_id
  tile_strategy = model_config_rec%tile_strategy
  RETURN
END SUBROUTINE nl_get_tile_strategy
SUBROUTINE nl_get_nproc_x ( id_id , nproc_x )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: nproc_x
  INTEGER id_id
  nproc_x = model_config_rec%nproc_x
  RETURN
END SUBROUTINE nl_get_nproc_x
SUBROUTINE nl_get_nproc_y ( id_id , nproc_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: nproc_y
  INTEGER id_id
  nproc_y = model_config_rec%nproc_y
  RETURN
END SUBROUTINE nl_get_nproc_y
SUBROUTINE nl_get_irand ( id_id , irand )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: irand
  INTEGER id_id
  irand = model_config_rec%irand
  RETURN
END SUBROUTINE nl_get_irand
SUBROUTINE nl_get_dt ( id_id , dt )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: dt
  INTEGER id_id
  dt = model_config_rec%dt(id_id)
  RETURN
END SUBROUTINE nl_get_dt
SUBROUTINE nl_get_fft_used ( id_id , fft_used )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: fft_used
  INTEGER id_id
  fft_used = model_config_rec%fft_used
  RETURN
END SUBROUTINE nl_get_fft_used
SUBROUTINE nl_get_cu_used ( id_id , cu_used )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: cu_used
  INTEGER id_id
  cu_used = model_config_rec%cu_used
  RETURN
END SUBROUTINE nl_get_cu_used
SUBROUTINE nl_get_shcu_used ( id_id , shcu_used )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: shcu_used
  INTEGER id_id
  shcu_used = model_config_rec%shcu_used
  RETURN
END SUBROUTINE nl_get_shcu_used
SUBROUTINE nl_get_cam_used ( id_id , cam_used )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: cam_used
  INTEGER id_id
  cam_used = model_config_rec%cam_used
  RETURN
END SUBROUTINE nl_get_cam_used
SUBROUTINE nl_get_alloc_qndropsource ( id_id , alloc_qndropsource )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: alloc_qndropsource
  INTEGER id_id
  alloc_qndropsource = model_config_rec%alloc_qndropsource
  RETURN
END SUBROUTINE nl_get_alloc_qndropsource
SUBROUTINE nl_get_num_moves ( id_id , num_moves )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: num_moves
  INTEGER id_id
  num_moves = model_config_rec%num_moves
  RETURN
END SUBROUTINE nl_get_num_moves
SUBROUTINE nl_get_ts_buf_size ( id_id , ts_buf_size )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: ts_buf_size
  INTEGER id_id
  ts_buf_size = model_config_rec%ts_buf_size
  RETURN
END SUBROUTINE nl_get_ts_buf_size
SUBROUTINE nl_get_max_ts_locs ( id_id , max_ts_locs )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: max_ts_locs
  INTEGER id_id
  max_ts_locs = model_config_rec%max_ts_locs
  RETURN
END SUBROUTINE nl_get_max_ts_locs
SUBROUTINE nl_get_vortex_interval ( id_id , vortex_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: vortex_interval
  INTEGER id_id
  vortex_interval = model_config_rec%vortex_interval(id_id)
  RETURN
END SUBROUTINE nl_get_vortex_interval
SUBROUTINE nl_get_max_vortex_speed ( id_id , max_vortex_speed )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: max_vortex_speed
  INTEGER id_id
  max_vortex_speed = model_config_rec%max_vortex_speed(id_id)
  RETURN
END SUBROUTINE nl_get_max_vortex_speed
SUBROUTINE nl_get_corral_dist ( id_id , corral_dist )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: corral_dist
  INTEGER id_id
  corral_dist = model_config_rec%corral_dist(id_id)
  RETURN
END SUBROUTINE nl_get_corral_dist
SUBROUTINE nl_get_track_level ( id_id , track_level )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: track_level
  INTEGER id_id
  track_level = model_config_rec%track_level
  RETURN
END SUBROUTINE nl_get_track_level
SUBROUTINE nl_get_time_to_move ( id_id , time_to_move )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: time_to_move
  INTEGER id_id
  time_to_move = model_config_rec%time_to_move(id_id)
  RETURN
END SUBROUTINE nl_get_time_to_move
SUBROUTINE nl_get_move_id ( id_id , move_id )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: move_id
  INTEGER id_id
  move_id = model_config_rec%move_id(id_id)
  RETURN
END SUBROUTINE nl_get_move_id
SUBROUTINE nl_get_move_interval ( id_id , move_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: move_interval
  INTEGER id_id
  move_interval = model_config_rec%move_interval(id_id)
  RETURN
END SUBROUTINE nl_get_move_interval
SUBROUTINE nl_get_move_cd_x ( id_id , move_cd_x )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: move_cd_x
  INTEGER id_id
  move_cd_x = model_config_rec%move_cd_x(id_id)
  RETURN
END SUBROUTINE nl_get_move_cd_x
SUBROUTINE nl_get_move_cd_y ( id_id , move_cd_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: move_cd_y
  INTEGER id_id
  move_cd_y = model_config_rec%move_cd_y(id_id)
  RETURN
END SUBROUTINE nl_get_move_cd_y
SUBROUTINE nl_get_swap_x ( id_id , swap_x )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: swap_x
  INTEGER id_id
  swap_x = model_config_rec%swap_x(id_id)
  RETURN
END SUBROUTINE nl_get_swap_x
SUBROUTINE nl_get_swap_y ( id_id , swap_y )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: swap_y
  INTEGER id_id
  swap_y = model_config_rec%swap_y(id_id)
  RETURN
END SUBROUTINE nl_get_swap_y
SUBROUTINE nl_get_cycle_x ( id_id , cycle_x )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: cycle_x
  INTEGER id_id
  cycle_x = model_config_rec%cycle_x(id_id)
  RETURN
END SUBROUTINE nl_get_cycle_x
SUBROUTINE nl_get_cycle_y ( id_id , cycle_y )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: cycle_y
  INTEGER id_id
  cycle_y = model_config_rec%cycle_y(id_id)
  RETURN
END SUBROUTINE nl_get_cycle_y
SUBROUTINE nl_get_reorder_mesh ( id_id , reorder_mesh )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: reorder_mesh
  INTEGER id_id
  reorder_mesh = model_config_rec%reorder_mesh
  RETURN
END SUBROUTINE nl_get_reorder_mesh
SUBROUTINE nl_get_perturb_input ( id_id , perturb_input )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: perturb_input
  INTEGER id_id
  perturb_input = model_config_rec%perturb_input
  RETURN
END SUBROUTINE nl_get_perturb_input
SUBROUTINE nl_get_eta_levels ( id_id , eta_levels )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: eta_levels
  INTEGER id_id
  eta_levels = model_config_rec%eta_levels(id_id)
  RETURN
END SUBROUTINE nl_get_eta_levels
SUBROUTINE nl_get_auto_levels_opt ( id_id , auto_levels_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auto_levels_opt
  INTEGER id_id
  auto_levels_opt = model_config_rec%auto_levels_opt
  RETURN
END SUBROUTINE nl_get_auto_levels_opt
SUBROUTINE nl_get_max_dz ( id_id , max_dz )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: max_dz
  INTEGER id_id
  max_dz = model_config_rec%max_dz
  RETURN
END SUBROUTINE nl_get_max_dz
SUBROUTINE nl_get_dzbot ( id_id , dzbot )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: dzbot
  INTEGER id_id
  dzbot = model_config_rec%dzbot
  RETURN
END SUBROUTINE nl_get_dzbot
SUBROUTINE nl_get_dzstretch_s ( id_id , dzstretch_s )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: dzstretch_s
  INTEGER id_id
  dzstretch_s = model_config_rec%dzstretch_s
  RETURN
END SUBROUTINE nl_get_dzstretch_s
SUBROUTINE nl_get_dzstretch_u ( id_id , dzstretch_u )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: dzstretch_u
  INTEGER id_id
  dzstretch_u = model_config_rec%dzstretch_u
  RETURN
END SUBROUTINE nl_get_dzstretch_u
SUBROUTINE nl_get_ocean_levels ( id_id , ocean_levels )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: ocean_levels
  INTEGER id_id
  ocean_levels = model_config_rec%ocean_levels
  RETURN
END SUBROUTINE nl_get_ocean_levels
SUBROUTINE nl_get_ocean_z ( id_id , ocean_z )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: ocean_z
  INTEGER id_id
  ocean_z = model_config_rec%ocean_z(id_id)
  RETURN
END SUBROUTINE nl_get_ocean_z
SUBROUTINE nl_get_ocean_t ( id_id , ocean_t )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: ocean_t
  INTEGER id_id
  ocean_t = model_config_rec%ocean_t(id_id)
  RETURN
END SUBROUTINE nl_get_ocean_t
SUBROUTINE nl_get_ocean_s ( id_id , ocean_s )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: ocean_s
  INTEGER id_id
  ocean_s = model_config_rec%ocean_s(id_id)
  RETURN
END SUBROUTINE nl_get_ocean_s
SUBROUTINE nl_get_num_traj ( id_id , num_traj )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: num_traj
  INTEGER id_id
  num_traj = model_config_rec%num_traj
  RETURN
END SUBROUTINE nl_get_num_traj
SUBROUTINE nl_get_max_ts_level ( id_id , max_ts_level )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: max_ts_level
  INTEGER id_id
  max_ts_level = model_config_rec%max_ts_level
  RETURN
END SUBROUTINE nl_get_max_ts_level
SUBROUTINE nl_get_track_loc_in ( id_id , track_loc_in )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: track_loc_in
  INTEGER id_id
  track_loc_in = model_config_rec%track_loc_in
  RETURN
END SUBROUTINE nl_get_track_loc_in
SUBROUTINE nl_get_num_ext_model_couple_dom ( id_id , num_ext_model_couple_dom )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: num_ext_model_couple_dom
  INTEGER id_id
  num_ext_model_couple_dom = model_config_rec%num_ext_model_couple_dom
  RETURN
END SUBROUTINE nl_get_num_ext_model_couple_dom
SUBROUTINE nl_get_insert_bogus_storm ( id_id , insert_bogus_storm )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: insert_bogus_storm
  INTEGER id_id
  insert_bogus_storm = model_config_rec%insert_bogus_storm
  RETURN
END SUBROUTINE nl_get_insert_bogus_storm
SUBROUTINE nl_get_remove_storm ( id_id , remove_storm )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: remove_storm
  INTEGER id_id
  remove_storm = model_config_rec%remove_storm
  RETURN
END SUBROUTINE nl_get_remove_storm
SUBROUTINE nl_get_num_storm ( id_id , num_storm )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: num_storm
  INTEGER id_id
  num_storm = model_config_rec%num_storm
  RETURN
END SUBROUTINE nl_get_num_storm
SUBROUTINE nl_get_latc_loc ( id_id , latc_loc )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: latc_loc
  INTEGER id_id
  latc_loc = model_config_rec%latc_loc(id_id)
  RETURN
END SUBROUTINE nl_get_latc_loc
SUBROUTINE nl_get_lonc_loc ( id_id , lonc_loc )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: lonc_loc
  INTEGER id_id
  lonc_loc = model_config_rec%lonc_loc(id_id)
  RETURN
END SUBROUTINE nl_get_lonc_loc
SUBROUTINE nl_get_vmax_meters_per_second ( id_id , vmax_meters_per_second )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: vmax_meters_per_second
  INTEGER id_id
  vmax_meters_per_second = model_config_rec%vmax_meters_per_second(id_id)
  RETURN
END SUBROUTINE nl_get_vmax_meters_per_second
SUBROUTINE nl_get_rmax ( id_id , rmax )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: rmax
  INTEGER id_id
  rmax = model_config_rec%rmax(id_id)
  RETURN
END SUBROUTINE nl_get_rmax
SUBROUTINE nl_get_vmax_ratio ( id_id , vmax_ratio )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: vmax_ratio
  INTEGER id_id
  vmax_ratio = model_config_rec%vmax_ratio(id_id)
  RETURN
END SUBROUTINE nl_get_vmax_ratio
SUBROUTINE nl_get_rankine_lid ( id_id , rankine_lid )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: rankine_lid
  INTEGER id_id
  rankine_lid = model_config_rec%rankine_lid
  RETURN
END SUBROUTINE nl_get_rankine_lid
SUBROUTINE nl_get_physics_suite ( id_id , physics_suite )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: physics_suite
  INTEGER id_id
  physics_suite = trim(model_config_rec%physics_suite)
  RETURN
END SUBROUTINE nl_get_physics_suite
SUBROUTINE nl_get_force_read_thompson ( id_id , force_read_thompson )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: force_read_thompson
  INTEGER id_id
  force_read_thompson = model_config_rec%force_read_thompson
  RETURN
END SUBROUTINE nl_get_force_read_thompson
SUBROUTINE nl_get_write_thompson_tables ( id_id , write_thompson_tables )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: write_thompson_tables
  INTEGER id_id
  write_thompson_tables = model_config_rec%write_thompson_tables
  RETURN
END SUBROUTINE nl_get_write_thompson_tables
SUBROUTINE nl_get_mp_physics ( id_id , mp_physics )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: mp_physics
  INTEGER id_id
  mp_physics = model_config_rec%mp_physics(id_id)
  RETURN
END SUBROUTINE nl_get_mp_physics
SUBROUTINE nl_get_nssl_cccn ( id_id , nssl_cccn )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: nssl_cccn
  INTEGER id_id
  nssl_cccn = model_config_rec%nssl_cccn(id_id)
  RETURN
END SUBROUTINE nl_get_nssl_cccn
SUBROUTINE nl_get_nssl_alphah ( id_id , nssl_alphah )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: nssl_alphah
  INTEGER id_id
  nssl_alphah = model_config_rec%nssl_alphah(id_id)
  RETURN
END SUBROUTINE nl_get_nssl_alphah
SUBROUTINE nl_get_nssl_alphahl ( id_id , nssl_alphahl )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: nssl_alphahl
  INTEGER id_id
  nssl_alphahl = model_config_rec%nssl_alphahl(id_id)
  RETURN
END SUBROUTINE nl_get_nssl_alphahl
SUBROUTINE nl_get_nssl_cnoh ( id_id , nssl_cnoh )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: nssl_cnoh
  INTEGER id_id
  nssl_cnoh = model_config_rec%nssl_cnoh(id_id)
  RETURN
END SUBROUTINE nl_get_nssl_cnoh
SUBROUTINE nl_get_nssl_cnohl ( id_id , nssl_cnohl )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: nssl_cnohl
  INTEGER id_id
  nssl_cnohl = model_config_rec%nssl_cnohl(id_id)
  RETURN
END SUBROUTINE nl_get_nssl_cnohl
SUBROUTINE nl_get_nssl_cnor ( id_id , nssl_cnor )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: nssl_cnor
  INTEGER id_id
  nssl_cnor = model_config_rec%nssl_cnor(id_id)
  RETURN
END SUBROUTINE nl_get_nssl_cnor
SUBROUTINE nl_get_nssl_cnos ( id_id , nssl_cnos )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: nssl_cnos
  INTEGER id_id
  nssl_cnos = model_config_rec%nssl_cnos(id_id)
  RETURN
END SUBROUTINE nl_get_nssl_cnos
SUBROUTINE nl_get_nssl_rho_qh ( id_id , nssl_rho_qh )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: nssl_rho_qh
  INTEGER id_id
  nssl_rho_qh = model_config_rec%nssl_rho_qh(id_id)
  RETURN
END SUBROUTINE nl_get_nssl_rho_qh
SUBROUTINE nl_get_nssl_rho_qhl ( id_id , nssl_rho_qhl )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: nssl_rho_qhl
  INTEGER id_id
  nssl_rho_qhl = model_config_rec%nssl_rho_qhl(id_id)
  RETURN
END SUBROUTINE nl_get_nssl_rho_qhl
SUBROUTINE nl_get_nssl_rho_qs ( id_id , nssl_rho_qs )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: nssl_rho_qs
  INTEGER id_id
  nssl_rho_qs = model_config_rec%nssl_rho_qs(id_id)
  RETURN
END SUBROUTINE nl_get_nssl_rho_qs
SUBROUTINE nl_get_nudge_lightning ( id_id , nudge_lightning )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: nudge_lightning
  INTEGER id_id
  nudge_lightning = model_config_rec%nudge_lightning(id_id)
  RETURN
END SUBROUTINE nl_get_nudge_lightning
SUBROUTINE nl_get_nudge_light_times ( id_id , nudge_light_times )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: nudge_light_times
  INTEGER id_id
  nudge_light_times = model_config_rec%nudge_light_times(id_id)
  RETURN
END SUBROUTINE nl_get_nudge_light_times
SUBROUTINE nl_get_nudge_light_timee ( id_id , nudge_light_timee )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: nudge_light_timee
  INTEGER id_id
  nudge_light_timee = model_config_rec%nudge_light_timee(id_id)
  RETURN
END SUBROUTINE nl_get_nudge_light_timee
SUBROUTINE nl_get_nudge_light_int ( id_id , nudge_light_int )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: nudge_light_int
  INTEGER id_id
  nudge_light_int = model_config_rec%nudge_light_int(id_id)
  RETURN
END SUBROUTINE nl_get_nudge_light_int
SUBROUTINE nl_get_path_to_files ( id_id , path_to_files )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: path_to_files
  INTEGER id_id
  path_to_files = trim(model_config_rec%path_to_files)
  RETURN
END SUBROUTINE nl_get_path_to_files
SUBROUTINE nl_get_gsfcgce_hail ( id_id , gsfcgce_hail )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: gsfcgce_hail
  INTEGER id_id
  gsfcgce_hail = model_config_rec%gsfcgce_hail
  RETURN
END SUBROUTINE nl_get_gsfcgce_hail
SUBROUTINE nl_get_gsfcgce_2ice ( id_id , gsfcgce_2ice )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: gsfcgce_2ice
  INTEGER id_id
  gsfcgce_2ice = model_config_rec%gsfcgce_2ice
  RETURN
END SUBROUTINE nl_get_gsfcgce_2ice
SUBROUTINE nl_get_progn ( id_id , progn )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: progn
  INTEGER id_id
  progn = model_config_rec%progn(id_id)
  RETURN
END SUBROUTINE nl_get_progn
SUBROUTINE nl_get_accum_mode ( id_id , accum_mode )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: accum_mode
  INTEGER id_id
  accum_mode = model_config_rec%accum_mode
  RETURN
END SUBROUTINE nl_get_accum_mode
SUBROUTINE nl_get_aitken_mode ( id_id , aitken_mode )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: aitken_mode
  INTEGER id_id
  aitken_mode = model_config_rec%aitken_mode
  RETURN
END SUBROUTINE nl_get_aitken_mode
SUBROUTINE nl_get_coarse_mode ( id_id , coarse_mode )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: coarse_mode
  INTEGER id_id
  coarse_mode = model_config_rec%coarse_mode
  RETURN
END SUBROUTINE nl_get_coarse_mode
SUBROUTINE nl_get_do_radar_ref ( id_id , do_radar_ref )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: do_radar_ref
  INTEGER id_id
  do_radar_ref = model_config_rec%do_radar_ref
  RETURN
END SUBROUTINE nl_get_do_radar_ref
SUBROUTINE nl_get_compute_radar_ref ( id_id , compute_radar_ref )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: compute_radar_ref
  INTEGER id_id
  compute_radar_ref = model_config_rec%compute_radar_ref
  RETURN
END SUBROUTINE nl_get_compute_radar_ref
SUBROUTINE nl_get_ra_lw_physics ( id_id , ra_lw_physics )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: ra_lw_physics
  INTEGER id_id
  ra_lw_physics = model_config_rec%ra_lw_physics(id_id)
  RETURN
END SUBROUTINE nl_get_ra_lw_physics
SUBROUTINE nl_get_ra_sw_physics ( id_id , ra_sw_physics )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: ra_sw_physics
  INTEGER id_id
  ra_sw_physics = model_config_rec%ra_sw_physics(id_id)
  RETURN
END SUBROUTINE nl_get_ra_sw_physics
SUBROUTINE nl_get_radt ( id_id , radt )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: radt
  INTEGER id_id
  radt = model_config_rec%radt(id_id)
  RETURN
END SUBROUTINE nl_get_radt
SUBROUTINE nl_get_naer ( id_id , naer )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: naer
  INTEGER id_id
  naer = model_config_rec%naer(id_id)
  RETURN
END SUBROUTINE nl_get_naer
SUBROUTINE nl_get_sf_sfclay_physics ( id_id , sf_sfclay_physics )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: sf_sfclay_physics
  INTEGER id_id
  sf_sfclay_physics = model_config_rec%sf_sfclay_physics(id_id)
  RETURN
END SUBROUTINE nl_get_sf_sfclay_physics
SUBROUTINE nl_get_sf_surface_physics ( id_id , sf_surface_physics )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: sf_surface_physics
  INTEGER id_id
  sf_surface_physics = model_config_rec%sf_surface_physics(id_id)
  RETURN
END SUBROUTINE nl_get_sf_surface_physics
SUBROUTINE nl_get_bl_pbl_physics ( id_id , bl_pbl_physics )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: bl_pbl_physics
  INTEGER id_id
  bl_pbl_physics = model_config_rec%bl_pbl_physics(id_id)
  RETURN
END SUBROUTINE nl_get_bl_pbl_physics
SUBROUTINE nl_get_bl_mynn_tkebudget ( id_id , bl_mynn_tkebudget )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: bl_mynn_tkebudget
  INTEGER id_id
  bl_mynn_tkebudget = model_config_rec%bl_mynn_tkebudget(id_id)
  RETURN
END SUBROUTINE nl_get_bl_mynn_tkebudget
SUBROUTINE nl_get_ysu_topdown_pblmix ( id_id , ysu_topdown_pblmix )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: ysu_topdown_pblmix
  INTEGER id_id
  ysu_topdown_pblmix = model_config_rec%ysu_topdown_pblmix
  RETURN
END SUBROUTINE nl_get_ysu_topdown_pblmix
SUBROUTINE nl_get_shinhong_tke_diag ( id_id , shinhong_tke_diag )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: shinhong_tke_diag
  INTEGER id_id
  shinhong_tke_diag = model_config_rec%shinhong_tke_diag(id_id)
  RETURN
END SUBROUTINE nl_get_shinhong_tke_diag
SUBROUTINE nl_get_bl_mynn_tkeadvect ( id_id , bl_mynn_tkeadvect )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: bl_mynn_tkeadvect
  INTEGER id_id
  bl_mynn_tkeadvect = model_config_rec%bl_mynn_tkeadvect(id_id)
  RETURN
END SUBROUTINE nl_get_bl_mynn_tkeadvect
SUBROUTINE nl_get_bl_mynn_cloudpdf ( id_id , bl_mynn_cloudpdf )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: bl_mynn_cloudpdf
  INTEGER id_id
  bl_mynn_cloudpdf = model_config_rec%bl_mynn_cloudpdf
  RETURN
END SUBROUTINE nl_get_bl_mynn_cloudpdf
SUBROUTINE nl_get_bl_mynn_mixlength ( id_id , bl_mynn_mixlength )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: bl_mynn_mixlength
  INTEGER id_id
  bl_mynn_mixlength = model_config_rec%bl_mynn_mixlength
  RETURN
END SUBROUTINE nl_get_bl_mynn_mixlength
SUBROUTINE nl_get_bl_mynn_edmf ( id_id , bl_mynn_edmf )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: bl_mynn_edmf
  INTEGER id_id
  bl_mynn_edmf = model_config_rec%bl_mynn_edmf(id_id)
  RETURN
END SUBROUTINE nl_get_bl_mynn_edmf
SUBROUTINE nl_get_bl_mynn_edmf_mom ( id_id , bl_mynn_edmf_mom )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: bl_mynn_edmf_mom
  INTEGER id_id
  bl_mynn_edmf_mom = model_config_rec%bl_mynn_edmf_mom(id_id)
  RETURN
END SUBROUTINE nl_get_bl_mynn_edmf_mom
SUBROUTINE nl_get_bl_mynn_edmf_tke ( id_id , bl_mynn_edmf_tke )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: bl_mynn_edmf_tke
  INTEGER id_id
  bl_mynn_edmf_tke = model_config_rec%bl_mynn_edmf_tke(id_id)
  RETURN
END SUBROUTINE nl_get_bl_mynn_edmf_tke
SUBROUTINE nl_get_bl_mynn_edmf_part ( id_id , bl_mynn_edmf_part )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: bl_mynn_edmf_part
  INTEGER id_id
  bl_mynn_edmf_part = model_config_rec%bl_mynn_edmf_part(id_id)
  RETURN
END SUBROUTINE nl_get_bl_mynn_edmf_part
SUBROUTINE nl_get_bl_mynn_cloudmix ( id_id , bl_mynn_cloudmix )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: bl_mynn_cloudmix
  INTEGER id_id
  bl_mynn_cloudmix = model_config_rec%bl_mynn_cloudmix(id_id)
  RETURN
END SUBROUTINE nl_get_bl_mynn_cloudmix
SUBROUTINE nl_get_bl_mynn_mixqt ( id_id , bl_mynn_mixqt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: bl_mynn_mixqt
  INTEGER id_id
  bl_mynn_mixqt = model_config_rec%bl_mynn_mixqt(id_id)
  RETURN
END SUBROUTINE nl_get_bl_mynn_mixqt
SUBROUTINE nl_get_icloud_bl ( id_id , icloud_bl )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: icloud_bl
  INTEGER id_id
  icloud_bl = model_config_rec%icloud_bl
  RETURN
END SUBROUTINE nl_get_icloud_bl
SUBROUTINE nl_get_mfshconv ( id_id , mfshconv )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: mfshconv
  INTEGER id_id
  mfshconv = model_config_rec%mfshconv(id_id)
  RETURN
END SUBROUTINE nl_get_mfshconv
SUBROUTINE nl_get_sf_urban_physics ( id_id , sf_urban_physics )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: sf_urban_physics
  INTEGER id_id
  sf_urban_physics = model_config_rec%sf_urban_physics(id_id)
  RETURN
END SUBROUTINE nl_get_sf_urban_physics
SUBROUTINE nl_get_bldt ( id_id , bldt )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: bldt
  INTEGER id_id
  bldt = model_config_rec%bldt(id_id)
  RETURN
END SUBROUTINE nl_get_bldt
SUBROUTINE nl_get_cu_physics ( id_id , cu_physics )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: cu_physics
  INTEGER id_id
  cu_physics = model_config_rec%cu_physics(id_id)
  RETURN
END SUBROUTINE nl_get_cu_physics
SUBROUTINE nl_get_shcu_physics ( id_id , shcu_physics )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: shcu_physics
  INTEGER id_id
  shcu_physics = model_config_rec%shcu_physics(id_id)
  RETURN
END SUBROUTINE nl_get_shcu_physics
SUBROUTINE nl_get_cu_diag ( id_id , cu_diag )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: cu_diag
  INTEGER id_id
  cu_diag = model_config_rec%cu_diag(id_id)
  RETURN
END SUBROUTINE nl_get_cu_diag
SUBROUTINE nl_get_kf_edrates ( id_id , kf_edrates )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: kf_edrates
  INTEGER id_id
  kf_edrates = model_config_rec%kf_edrates(id_id)
  RETURN
END SUBROUTINE nl_get_kf_edrates
SUBROUTINE nl_get_kfeta_trigger ( id_id , kfeta_trigger )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: kfeta_trigger
  INTEGER id_id
  kfeta_trigger = model_config_rec%kfeta_trigger
  RETURN
END SUBROUTINE nl_get_kfeta_trigger
SUBROUTINE nl_get_nsas_dx_factor ( id_id , nsas_dx_factor )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: nsas_dx_factor
  INTEGER id_id
  nsas_dx_factor = model_config_rec%nsas_dx_factor
  RETURN
END SUBROUTINE nl_get_nsas_dx_factor
SUBROUTINE nl_get_cudt ( id_id , cudt )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: cudt
  INTEGER id_id
  cudt = model_config_rec%cudt(id_id)
  RETURN
END SUBROUTINE nl_get_cudt
SUBROUTINE nl_get_gsmdt ( id_id , gsmdt )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: gsmdt
  INTEGER id_id
  gsmdt = model_config_rec%gsmdt(id_id)
  RETURN
END SUBROUTINE nl_get_gsmdt
SUBROUTINE nl_get_isfflx ( id_id , isfflx )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: isfflx
  INTEGER id_id
  isfflx = model_config_rec%isfflx
  RETURN
END SUBROUTINE nl_get_isfflx
SUBROUTINE nl_get_ifsnow ( id_id , ifsnow )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: ifsnow
  INTEGER id_id
  ifsnow = model_config_rec%ifsnow
  RETURN
END SUBROUTINE nl_get_ifsnow
#endif
#if (NNN == 1)
SUBROUTINE nl_get_icloud ( id_id , icloud )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: icloud
  INTEGER id_id
  icloud = model_config_rec%icloud
  RETURN
END SUBROUTINE nl_get_icloud
SUBROUTINE nl_get_ideal_xland ( id_id , ideal_xland )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: ideal_xland
  INTEGER id_id
  ideal_xland = model_config_rec%ideal_xland
  RETURN
END SUBROUTINE nl_get_ideal_xland
SUBROUTINE nl_get_swrad_scat ( id_id , swrad_scat )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: swrad_scat
  INTEGER id_id
  swrad_scat = model_config_rec%swrad_scat
  RETURN
END SUBROUTINE nl_get_swrad_scat
SUBROUTINE nl_get_surface_input_source ( id_id , surface_input_source )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: surface_input_source
  INTEGER id_id
  surface_input_source = model_config_rec%surface_input_source
  RETURN
END SUBROUTINE nl_get_surface_input_source
SUBROUTINE nl_get_num_soil_layers ( id_id , num_soil_layers )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: num_soil_layers
  INTEGER id_id
  num_soil_layers = model_config_rec%num_soil_layers
  RETURN
END SUBROUTINE nl_get_num_soil_layers
SUBROUTINE nl_get_maxpatch ( id_id , maxpatch )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: maxpatch
  INTEGER id_id
  maxpatch = model_config_rec%maxpatch
  RETURN
END SUBROUTINE nl_get_maxpatch
SUBROUTINE nl_get_num_snow_layers ( id_id , num_snow_layers )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: num_snow_layers
  INTEGER id_id
  num_snow_layers = model_config_rec%num_snow_layers
  RETURN
END SUBROUTINE nl_get_num_snow_layers
SUBROUTINE nl_get_num_snso_layers ( id_id , num_snso_layers )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: num_snso_layers
  INTEGER id_id
  num_snso_layers = model_config_rec%num_snso_layers
  RETURN
END SUBROUTINE nl_get_num_snso_layers
SUBROUTINE nl_get_num_urban_layers ( id_id , num_urban_layers )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: num_urban_layers
  INTEGER id_id
  num_urban_layers = model_config_rec%num_urban_layers
  RETURN
END SUBROUTINE nl_get_num_urban_layers
SUBROUTINE nl_get_num_urban_hi ( id_id , num_urban_hi )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: num_urban_hi
  INTEGER id_id
  num_urban_hi = model_config_rec%num_urban_hi
  RETURN
END SUBROUTINE nl_get_num_urban_hi
SUBROUTINE nl_get_num_months ( id_id , num_months )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: num_months
  INTEGER id_id
  num_months = model_config_rec%num_months
  RETURN
END SUBROUTINE nl_get_num_months
SUBROUTINE nl_get_sf_surface_mosaic ( id_id , sf_surface_mosaic )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: sf_surface_mosaic
  INTEGER id_id
  sf_surface_mosaic = model_config_rec%sf_surface_mosaic
  RETURN
END SUBROUTINE nl_get_sf_surface_mosaic
SUBROUTINE nl_get_mosaic_cat ( id_id , mosaic_cat )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: mosaic_cat
  INTEGER id_id
  mosaic_cat = model_config_rec%mosaic_cat
  RETURN
END SUBROUTINE nl_get_mosaic_cat
SUBROUTINE nl_get_mosaic_cat_soil ( id_id , mosaic_cat_soil )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: mosaic_cat_soil
  INTEGER id_id
  mosaic_cat_soil = model_config_rec%mosaic_cat_soil
  RETURN
END SUBROUTINE nl_get_mosaic_cat_soil
SUBROUTINE nl_get_mosaic_lu ( id_id , mosaic_lu )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: mosaic_lu
  INTEGER id_id
  mosaic_lu = model_config_rec%mosaic_lu
  RETURN
END SUBROUTINE nl_get_mosaic_lu
SUBROUTINE nl_get_mosaic_soil ( id_id , mosaic_soil )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: mosaic_soil
  INTEGER id_id
  mosaic_soil = model_config_rec%mosaic_soil
  RETURN
END SUBROUTINE nl_get_mosaic_soil
SUBROUTINE nl_get_maxiens ( id_id , maxiens )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: maxiens
  INTEGER id_id
  maxiens = model_config_rec%maxiens
  RETURN
END SUBROUTINE nl_get_maxiens
SUBROUTINE nl_get_maxens ( id_id , maxens )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: maxens
  INTEGER id_id
  maxens = model_config_rec%maxens
  RETURN
END SUBROUTINE nl_get_maxens
SUBROUTINE nl_get_maxens2 ( id_id , maxens2 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: maxens2
  INTEGER id_id
  maxens2 = model_config_rec%maxens2
  RETURN
END SUBROUTINE nl_get_maxens2
SUBROUTINE nl_get_maxens3 ( id_id , maxens3 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: maxens3
  INTEGER id_id
  maxens3 = model_config_rec%maxens3
  RETURN
END SUBROUTINE nl_get_maxens3
SUBROUTINE nl_get_ensdim ( id_id , ensdim )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: ensdim
  INTEGER id_id
  ensdim = model_config_rec%ensdim
  RETURN
END SUBROUTINE nl_get_ensdim
SUBROUTINE nl_get_cugd_avedx ( id_id , cugd_avedx )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: cugd_avedx
  INTEGER id_id
  cugd_avedx = model_config_rec%cugd_avedx
  RETURN
END SUBROUTINE nl_get_cugd_avedx
SUBROUTINE nl_get_clos_choice ( id_id , clos_choice )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: clos_choice
  INTEGER id_id
  clos_choice = model_config_rec%clos_choice
  RETURN
END SUBROUTINE nl_get_clos_choice
SUBROUTINE nl_get_imomentum ( id_id , imomentum )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: imomentum
  INTEGER id_id
  imomentum = model_config_rec%imomentum
  RETURN
END SUBROUTINE nl_get_imomentum
SUBROUTINE nl_get_ishallow ( id_id , ishallow )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: ishallow
  INTEGER id_id
  ishallow = model_config_rec%ishallow
  RETURN
END SUBROUTINE nl_get_ishallow
SUBROUTINE nl_get_convtrans_avglen_m ( id_id , convtrans_avglen_m )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: convtrans_avglen_m
  INTEGER id_id
  convtrans_avglen_m = model_config_rec%convtrans_avglen_m
  RETURN
END SUBROUTINE nl_get_convtrans_avglen_m
SUBROUTINE nl_get_num_land_cat ( id_id , num_land_cat )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: num_land_cat
  INTEGER id_id
  num_land_cat = model_config_rec%num_land_cat
  RETURN
END SUBROUTINE nl_get_num_land_cat
SUBROUTINE nl_get_num_soil_cat ( id_id , num_soil_cat )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: num_soil_cat
  INTEGER id_id
  num_soil_cat = model_config_rec%num_soil_cat
  RETURN
END SUBROUTINE nl_get_num_soil_cat
SUBROUTINE nl_get_mp_zero_out ( id_id , mp_zero_out )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: mp_zero_out
  INTEGER id_id
  mp_zero_out = model_config_rec%mp_zero_out
  RETURN
END SUBROUTINE nl_get_mp_zero_out
SUBROUTINE nl_get_mp_zero_out_thresh ( id_id , mp_zero_out_thresh )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: mp_zero_out_thresh
  INTEGER id_id
  mp_zero_out_thresh = model_config_rec%mp_zero_out_thresh
  RETURN
END SUBROUTINE nl_get_mp_zero_out_thresh
SUBROUTINE nl_get_seaice_threshold ( id_id , seaice_threshold )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: seaice_threshold
  INTEGER id_id
  seaice_threshold = model_config_rec%seaice_threshold
  RETURN
END SUBROUTINE nl_get_seaice_threshold
SUBROUTINE nl_get_sst_update ( id_id , sst_update )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: sst_update
  INTEGER id_id
  sst_update = model_config_rec%sst_update
  RETURN
END SUBROUTINE nl_get_sst_update
SUBROUTINE nl_get_sst_skin ( id_id , sst_skin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: sst_skin
  INTEGER id_id
  sst_skin = model_config_rec%sst_skin
  RETURN
END SUBROUTINE nl_get_sst_skin
SUBROUTINE nl_get_tmn_update ( id_id , tmn_update )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: tmn_update
  INTEGER id_id
  tmn_update = model_config_rec%tmn_update
  RETURN
END SUBROUTINE nl_get_tmn_update
SUBROUTINE nl_get_usemonalb ( id_id , usemonalb )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: usemonalb
  INTEGER id_id
  usemonalb = model_config_rec%usemonalb
  RETURN
END SUBROUTINE nl_get_usemonalb
SUBROUTINE nl_get_rdmaxalb ( id_id , rdmaxalb )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: rdmaxalb
  INTEGER id_id
  rdmaxalb = model_config_rec%rdmaxalb
  RETURN
END SUBROUTINE nl_get_rdmaxalb
SUBROUTINE nl_get_rdlai2d ( id_id , rdlai2d )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: rdlai2d
  INTEGER id_id
  rdlai2d = model_config_rec%rdlai2d
  RETURN
END SUBROUTINE nl_get_rdlai2d
SUBROUTINE nl_get_ua_phys ( id_id , ua_phys )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: ua_phys
  INTEGER id_id
  ua_phys = model_config_rec%ua_phys
  RETURN
END SUBROUTINE nl_get_ua_phys
SUBROUTINE nl_get_opt_thcnd ( id_id , opt_thcnd )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: opt_thcnd
  INTEGER id_id
  opt_thcnd = model_config_rec%opt_thcnd
  RETURN
END SUBROUTINE nl_get_opt_thcnd
SUBROUTINE nl_get_co2tf ( id_id , co2tf )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: co2tf
  INTEGER id_id
  co2tf = model_config_rec%co2tf
  RETURN
END SUBROUTINE nl_get_co2tf
SUBROUTINE nl_get_ra_call_offset ( id_id , ra_call_offset )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: ra_call_offset
  INTEGER id_id
  ra_call_offset = model_config_rec%ra_call_offset
  RETURN
END SUBROUTINE nl_get_ra_call_offset
SUBROUTINE nl_get_cam_abs_freq_s ( id_id , cam_abs_freq_s )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: cam_abs_freq_s
  INTEGER id_id
  cam_abs_freq_s = model_config_rec%cam_abs_freq_s
  RETURN
END SUBROUTINE nl_get_cam_abs_freq_s
SUBROUTINE nl_get_levsiz ( id_id , levsiz )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: levsiz
  INTEGER id_id
  levsiz = model_config_rec%levsiz
  RETURN
END SUBROUTINE nl_get_levsiz
SUBROUTINE nl_get_paerlev ( id_id , paerlev )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: paerlev
  INTEGER id_id
  paerlev = model_config_rec%paerlev
  RETURN
END SUBROUTINE nl_get_paerlev
SUBROUTINE nl_get_cam_abs_dim1 ( id_id , cam_abs_dim1 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: cam_abs_dim1
  INTEGER id_id
  cam_abs_dim1 = model_config_rec%cam_abs_dim1
  RETURN
END SUBROUTINE nl_get_cam_abs_dim1
SUBROUTINE nl_get_cam_abs_dim2 ( id_id , cam_abs_dim2 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: cam_abs_dim2
  INTEGER id_id
  cam_abs_dim2 = model_config_rec%cam_abs_dim2
  RETURN
END SUBROUTINE nl_get_cam_abs_dim2
SUBROUTINE nl_get_lagday ( id_id , lagday )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: lagday
  INTEGER id_id
  lagday = model_config_rec%lagday
  RETURN
END SUBROUTINE nl_get_lagday
SUBROUTINE nl_get_no_src_types ( id_id , no_src_types )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: no_src_types
  INTEGER id_id
  no_src_types = model_config_rec%no_src_types
  RETURN
END SUBROUTINE nl_get_no_src_types
SUBROUTINE nl_get_alevsiz ( id_id , alevsiz )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: alevsiz
  INTEGER id_id
  alevsiz = model_config_rec%alevsiz
  RETURN
END SUBROUTINE nl_get_alevsiz
SUBROUTINE nl_get_o3input ( id_id , o3input )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: o3input
  INTEGER id_id
  o3input = model_config_rec%o3input
  RETURN
END SUBROUTINE nl_get_o3input
SUBROUTINE nl_get_aer_opt ( id_id , aer_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: aer_opt
  INTEGER id_id
  aer_opt = model_config_rec%aer_opt
  RETURN
END SUBROUTINE nl_get_aer_opt
SUBROUTINE nl_get_swint_opt ( id_id , swint_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: swint_opt
  INTEGER id_id
  swint_opt = model_config_rec%swint_opt
  RETURN
END SUBROUTINE nl_get_swint_opt
SUBROUTINE nl_get_aer_type ( id_id , aer_type )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: aer_type
  INTEGER id_id
  aer_type = model_config_rec%aer_type(id_id)
  RETURN
END SUBROUTINE nl_get_aer_type
SUBROUTINE nl_get_aer_aod550_opt ( id_id , aer_aod550_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: aer_aod550_opt
  INTEGER id_id
  aer_aod550_opt = model_config_rec%aer_aod550_opt(id_id)
  RETURN
END SUBROUTINE nl_get_aer_aod550_opt
SUBROUTINE nl_get_aer_angexp_opt ( id_id , aer_angexp_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: aer_angexp_opt
  INTEGER id_id
  aer_angexp_opt = model_config_rec%aer_angexp_opt(id_id)
  RETURN
END SUBROUTINE nl_get_aer_angexp_opt
SUBROUTINE nl_get_aer_ssa_opt ( id_id , aer_ssa_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: aer_ssa_opt
  INTEGER id_id
  aer_ssa_opt = model_config_rec%aer_ssa_opt(id_id)
  RETURN
END SUBROUTINE nl_get_aer_ssa_opt
SUBROUTINE nl_get_aer_asy_opt ( id_id , aer_asy_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: aer_asy_opt
  INTEGER id_id
  aer_asy_opt = model_config_rec%aer_asy_opt(id_id)
  RETURN
END SUBROUTINE nl_get_aer_asy_opt
SUBROUTINE nl_get_aer_aod550_val ( id_id , aer_aod550_val )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: aer_aod550_val
  INTEGER id_id
  aer_aod550_val = model_config_rec%aer_aod550_val(id_id)
  RETURN
END SUBROUTINE nl_get_aer_aod550_val
SUBROUTINE nl_get_aer_angexp_val ( id_id , aer_angexp_val )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: aer_angexp_val
  INTEGER id_id
  aer_angexp_val = model_config_rec%aer_angexp_val(id_id)
  RETURN
END SUBROUTINE nl_get_aer_angexp_val
SUBROUTINE nl_get_aer_ssa_val ( id_id , aer_ssa_val )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: aer_ssa_val
  INTEGER id_id
  aer_ssa_val = model_config_rec%aer_ssa_val(id_id)
  RETURN
END SUBROUTINE nl_get_aer_ssa_val
SUBROUTINE nl_get_aer_asy_val ( id_id , aer_asy_val )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: aer_asy_val
  INTEGER id_id
  aer_asy_val = model_config_rec%aer_asy_val(id_id)
  RETURN
END SUBROUTINE nl_get_aer_asy_val
SUBROUTINE nl_get_cu_rad_feedback ( id_id , cu_rad_feedback )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: cu_rad_feedback
  INTEGER id_id
  cu_rad_feedback = model_config_rec%cu_rad_feedback(id_id)
  RETURN
END SUBROUTINE nl_get_cu_rad_feedback
SUBROUTINE nl_get_dust_emis ( id_id , dust_emis )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: dust_emis
  INTEGER id_id
  dust_emis = model_config_rec%dust_emis
  RETURN
END SUBROUTINE nl_get_dust_emis
SUBROUTINE nl_get_erosion_dim ( id_id , erosion_dim )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: erosion_dim
  INTEGER id_id
  erosion_dim = model_config_rec%erosion_dim
  RETURN
END SUBROUTINE nl_get_erosion_dim
SUBROUTINE nl_get_no_src_types_cu ( id_id , no_src_types_cu )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: no_src_types_cu
  INTEGER id_id
  no_src_types_cu = model_config_rec%no_src_types_cu
  RETURN
END SUBROUTINE nl_get_no_src_types_cu
SUBROUTINE nl_get_alevsiz_cu ( id_id , alevsiz_cu )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: alevsiz_cu
  INTEGER id_id
  alevsiz_cu = model_config_rec%alevsiz_cu
  RETURN
END SUBROUTINE nl_get_alevsiz_cu
SUBROUTINE nl_get_aercu_opt ( id_id , aercu_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: aercu_opt
  INTEGER id_id
  aercu_opt = model_config_rec%aercu_opt
  RETURN
END SUBROUTINE nl_get_aercu_opt
SUBROUTINE nl_get_aercu_fct ( id_id , aercu_fct )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: aercu_fct
  INTEGER id_id
  aercu_fct = model_config_rec%aercu_fct
  RETURN
END SUBROUTINE nl_get_aercu_fct
SUBROUTINE nl_get_aercu_used ( id_id , aercu_used )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: aercu_used
  INTEGER id_id
  aercu_used = model_config_rec%aercu_used
  RETURN
END SUBROUTINE nl_get_aercu_used
SUBROUTINE nl_get_shallowcu_forced_ra ( id_id , shallowcu_forced_ra )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: shallowcu_forced_ra
  INTEGER id_id
  shallowcu_forced_ra = model_config_rec%shallowcu_forced_ra(id_id)
  RETURN
END SUBROUTINE nl_get_shallowcu_forced_ra
SUBROUTINE nl_get_numbins ( id_id , numbins )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: numbins
  INTEGER id_id
  numbins = model_config_rec%numbins(id_id)
  RETURN
END SUBROUTINE nl_get_numbins
SUBROUTINE nl_get_thbinsize ( id_id , thbinsize )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: thbinsize
  INTEGER id_id
  thbinsize = model_config_rec%thbinsize(id_id)
  RETURN
END SUBROUTINE nl_get_thbinsize
SUBROUTINE nl_get_rbinsize ( id_id , rbinsize )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: rbinsize
  INTEGER id_id
  rbinsize = model_config_rec%rbinsize(id_id)
  RETURN
END SUBROUTINE nl_get_rbinsize
SUBROUTINE nl_get_mindeepfreq ( id_id , mindeepfreq )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: mindeepfreq
  INTEGER id_id
  mindeepfreq = model_config_rec%mindeepfreq(id_id)
  RETURN
END SUBROUTINE nl_get_mindeepfreq
SUBROUTINE nl_get_minshallowfreq ( id_id , minshallowfreq )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: minshallowfreq
  INTEGER id_id
  minshallowfreq = model_config_rec%minshallowfreq(id_id)
  RETURN
END SUBROUTINE nl_get_minshallowfreq
SUBROUTINE nl_get_shcu_aerosols_opt ( id_id , shcu_aerosols_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: shcu_aerosols_opt
  INTEGER id_id
  shcu_aerosols_opt = model_config_rec%shcu_aerosols_opt(id_id)
  RETURN
END SUBROUTINE nl_get_shcu_aerosols_opt
SUBROUTINE nl_get_icloud_cu ( id_id , icloud_cu )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: icloud_cu
  INTEGER id_id
  icloud_cu = model_config_rec%icloud_cu(id_id)
  RETURN
END SUBROUTINE nl_get_icloud_cu
SUBROUTINE nl_get_pxlsm_smois_init ( id_id , pxlsm_smois_init )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: pxlsm_smois_init
  INTEGER id_id
  pxlsm_smois_init = model_config_rec%pxlsm_smois_init(id_id)
  RETURN
END SUBROUTINE nl_get_pxlsm_smois_init
SUBROUTINE nl_get_omlcall ( id_id , omlcall )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: omlcall
  INTEGER id_id
  omlcall = model_config_rec%omlcall
  RETURN
END SUBROUTINE nl_get_omlcall
SUBROUTINE nl_get_sf_ocean_physics ( id_id , sf_ocean_physics )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: sf_ocean_physics
  INTEGER id_id
  sf_ocean_physics = model_config_rec%sf_ocean_physics
  RETURN
END SUBROUTINE nl_get_sf_ocean_physics
SUBROUTINE nl_get_traj_opt ( id_id , traj_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: traj_opt
  INTEGER id_id
  traj_opt = model_config_rec%traj_opt
  RETURN
END SUBROUTINE nl_get_traj_opt
SUBROUTINE nl_get_dm_has_traj ( id_id , dm_has_traj )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: dm_has_traj
  INTEGER id_id
  dm_has_traj = model_config_rec%dm_has_traj(id_id)
  RETURN
END SUBROUTINE nl_get_dm_has_traj
SUBROUTINE nl_get_tracercall ( id_id , tracercall )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: tracercall
  INTEGER id_id
  tracercall = model_config_rec%tracercall
  RETURN
END SUBROUTINE nl_get_tracercall
SUBROUTINE nl_get_omdt ( id_id , omdt )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: omdt
  INTEGER id_id
  omdt = model_config_rec%omdt
  RETURN
END SUBROUTINE nl_get_omdt
SUBROUTINE nl_get_oml_hml0 ( id_id , oml_hml0 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: oml_hml0
  INTEGER id_id
  oml_hml0 = model_config_rec%oml_hml0
  RETURN
END SUBROUTINE nl_get_oml_hml0
SUBROUTINE nl_get_oml_gamma ( id_id , oml_gamma )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: oml_gamma
  INTEGER id_id
  oml_gamma = model_config_rec%oml_gamma
  RETURN
END SUBROUTINE nl_get_oml_gamma
SUBROUTINE nl_get_oml_relaxation_time ( id_id , oml_relaxation_time )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: oml_relaxation_time
  INTEGER id_id
  oml_relaxation_time = model_config_rec%oml_relaxation_time
  RETURN
END SUBROUTINE nl_get_oml_relaxation_time
SUBROUTINE nl_get_isftcflx ( id_id , isftcflx )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: isftcflx
  INTEGER id_id
  isftcflx = model_config_rec%isftcflx
  RETURN
END SUBROUTINE nl_get_isftcflx
SUBROUTINE nl_get_iz0tlnd ( id_id , iz0tlnd )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: iz0tlnd
  INTEGER id_id
  iz0tlnd = model_config_rec%iz0tlnd
  RETURN
END SUBROUTINE nl_get_iz0tlnd
SUBROUTINE nl_get_shadlen ( id_id , shadlen )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: shadlen
  INTEGER id_id
  shadlen = model_config_rec%shadlen
  RETURN
END SUBROUTINE nl_get_shadlen
SUBROUTINE nl_get_slope_rad ( id_id , slope_rad )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: slope_rad
  INTEGER id_id
  slope_rad = model_config_rec%slope_rad(id_id)
  RETURN
END SUBROUTINE nl_get_slope_rad
SUBROUTINE nl_get_topo_shading ( id_id , topo_shading )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: topo_shading
  INTEGER id_id
  topo_shading = model_config_rec%topo_shading(id_id)
  RETURN
END SUBROUTINE nl_get_topo_shading
SUBROUTINE nl_get_topo_wind ( id_id , topo_wind )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: topo_wind
  INTEGER id_id
  topo_wind = model_config_rec%topo_wind(id_id)
  RETURN
END SUBROUTINE nl_get_topo_wind
SUBROUTINE nl_get_no_mp_heating ( id_id , no_mp_heating )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: no_mp_heating
  INTEGER id_id
  no_mp_heating = model_config_rec%no_mp_heating
  RETURN
END SUBROUTINE nl_get_no_mp_heating
SUBROUTINE nl_get_fractional_seaice ( id_id , fractional_seaice )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: fractional_seaice
  INTEGER id_id
  fractional_seaice = model_config_rec%fractional_seaice
  RETURN
END SUBROUTINE nl_get_fractional_seaice
SUBROUTINE nl_get_seaice_snowdepth_opt ( id_id , seaice_snowdepth_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: seaice_snowdepth_opt
  INTEGER id_id
  seaice_snowdepth_opt = model_config_rec%seaice_snowdepth_opt
  RETURN
END SUBROUTINE nl_get_seaice_snowdepth_opt
SUBROUTINE nl_get_seaice_snowdepth_max ( id_id , seaice_snowdepth_max )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: seaice_snowdepth_max
  INTEGER id_id
  seaice_snowdepth_max = model_config_rec%seaice_snowdepth_max
  RETURN
END SUBROUTINE nl_get_seaice_snowdepth_max
SUBROUTINE nl_get_seaice_snowdepth_min ( id_id , seaice_snowdepth_min )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: seaice_snowdepth_min
  INTEGER id_id
  seaice_snowdepth_min = model_config_rec%seaice_snowdepth_min
  RETURN
END SUBROUTINE nl_get_seaice_snowdepth_min
SUBROUTINE nl_get_seaice_albedo_opt ( id_id , seaice_albedo_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: seaice_albedo_opt
  INTEGER id_id
  seaice_albedo_opt = model_config_rec%seaice_albedo_opt
  RETURN
END SUBROUTINE nl_get_seaice_albedo_opt
SUBROUTINE nl_get_seaice_albedo_default ( id_id , seaice_albedo_default )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: seaice_albedo_default
  INTEGER id_id
  seaice_albedo_default = model_config_rec%seaice_albedo_default
  RETURN
END SUBROUTINE nl_get_seaice_albedo_default
SUBROUTINE nl_get_seaice_thickness_opt ( id_id , seaice_thickness_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: seaice_thickness_opt
  INTEGER id_id
  seaice_thickness_opt = model_config_rec%seaice_thickness_opt
  RETURN
END SUBROUTINE nl_get_seaice_thickness_opt
SUBROUTINE nl_get_seaice_thickness_default ( id_id , seaice_thickness_default )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: seaice_thickness_default
  INTEGER id_id
  seaice_thickness_default = model_config_rec%seaice_thickness_default
  RETURN
END SUBROUTINE nl_get_seaice_thickness_default
SUBROUTINE nl_get_tice2tsk_if2cold ( id_id , tice2tsk_if2cold )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: tice2tsk_if2cold
  INTEGER id_id
  tice2tsk_if2cold = model_config_rec%tice2tsk_if2cold
  RETURN
END SUBROUTINE nl_get_tice2tsk_if2cold
SUBROUTINE nl_get_bucket_mm ( id_id , bucket_mm )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: bucket_mm
  INTEGER id_id
  bucket_mm = model_config_rec%bucket_mm
  RETURN
END SUBROUTINE nl_get_bucket_mm
SUBROUTINE nl_get_bucket_j ( id_id , bucket_j )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: bucket_j
  INTEGER id_id
  bucket_j = model_config_rec%bucket_j
  RETURN
END SUBROUTINE nl_get_bucket_j
SUBROUTINE nl_get_mp_tend_lim ( id_id , mp_tend_lim )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: mp_tend_lim
  INTEGER id_id
  mp_tend_lim = model_config_rec%mp_tend_lim
  RETURN
END SUBROUTINE nl_get_mp_tend_lim
SUBROUTINE nl_get_prec_acc_dt ( id_id , prec_acc_dt )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: prec_acc_dt
  INTEGER id_id
  prec_acc_dt = model_config_rec%prec_acc_dt(id_id)
  RETURN
END SUBROUTINE nl_get_prec_acc_dt
SUBROUTINE nl_get_prec_acc_opt ( id_id , prec_acc_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: prec_acc_opt
  INTEGER id_id
  prec_acc_opt = model_config_rec%prec_acc_opt
  RETURN
END SUBROUTINE nl_get_prec_acc_opt
SUBROUTINE nl_get_bucketr_opt ( id_id , bucketr_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: bucketr_opt
  INTEGER id_id
  bucketr_opt = model_config_rec%bucketr_opt
  RETURN
END SUBROUTINE nl_get_bucketr_opt
SUBROUTINE nl_get_bucketf_opt ( id_id , bucketf_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: bucketf_opt
  INTEGER id_id
  bucketf_opt = model_config_rec%bucketf_opt
  RETURN
END SUBROUTINE nl_get_bucketf_opt
SUBROUTINE nl_get_process_time_series ( id_id , process_time_series )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: process_time_series
  INTEGER id_id
  process_time_series = model_config_rec%process_time_series
  RETURN
END SUBROUTINE nl_get_process_time_series
SUBROUTINE nl_get_grav_settling ( id_id , grav_settling )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: grav_settling
  INTEGER id_id
  grav_settling = model_config_rec%grav_settling(id_id)
  RETURN
END SUBROUTINE nl_get_grav_settling
SUBROUTINE nl_get_sas_pgcon ( id_id , sas_pgcon )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: sas_pgcon
  INTEGER id_id
  sas_pgcon = model_config_rec%sas_pgcon(id_id)
  RETURN
END SUBROUTINE nl_get_sas_pgcon
SUBROUTINE nl_get_scalar_pblmix ( id_id , scalar_pblmix )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: scalar_pblmix
  INTEGER id_id
  scalar_pblmix = model_config_rec%scalar_pblmix(id_id)
  RETURN
END SUBROUTINE nl_get_scalar_pblmix
SUBROUTINE nl_get_tracer_pblmix ( id_id , tracer_pblmix )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: tracer_pblmix
  INTEGER id_id
  tracer_pblmix = model_config_rec%tracer_pblmix(id_id)
  RETURN
END SUBROUTINE nl_get_tracer_pblmix
SUBROUTINE nl_get_use_aero_icbc ( id_id , use_aero_icbc )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: use_aero_icbc
  INTEGER id_id
  use_aero_icbc = model_config_rec%use_aero_icbc
  RETURN
END SUBROUTINE nl_get_use_aero_icbc
SUBROUTINE nl_get_use_rap_aero_icbc ( id_id , use_rap_aero_icbc )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: use_rap_aero_icbc
  INTEGER id_id
  use_rap_aero_icbc = model_config_rec%use_rap_aero_icbc
  RETURN
END SUBROUTINE nl_get_use_rap_aero_icbc
SUBROUTINE nl_get_use_mp_re ( id_id , use_mp_re )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: use_mp_re
  INTEGER id_id
  use_mp_re = model_config_rec%use_mp_re
  RETURN
END SUBROUTINE nl_get_use_mp_re
SUBROUTINE nl_get_ccn_conc ( id_id , ccn_conc )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: ccn_conc
  INTEGER id_id
  ccn_conc = model_config_rec%ccn_conc
  RETURN
END SUBROUTINE nl_get_ccn_conc
SUBROUTINE nl_get_hail_opt ( id_id , hail_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: hail_opt
  INTEGER id_id
  hail_opt = model_config_rec%hail_opt
  RETURN
END SUBROUTINE nl_get_hail_opt
SUBROUTINE nl_get_morr_rimed_ice ( id_id , morr_rimed_ice )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: morr_rimed_ice
  INTEGER id_id
  morr_rimed_ice = model_config_rec%morr_rimed_ice
  RETURN
END SUBROUTINE nl_get_morr_rimed_ice
SUBROUTINE nl_get_clean_atm_diag ( id_id , clean_atm_diag )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: clean_atm_diag
  INTEGER id_id
  clean_atm_diag = model_config_rec%clean_atm_diag
  RETURN
END SUBROUTINE nl_get_clean_atm_diag
SUBROUTINE nl_get_calc_clean_atm_diag ( id_id , calc_clean_atm_diag )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: calc_clean_atm_diag
  INTEGER id_id
  calc_clean_atm_diag = model_config_rec%calc_clean_atm_diag
  RETURN
END SUBROUTINE nl_get_calc_clean_atm_diag
SUBROUTINE nl_get_dveg ( id_id , dveg )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: dveg
  INTEGER id_id
  dveg = model_config_rec%dveg
  RETURN
END SUBROUTINE nl_get_dveg
SUBROUTINE nl_get_opt_crs ( id_id , opt_crs )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: opt_crs
  INTEGER id_id
  opt_crs = model_config_rec%opt_crs
  RETURN
END SUBROUTINE nl_get_opt_crs
SUBROUTINE nl_get_opt_btr ( id_id , opt_btr )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: opt_btr
  INTEGER id_id
  opt_btr = model_config_rec%opt_btr
  RETURN
END SUBROUTINE nl_get_opt_btr
SUBROUTINE nl_get_opt_run ( id_id , opt_run )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: opt_run
  INTEGER id_id
  opt_run = model_config_rec%opt_run
  RETURN
END SUBROUTINE nl_get_opt_run
SUBROUTINE nl_get_opt_sfc ( id_id , opt_sfc )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: opt_sfc
  INTEGER id_id
  opt_sfc = model_config_rec%opt_sfc
  RETURN
END SUBROUTINE nl_get_opt_sfc
SUBROUTINE nl_get_opt_frz ( id_id , opt_frz )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: opt_frz
  INTEGER id_id
  opt_frz = model_config_rec%opt_frz
  RETURN
END SUBROUTINE nl_get_opt_frz
SUBROUTINE nl_get_opt_inf ( id_id , opt_inf )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: opt_inf
  INTEGER id_id
  opt_inf = model_config_rec%opt_inf
  RETURN
END SUBROUTINE nl_get_opt_inf
SUBROUTINE nl_get_opt_rad ( id_id , opt_rad )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: opt_rad
  INTEGER id_id
  opt_rad = model_config_rec%opt_rad
  RETURN
END SUBROUTINE nl_get_opt_rad
SUBROUTINE nl_get_opt_alb ( id_id , opt_alb )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: opt_alb
  INTEGER id_id
  opt_alb = model_config_rec%opt_alb
  RETURN
END SUBROUTINE nl_get_opt_alb
SUBROUTINE nl_get_opt_snf ( id_id , opt_snf )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: opt_snf
  INTEGER id_id
  opt_snf = model_config_rec%opt_snf
  RETURN
END SUBROUTINE nl_get_opt_snf
SUBROUTINE nl_get_opt_tbot ( id_id , opt_tbot )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: opt_tbot
  INTEGER id_id
  opt_tbot = model_config_rec%opt_tbot
  RETURN
END SUBROUTINE nl_get_opt_tbot
SUBROUTINE nl_get_opt_stc ( id_id , opt_stc )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: opt_stc
  INTEGER id_id
  opt_stc = model_config_rec%opt_stc
  RETURN
END SUBROUTINE nl_get_opt_stc
SUBROUTINE nl_get_opt_gla ( id_id , opt_gla )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: opt_gla
  INTEGER id_id
  opt_gla = model_config_rec%opt_gla
  RETURN
END SUBROUTINE nl_get_opt_gla
SUBROUTINE nl_get_opt_rsf ( id_id , opt_rsf )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: opt_rsf
  INTEGER id_id
  opt_rsf = model_config_rec%opt_rsf
  RETURN
END SUBROUTINE nl_get_opt_rsf
SUBROUTINE nl_get_opt_soil ( id_id , opt_soil )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: opt_soil
  INTEGER id_id
  opt_soil = model_config_rec%opt_soil
  RETURN
END SUBROUTINE nl_get_opt_soil
SUBROUTINE nl_get_opt_pedo ( id_id , opt_pedo )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: opt_pedo
  INTEGER id_id
  opt_pedo = model_config_rec%opt_pedo
  RETURN
END SUBROUTINE nl_get_opt_pedo
SUBROUTINE nl_get_opt_crop ( id_id , opt_crop )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: opt_crop
  INTEGER id_id
  opt_crop = model_config_rec%opt_crop
  RETURN
END SUBROUTINE nl_get_opt_crop
SUBROUTINE nl_get_wtddt ( id_id , wtddt )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: wtddt
  INTEGER id_id
  wtddt = model_config_rec%wtddt(id_id)
  RETURN
END SUBROUTINE nl_get_wtddt
SUBROUTINE nl_get_wrf_hydro ( id_id , wrf_hydro )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: wrf_hydro
  INTEGER id_id
  wrf_hydro = model_config_rec%wrf_hydro
  RETURN
END SUBROUTINE nl_get_wrf_hydro
SUBROUTINE nl_get_fgdt ( id_id , fgdt )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fgdt
  INTEGER id_id
  fgdt = model_config_rec%fgdt(id_id)
  RETURN
END SUBROUTINE nl_get_fgdt
SUBROUTINE nl_get_fgdtzero ( id_id , fgdtzero )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: fgdtzero
  INTEGER id_id
  fgdtzero = model_config_rec%fgdtzero(id_id)
  RETURN
END SUBROUTINE nl_get_fgdtzero
SUBROUTINE nl_get_grid_fdda ( id_id , grid_fdda )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: grid_fdda
  INTEGER id_id
  grid_fdda = model_config_rec%grid_fdda(id_id)
  RETURN
END SUBROUTINE nl_get_grid_fdda
SUBROUTINE nl_get_grid_sfdda ( id_id , grid_sfdda )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: grid_sfdda
  INTEGER id_id
  grid_sfdda = model_config_rec%grid_sfdda(id_id)
  RETURN
END SUBROUTINE nl_get_grid_sfdda
SUBROUTINE nl_get_if_no_pbl_nudging_uv ( id_id , if_no_pbl_nudging_uv )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: if_no_pbl_nudging_uv
  INTEGER id_id
  if_no_pbl_nudging_uv = model_config_rec%if_no_pbl_nudging_uv(id_id)
  RETURN
END SUBROUTINE nl_get_if_no_pbl_nudging_uv
SUBROUTINE nl_get_if_no_pbl_nudging_t ( id_id , if_no_pbl_nudging_t )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: if_no_pbl_nudging_t
  INTEGER id_id
  if_no_pbl_nudging_t = model_config_rec%if_no_pbl_nudging_t(id_id)
  RETURN
END SUBROUTINE nl_get_if_no_pbl_nudging_t
SUBROUTINE nl_get_if_no_pbl_nudging_ph ( id_id , if_no_pbl_nudging_ph )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: if_no_pbl_nudging_ph
  INTEGER id_id
  if_no_pbl_nudging_ph = model_config_rec%if_no_pbl_nudging_ph(id_id)
  RETURN
END SUBROUTINE nl_get_if_no_pbl_nudging_ph
SUBROUTINE nl_get_if_no_pbl_nudging_q ( id_id , if_no_pbl_nudging_q )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: if_no_pbl_nudging_q
  INTEGER id_id
  if_no_pbl_nudging_q = model_config_rec%if_no_pbl_nudging_q(id_id)
  RETURN
END SUBROUTINE nl_get_if_no_pbl_nudging_q
SUBROUTINE nl_get_if_zfac_uv ( id_id , if_zfac_uv )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: if_zfac_uv
  INTEGER id_id
  if_zfac_uv = model_config_rec%if_zfac_uv(id_id)
  RETURN
END SUBROUTINE nl_get_if_zfac_uv
SUBROUTINE nl_get_k_zfac_uv ( id_id , k_zfac_uv )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: k_zfac_uv
  INTEGER id_id
  k_zfac_uv = model_config_rec%k_zfac_uv(id_id)
  RETURN
END SUBROUTINE nl_get_k_zfac_uv
SUBROUTINE nl_get_if_zfac_t ( id_id , if_zfac_t )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: if_zfac_t
  INTEGER id_id
  if_zfac_t = model_config_rec%if_zfac_t(id_id)
  RETURN
END SUBROUTINE nl_get_if_zfac_t
SUBROUTINE nl_get_k_zfac_t ( id_id , k_zfac_t )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: k_zfac_t
  INTEGER id_id
  k_zfac_t = model_config_rec%k_zfac_t(id_id)
  RETURN
END SUBROUTINE nl_get_k_zfac_t
SUBROUTINE nl_get_if_zfac_ph ( id_id , if_zfac_ph )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: if_zfac_ph
  INTEGER id_id
  if_zfac_ph = model_config_rec%if_zfac_ph(id_id)
  RETURN
END SUBROUTINE nl_get_if_zfac_ph
SUBROUTINE nl_get_k_zfac_ph ( id_id , k_zfac_ph )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: k_zfac_ph
  INTEGER id_id
  k_zfac_ph = model_config_rec%k_zfac_ph(id_id)
  RETURN
END SUBROUTINE nl_get_k_zfac_ph
SUBROUTINE nl_get_if_zfac_q ( id_id , if_zfac_q )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: if_zfac_q
  INTEGER id_id
  if_zfac_q = model_config_rec%if_zfac_q(id_id)
  RETURN
END SUBROUTINE nl_get_if_zfac_q
SUBROUTINE nl_get_k_zfac_q ( id_id , k_zfac_q )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: k_zfac_q
  INTEGER id_id
  k_zfac_q = model_config_rec%k_zfac_q(id_id)
  RETURN
END SUBROUTINE nl_get_k_zfac_q
SUBROUTINE nl_get_dk_zfac_uv ( id_id , dk_zfac_uv )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: dk_zfac_uv
  INTEGER id_id
  dk_zfac_uv = model_config_rec%dk_zfac_uv(id_id)
  RETURN
END SUBROUTINE nl_get_dk_zfac_uv
SUBROUTINE nl_get_dk_zfac_t ( id_id , dk_zfac_t )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: dk_zfac_t
  INTEGER id_id
  dk_zfac_t = model_config_rec%dk_zfac_t(id_id)
  RETURN
END SUBROUTINE nl_get_dk_zfac_t
SUBROUTINE nl_get_dk_zfac_ph ( id_id , dk_zfac_ph )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: dk_zfac_ph
  INTEGER id_id
  dk_zfac_ph = model_config_rec%dk_zfac_ph(id_id)
  RETURN
END SUBROUTINE nl_get_dk_zfac_ph
SUBROUTINE nl_get_dk_zfac_q ( id_id , dk_zfac_q )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: dk_zfac_q
  INTEGER id_id
  dk_zfac_q = model_config_rec%dk_zfac_q(id_id)
  RETURN
END SUBROUTINE nl_get_dk_zfac_q
SUBROUTINE nl_get_ktrop ( id_id , ktrop )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: ktrop
  INTEGER id_id
  ktrop = model_config_rec%ktrop
  RETURN
END SUBROUTINE nl_get_ktrop
SUBROUTINE nl_get_guv ( id_id , guv )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: guv
  INTEGER id_id
  guv = model_config_rec%guv(id_id)
  RETURN
END SUBROUTINE nl_get_guv
SUBROUTINE nl_get_guv_sfc ( id_id , guv_sfc )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: guv_sfc
  INTEGER id_id
  guv_sfc = model_config_rec%guv_sfc(id_id)
  RETURN
END SUBROUTINE nl_get_guv_sfc
SUBROUTINE nl_get_gt ( id_id , gt )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: gt
  INTEGER id_id
  gt = model_config_rec%gt(id_id)
  RETURN
END SUBROUTINE nl_get_gt
SUBROUTINE nl_get_gt_sfc ( id_id , gt_sfc )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: gt_sfc
  INTEGER id_id
  gt_sfc = model_config_rec%gt_sfc(id_id)
  RETURN
END SUBROUTINE nl_get_gt_sfc
SUBROUTINE nl_get_gq ( id_id , gq )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: gq
  INTEGER id_id
  gq = model_config_rec%gq(id_id)
  RETURN
END SUBROUTINE nl_get_gq
SUBROUTINE nl_get_gq_sfc ( id_id , gq_sfc )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: gq_sfc
  INTEGER id_id
  gq_sfc = model_config_rec%gq_sfc(id_id)
  RETURN
END SUBROUTINE nl_get_gq_sfc
SUBROUTINE nl_get_gph ( id_id , gph )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: gph
  INTEGER id_id
  gph = model_config_rec%gph(id_id)
  RETURN
END SUBROUTINE nl_get_gph
SUBROUTINE nl_get_dtramp_min ( id_id , dtramp_min )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: dtramp_min
  INTEGER id_id
  dtramp_min = model_config_rec%dtramp_min
  RETURN
END SUBROUTINE nl_get_dtramp_min
SUBROUTINE nl_get_if_ramping ( id_id , if_ramping )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: if_ramping
  INTEGER id_id
  if_ramping = model_config_rec%if_ramping
  RETURN
END SUBROUTINE nl_get_if_ramping
SUBROUTINE nl_get_rinblw ( id_id , rinblw )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: rinblw
  INTEGER id_id
  rinblw = model_config_rec%rinblw(id_id)
  RETURN
END SUBROUTINE nl_get_rinblw
SUBROUTINE nl_get_xwavenum ( id_id , xwavenum )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: xwavenum
  INTEGER id_id
  xwavenum = model_config_rec%xwavenum(id_id)
  RETURN
END SUBROUTINE nl_get_xwavenum
SUBROUTINE nl_get_ywavenum ( id_id , ywavenum )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: ywavenum
  INTEGER id_id
  ywavenum = model_config_rec%ywavenum(id_id)
  RETURN
END SUBROUTINE nl_get_ywavenum
SUBROUTINE nl_get_pxlsm_soil_nudge ( id_id , pxlsm_soil_nudge )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: pxlsm_soil_nudge
  INTEGER id_id
  pxlsm_soil_nudge = model_config_rec%pxlsm_soil_nudge(id_id)
  RETURN
END SUBROUTINE nl_get_pxlsm_soil_nudge
SUBROUTINE nl_get_fasdas ( id_id , fasdas )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: fasdas
  INTEGER id_id
  fasdas = model_config_rec%fasdas(id_id)
  RETURN
END SUBROUTINE nl_get_fasdas
SUBROUTINE nl_get_obs_nudge_opt ( id_id , obs_nudge_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: obs_nudge_opt
  INTEGER id_id
  obs_nudge_opt = model_config_rec%obs_nudge_opt(id_id)
  RETURN
END SUBROUTINE nl_get_obs_nudge_opt
SUBROUTINE nl_get_max_obs ( id_id , max_obs )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: max_obs
  INTEGER id_id
  max_obs = model_config_rec%max_obs
  RETURN
END SUBROUTINE nl_get_max_obs
SUBROUTINE nl_get_fdda_start ( id_id , fdda_start )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fdda_start
  INTEGER id_id
  fdda_start = model_config_rec%fdda_start(id_id)
  RETURN
END SUBROUTINE nl_get_fdda_start
SUBROUTINE nl_get_fdda_end ( id_id , fdda_end )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fdda_end
  INTEGER id_id
  fdda_end = model_config_rec%fdda_end(id_id)
  RETURN
END SUBROUTINE nl_get_fdda_end
SUBROUTINE nl_get_obs_nudge_wind ( id_id , obs_nudge_wind )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: obs_nudge_wind
  INTEGER id_id
  obs_nudge_wind = model_config_rec%obs_nudge_wind(id_id)
  RETURN
END SUBROUTINE nl_get_obs_nudge_wind
SUBROUTINE nl_get_obs_coef_wind ( id_id , obs_coef_wind )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: obs_coef_wind
  INTEGER id_id
  obs_coef_wind = model_config_rec%obs_coef_wind(id_id)
  RETURN
END SUBROUTINE nl_get_obs_coef_wind
SUBROUTINE nl_get_obs_nudge_temp ( id_id , obs_nudge_temp )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: obs_nudge_temp
  INTEGER id_id
  obs_nudge_temp = model_config_rec%obs_nudge_temp(id_id)
  RETURN
END SUBROUTINE nl_get_obs_nudge_temp
SUBROUTINE nl_get_obs_coef_temp ( id_id , obs_coef_temp )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: obs_coef_temp
  INTEGER id_id
  obs_coef_temp = model_config_rec%obs_coef_temp(id_id)
  RETURN
END SUBROUTINE nl_get_obs_coef_temp
SUBROUTINE nl_get_obs_nudge_mois ( id_id , obs_nudge_mois )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: obs_nudge_mois
  INTEGER id_id
  obs_nudge_mois = model_config_rec%obs_nudge_mois(id_id)
  RETURN
END SUBROUTINE nl_get_obs_nudge_mois
SUBROUTINE nl_get_obs_coef_mois ( id_id , obs_coef_mois )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: obs_coef_mois
  INTEGER id_id
  obs_coef_mois = model_config_rec%obs_coef_mois(id_id)
  RETURN
END SUBROUTINE nl_get_obs_coef_mois
SUBROUTINE nl_get_obs_nudge_pstr ( id_id , obs_nudge_pstr )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: obs_nudge_pstr
  INTEGER id_id
  obs_nudge_pstr = model_config_rec%obs_nudge_pstr(id_id)
  RETURN
END SUBROUTINE nl_get_obs_nudge_pstr
SUBROUTINE nl_get_obs_coef_pstr ( id_id , obs_coef_pstr )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: obs_coef_pstr
  INTEGER id_id
  obs_coef_pstr = model_config_rec%obs_coef_pstr(id_id)
  RETURN
END SUBROUTINE nl_get_obs_coef_pstr
SUBROUTINE nl_get_obs_no_pbl_nudge_uv ( id_id , obs_no_pbl_nudge_uv )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: obs_no_pbl_nudge_uv
  INTEGER id_id
  obs_no_pbl_nudge_uv = model_config_rec%obs_no_pbl_nudge_uv(id_id)
  RETURN
END SUBROUTINE nl_get_obs_no_pbl_nudge_uv
SUBROUTINE nl_get_obs_no_pbl_nudge_t ( id_id , obs_no_pbl_nudge_t )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: obs_no_pbl_nudge_t
  INTEGER id_id
  obs_no_pbl_nudge_t = model_config_rec%obs_no_pbl_nudge_t(id_id)
  RETURN
END SUBROUTINE nl_get_obs_no_pbl_nudge_t
SUBROUTINE nl_get_obs_no_pbl_nudge_q ( id_id , obs_no_pbl_nudge_q )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: obs_no_pbl_nudge_q
  INTEGER id_id
  obs_no_pbl_nudge_q = model_config_rec%obs_no_pbl_nudge_q(id_id)
  RETURN
END SUBROUTINE nl_get_obs_no_pbl_nudge_q
SUBROUTINE nl_get_obs_sfc_scheme_horiz ( id_id , obs_sfc_scheme_horiz )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: obs_sfc_scheme_horiz
  INTEGER id_id
  obs_sfc_scheme_horiz = model_config_rec%obs_sfc_scheme_horiz
  RETURN
END SUBROUTINE nl_get_obs_sfc_scheme_horiz
SUBROUTINE nl_get_obs_sfc_scheme_vert ( id_id , obs_sfc_scheme_vert )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: obs_sfc_scheme_vert
  INTEGER id_id
  obs_sfc_scheme_vert = model_config_rec%obs_sfc_scheme_vert
  RETURN
END SUBROUTINE nl_get_obs_sfc_scheme_vert
SUBROUTINE nl_get_obs_max_sndng_gap ( id_id , obs_max_sndng_gap )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: obs_max_sndng_gap
  INTEGER id_id
  obs_max_sndng_gap = model_config_rec%obs_max_sndng_gap
  RETURN
END SUBROUTINE nl_get_obs_max_sndng_gap
SUBROUTINE nl_get_obs_nudgezfullr1_uv ( id_id , obs_nudgezfullr1_uv )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: obs_nudgezfullr1_uv
  INTEGER id_id
  obs_nudgezfullr1_uv = model_config_rec%obs_nudgezfullr1_uv
  RETURN
END SUBROUTINE nl_get_obs_nudgezfullr1_uv
SUBROUTINE nl_get_obs_nudgezrampr1_uv ( id_id , obs_nudgezrampr1_uv )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: obs_nudgezrampr1_uv
  INTEGER id_id
  obs_nudgezrampr1_uv = model_config_rec%obs_nudgezrampr1_uv
  RETURN
END SUBROUTINE nl_get_obs_nudgezrampr1_uv
SUBROUTINE nl_get_obs_nudgezfullr2_uv ( id_id , obs_nudgezfullr2_uv )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: obs_nudgezfullr2_uv
  INTEGER id_id
  obs_nudgezfullr2_uv = model_config_rec%obs_nudgezfullr2_uv
  RETURN
END SUBROUTINE nl_get_obs_nudgezfullr2_uv
SUBROUTINE nl_get_obs_nudgezrampr2_uv ( id_id , obs_nudgezrampr2_uv )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: obs_nudgezrampr2_uv
  INTEGER id_id
  obs_nudgezrampr2_uv = model_config_rec%obs_nudgezrampr2_uv
  RETURN
END SUBROUTINE nl_get_obs_nudgezrampr2_uv
SUBROUTINE nl_get_obs_nudgezfullr4_uv ( id_id , obs_nudgezfullr4_uv )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: obs_nudgezfullr4_uv
  INTEGER id_id
  obs_nudgezfullr4_uv = model_config_rec%obs_nudgezfullr4_uv
  RETURN
END SUBROUTINE nl_get_obs_nudgezfullr4_uv
SUBROUTINE nl_get_obs_nudgezrampr4_uv ( id_id , obs_nudgezrampr4_uv )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: obs_nudgezrampr4_uv
  INTEGER id_id
  obs_nudgezrampr4_uv = model_config_rec%obs_nudgezrampr4_uv
  RETURN
END SUBROUTINE nl_get_obs_nudgezrampr4_uv
SUBROUTINE nl_get_obs_nudgezfullr1_t ( id_id , obs_nudgezfullr1_t )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: obs_nudgezfullr1_t
  INTEGER id_id
  obs_nudgezfullr1_t = model_config_rec%obs_nudgezfullr1_t
  RETURN
END SUBROUTINE nl_get_obs_nudgezfullr1_t
SUBROUTINE nl_get_obs_nudgezrampr1_t ( id_id , obs_nudgezrampr1_t )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: obs_nudgezrampr1_t
  INTEGER id_id
  obs_nudgezrampr1_t = model_config_rec%obs_nudgezrampr1_t
  RETURN
END SUBROUTINE nl_get_obs_nudgezrampr1_t
SUBROUTINE nl_get_obs_nudgezfullr2_t ( id_id , obs_nudgezfullr2_t )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: obs_nudgezfullr2_t
  INTEGER id_id
  obs_nudgezfullr2_t = model_config_rec%obs_nudgezfullr2_t
  RETURN
END SUBROUTINE nl_get_obs_nudgezfullr2_t
SUBROUTINE nl_get_obs_nudgezrampr2_t ( id_id , obs_nudgezrampr2_t )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: obs_nudgezrampr2_t
  INTEGER id_id
  obs_nudgezrampr2_t = model_config_rec%obs_nudgezrampr2_t
  RETURN
END SUBROUTINE nl_get_obs_nudgezrampr2_t
SUBROUTINE nl_get_obs_nudgezfullr4_t ( id_id , obs_nudgezfullr4_t )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: obs_nudgezfullr4_t
  INTEGER id_id
  obs_nudgezfullr4_t = model_config_rec%obs_nudgezfullr4_t
  RETURN
END SUBROUTINE nl_get_obs_nudgezfullr4_t
SUBROUTINE nl_get_obs_nudgezrampr4_t ( id_id , obs_nudgezrampr4_t )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: obs_nudgezrampr4_t
  INTEGER id_id
  obs_nudgezrampr4_t = model_config_rec%obs_nudgezrampr4_t
  RETURN
END SUBROUTINE nl_get_obs_nudgezrampr4_t
SUBROUTINE nl_get_obs_nudgezfullr1_q ( id_id , obs_nudgezfullr1_q )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: obs_nudgezfullr1_q
  INTEGER id_id
  obs_nudgezfullr1_q = model_config_rec%obs_nudgezfullr1_q
  RETURN
END SUBROUTINE nl_get_obs_nudgezfullr1_q
SUBROUTINE nl_get_obs_nudgezrampr1_q ( id_id , obs_nudgezrampr1_q )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: obs_nudgezrampr1_q
  INTEGER id_id
  obs_nudgezrampr1_q = model_config_rec%obs_nudgezrampr1_q
  RETURN
END SUBROUTINE nl_get_obs_nudgezrampr1_q
SUBROUTINE nl_get_obs_nudgezfullr2_q ( id_id , obs_nudgezfullr2_q )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: obs_nudgezfullr2_q
  INTEGER id_id
  obs_nudgezfullr2_q = model_config_rec%obs_nudgezfullr2_q
  RETURN
END SUBROUTINE nl_get_obs_nudgezfullr2_q
SUBROUTINE nl_get_obs_nudgezrampr2_q ( id_id , obs_nudgezrampr2_q )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: obs_nudgezrampr2_q
  INTEGER id_id
  obs_nudgezrampr2_q = model_config_rec%obs_nudgezrampr2_q
  RETURN
END SUBROUTINE nl_get_obs_nudgezrampr2_q
SUBROUTINE nl_get_obs_nudgezfullr4_q ( id_id , obs_nudgezfullr4_q )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: obs_nudgezfullr4_q
  INTEGER id_id
  obs_nudgezfullr4_q = model_config_rec%obs_nudgezfullr4_q
  RETURN
END SUBROUTINE nl_get_obs_nudgezfullr4_q
SUBROUTINE nl_get_obs_nudgezrampr4_q ( id_id , obs_nudgezrampr4_q )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: obs_nudgezrampr4_q
  INTEGER id_id
  obs_nudgezrampr4_q = model_config_rec%obs_nudgezrampr4_q
  RETURN
END SUBROUTINE nl_get_obs_nudgezrampr4_q
SUBROUTINE nl_get_obs_nudgezfullmin ( id_id , obs_nudgezfullmin )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: obs_nudgezfullmin
  INTEGER id_id
  obs_nudgezfullmin = model_config_rec%obs_nudgezfullmin
  RETURN
END SUBROUTINE nl_get_obs_nudgezfullmin
SUBROUTINE nl_get_obs_nudgezrampmin ( id_id , obs_nudgezrampmin )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: obs_nudgezrampmin
  INTEGER id_id
  obs_nudgezrampmin = model_config_rec%obs_nudgezrampmin
  RETURN
END SUBROUTINE nl_get_obs_nudgezrampmin
SUBROUTINE nl_get_obs_nudgezmax ( id_id , obs_nudgezmax )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: obs_nudgezmax
  INTEGER id_id
  obs_nudgezmax = model_config_rec%obs_nudgezmax
  RETURN
END SUBROUTINE nl_get_obs_nudgezmax
SUBROUTINE nl_get_obs_sfcfact ( id_id , obs_sfcfact )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: obs_sfcfact
  INTEGER id_id
  obs_sfcfact = model_config_rec%obs_sfcfact
  RETURN
END SUBROUTINE nl_get_obs_sfcfact
SUBROUTINE nl_get_obs_sfcfacr ( id_id , obs_sfcfacr )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: obs_sfcfacr
  INTEGER id_id
  obs_sfcfacr = model_config_rec%obs_sfcfacr
  RETURN
END SUBROUTINE nl_get_obs_sfcfacr
SUBROUTINE nl_get_obs_dpsmx ( id_id , obs_dpsmx )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: obs_dpsmx
  INTEGER id_id
  obs_dpsmx = model_config_rec%obs_dpsmx
  RETURN
END SUBROUTINE nl_get_obs_dpsmx
SUBROUTINE nl_get_obs_rinxy ( id_id , obs_rinxy )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: obs_rinxy
  INTEGER id_id
  obs_rinxy = model_config_rec%obs_rinxy(id_id)
  RETURN
END SUBROUTINE nl_get_obs_rinxy
SUBROUTINE nl_get_obs_rinsig ( id_id , obs_rinsig )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: obs_rinsig
  INTEGER id_id
  obs_rinsig = model_config_rec%obs_rinsig
  RETURN
END SUBROUTINE nl_get_obs_rinsig
SUBROUTINE nl_get_obs_twindo ( id_id , obs_twindo )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: obs_twindo
  INTEGER id_id
  obs_twindo = model_config_rec%obs_twindo(id_id)
  RETURN
END SUBROUTINE nl_get_obs_twindo
SUBROUTINE nl_get_obs_npfi ( id_id , obs_npfi )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: obs_npfi
  INTEGER id_id
  obs_npfi = model_config_rec%obs_npfi
  RETURN
END SUBROUTINE nl_get_obs_npfi
SUBROUTINE nl_get_obs_ionf ( id_id , obs_ionf )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: obs_ionf
  INTEGER id_id
  obs_ionf = model_config_rec%obs_ionf(id_id)
  RETURN
END SUBROUTINE nl_get_obs_ionf
SUBROUTINE nl_get_obs_idynin ( id_id , obs_idynin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: obs_idynin
  INTEGER id_id
  obs_idynin = model_config_rec%obs_idynin
  RETURN
END SUBROUTINE nl_get_obs_idynin
SUBROUTINE nl_get_obs_dtramp ( id_id , obs_dtramp )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: obs_dtramp
  INTEGER id_id
  obs_dtramp = model_config_rec%obs_dtramp
  RETURN
END SUBROUTINE nl_get_obs_dtramp
SUBROUTINE nl_get_obs_prt_max ( id_id , obs_prt_max )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: obs_prt_max
  INTEGER id_id
  obs_prt_max = model_config_rec%obs_prt_max
  RETURN
END SUBROUTINE nl_get_obs_prt_max
SUBROUTINE nl_get_obs_prt_freq ( id_id , obs_prt_freq )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: obs_prt_freq
  INTEGER id_id
  obs_prt_freq = model_config_rec%obs_prt_freq(id_id)
  RETURN
END SUBROUTINE nl_get_obs_prt_freq
SUBROUTINE nl_get_obs_ipf_in4dob ( id_id , obs_ipf_in4dob )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: obs_ipf_in4dob
  INTEGER id_id
  obs_ipf_in4dob = model_config_rec%obs_ipf_in4dob
  RETURN
END SUBROUTINE nl_get_obs_ipf_in4dob
SUBROUTINE nl_get_obs_ipf_errob ( id_id , obs_ipf_errob )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: obs_ipf_errob
  INTEGER id_id
  obs_ipf_errob = model_config_rec%obs_ipf_errob
  RETURN
END SUBROUTINE nl_get_obs_ipf_errob
SUBROUTINE nl_get_obs_ipf_nudob ( id_id , obs_ipf_nudob )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: obs_ipf_nudob
  INTEGER id_id
  obs_ipf_nudob = model_config_rec%obs_ipf_nudob
  RETURN
END SUBROUTINE nl_get_obs_ipf_nudob
SUBROUTINE nl_get_obs_ipf_init ( id_id , obs_ipf_init )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: obs_ipf_init
  INTEGER id_id
  obs_ipf_init = model_config_rec%obs_ipf_init
  RETURN
END SUBROUTINE nl_get_obs_ipf_init
SUBROUTINE nl_get_obs_scl_neg_qv_innov ( id_id , obs_scl_neg_qv_innov )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: obs_scl_neg_qv_innov
  INTEGER id_id
  obs_scl_neg_qv_innov = model_config_rec%obs_scl_neg_qv_innov
  RETURN
END SUBROUTINE nl_get_obs_scl_neg_qv_innov
SUBROUTINE nl_get_scm_force ( id_id , scm_force )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: scm_force
  INTEGER id_id
  scm_force = model_config_rec%scm_force
  RETURN
END SUBROUTINE nl_get_scm_force
SUBROUTINE nl_get_scm_force_dx ( id_id , scm_force_dx )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: scm_force_dx
  INTEGER id_id
  scm_force_dx = model_config_rec%scm_force_dx
  RETURN
END SUBROUTINE nl_get_scm_force_dx
SUBROUTINE nl_get_num_force_layers ( id_id , num_force_layers )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: num_force_layers
  INTEGER id_id
  num_force_layers = model_config_rec%num_force_layers
  RETURN
END SUBROUTINE nl_get_num_force_layers
SUBROUTINE nl_get_scm_lu_index ( id_id , scm_lu_index )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: scm_lu_index
  INTEGER id_id
  scm_lu_index = model_config_rec%scm_lu_index
  RETURN
END SUBROUTINE nl_get_scm_lu_index
SUBROUTINE nl_get_scm_isltyp ( id_id , scm_isltyp )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: scm_isltyp
  INTEGER id_id
  scm_isltyp = model_config_rec%scm_isltyp
  RETURN
END SUBROUTINE nl_get_scm_isltyp
SUBROUTINE nl_get_scm_vegfra ( id_id , scm_vegfra )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: scm_vegfra
  INTEGER id_id
  scm_vegfra = model_config_rec%scm_vegfra
  RETURN
END SUBROUTINE nl_get_scm_vegfra
SUBROUTINE nl_get_scm_canwat ( id_id , scm_canwat )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: scm_canwat
  INTEGER id_id
  scm_canwat = model_config_rec%scm_canwat
  RETURN
END SUBROUTINE nl_get_scm_canwat
SUBROUTINE nl_get_scm_lat ( id_id , scm_lat )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: scm_lat
  INTEGER id_id
  scm_lat = model_config_rec%scm_lat
  RETURN
END SUBROUTINE nl_get_scm_lat
SUBROUTINE nl_get_scm_lon ( id_id , scm_lon )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: scm_lon
  INTEGER id_id
  scm_lon = model_config_rec%scm_lon
  RETURN
END SUBROUTINE nl_get_scm_lon
SUBROUTINE nl_get_scm_th_t_tend ( id_id , scm_th_t_tend )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: scm_th_t_tend
  INTEGER id_id
  scm_th_t_tend = model_config_rec%scm_th_t_tend
  RETURN
END SUBROUTINE nl_get_scm_th_t_tend
SUBROUTINE nl_get_scm_qv_t_tend ( id_id , scm_qv_t_tend )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: scm_qv_t_tend
  INTEGER id_id
  scm_qv_t_tend = model_config_rec%scm_qv_t_tend
  RETURN
END SUBROUTINE nl_get_scm_qv_t_tend
SUBROUTINE nl_get_scm_th_adv ( id_id , scm_th_adv )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: scm_th_adv
  INTEGER id_id
  scm_th_adv = model_config_rec%scm_th_adv
  RETURN
END SUBROUTINE nl_get_scm_th_adv
SUBROUTINE nl_get_scm_wind_adv ( id_id , scm_wind_adv )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: scm_wind_adv
  INTEGER id_id
  scm_wind_adv = model_config_rec%scm_wind_adv
  RETURN
END SUBROUTINE nl_get_scm_wind_adv
SUBROUTINE nl_get_scm_qv_adv ( id_id , scm_qv_adv )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: scm_qv_adv
  INTEGER id_id
  scm_qv_adv = model_config_rec%scm_qv_adv
  RETURN
END SUBROUTINE nl_get_scm_qv_adv
SUBROUTINE nl_get_scm_ql_adv ( id_id , scm_ql_adv )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: scm_ql_adv
  INTEGER id_id
  scm_ql_adv = model_config_rec%scm_ql_adv
  RETURN
END SUBROUTINE nl_get_scm_ql_adv
SUBROUTINE nl_get_scm_vert_adv ( id_id , scm_vert_adv )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: scm_vert_adv
  INTEGER id_id
  scm_vert_adv = model_config_rec%scm_vert_adv
  RETURN
END SUBROUTINE nl_get_scm_vert_adv
SUBROUTINE nl_get_num_force_soil_layers ( id_id , num_force_soil_layers )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: num_force_soil_layers
  INTEGER id_id
  num_force_soil_layers = model_config_rec%num_force_soil_layers
  RETURN
END SUBROUTINE nl_get_num_force_soil_layers
SUBROUTINE nl_get_scm_soilt_force ( id_id , scm_soilt_force )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: scm_soilt_force
  INTEGER id_id
  scm_soilt_force = model_config_rec%scm_soilt_force
  RETURN
END SUBROUTINE nl_get_scm_soilt_force
SUBROUTINE nl_get_scm_soilq_force ( id_id , scm_soilq_force )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: scm_soilq_force
  INTEGER id_id
  scm_soilq_force = model_config_rec%scm_soilq_force
  RETURN
END SUBROUTINE nl_get_scm_soilq_force
SUBROUTINE nl_get_scm_force_th_largescale ( id_id , scm_force_th_largescale )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: scm_force_th_largescale
  INTEGER id_id
  scm_force_th_largescale = model_config_rec%scm_force_th_largescale
  RETURN
END SUBROUTINE nl_get_scm_force_th_largescale
SUBROUTINE nl_get_scm_force_qv_largescale ( id_id , scm_force_qv_largescale )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: scm_force_qv_largescale
  INTEGER id_id
  scm_force_qv_largescale = model_config_rec%scm_force_qv_largescale
  RETURN
END SUBROUTINE nl_get_scm_force_qv_largescale
SUBROUTINE nl_get_scm_force_ql_largescale ( id_id , scm_force_ql_largescale )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: scm_force_ql_largescale
  INTEGER id_id
  scm_force_ql_largescale = model_config_rec%scm_force_ql_largescale
  RETURN
END SUBROUTINE nl_get_scm_force_ql_largescale
SUBROUTINE nl_get_scm_force_wind_largescale ( id_id , scm_force_wind_largescale )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: scm_force_wind_largescale
  INTEGER id_id
  scm_force_wind_largescale = model_config_rec%scm_force_wind_largescale
  RETURN
END SUBROUTINE nl_get_scm_force_wind_largescale
SUBROUTINE nl_get_scm_force_skintemp ( id_id , scm_force_skintemp )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: scm_force_skintemp
  INTEGER id_id
  scm_force_skintemp = model_config_rec%scm_force_skintemp
  RETURN
END SUBROUTINE nl_get_scm_force_skintemp
SUBROUTINE nl_get_scm_force_flux ( id_id , scm_force_flux )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: scm_force_flux
  INTEGER id_id
  scm_force_flux = model_config_rec%scm_force_flux
  RETURN
END SUBROUTINE nl_get_scm_force_flux
SUBROUTINE nl_get_dyn_opt ( id_id , dyn_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: dyn_opt
  INTEGER id_id
  dyn_opt = model_config_rec%dyn_opt
  RETURN
END SUBROUTINE nl_get_dyn_opt
SUBROUTINE nl_get_rk_ord ( id_id , rk_ord )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: rk_ord
  INTEGER id_id
  rk_ord = model_config_rec%rk_ord
  RETURN
END SUBROUTINE nl_get_rk_ord
SUBROUTINE nl_get_w_damping ( id_id , w_damping )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: w_damping
  INTEGER id_id
  w_damping = model_config_rec%w_damping
  RETURN
END SUBROUTINE nl_get_w_damping
SUBROUTINE nl_get_diff_opt ( id_id , diff_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: diff_opt
  INTEGER id_id
  diff_opt = model_config_rec%diff_opt(id_id)
  RETURN
END SUBROUTINE nl_get_diff_opt
SUBROUTINE nl_get_diff_opt_dfi ( id_id , diff_opt_dfi )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: diff_opt_dfi
  INTEGER id_id
  diff_opt_dfi = model_config_rec%diff_opt_dfi(id_id)
  RETURN
END SUBROUTINE nl_get_diff_opt_dfi
#endif
#if (NNN == 2)
SUBROUTINE nl_get_km_opt ( id_id , km_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: km_opt
  INTEGER id_id
  km_opt = model_config_rec%km_opt(id_id)
  RETURN
END SUBROUTINE nl_get_km_opt
SUBROUTINE nl_get_km_opt_dfi ( id_id , km_opt_dfi )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: km_opt_dfi
  INTEGER id_id
  km_opt_dfi = model_config_rec%km_opt_dfi(id_id)
  RETURN
END SUBROUTINE nl_get_km_opt_dfi
SUBROUTINE nl_get_damp_opt ( id_id , damp_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: damp_opt
  INTEGER id_id
  damp_opt = model_config_rec%damp_opt
  RETURN
END SUBROUTINE nl_get_damp_opt
SUBROUTINE nl_get_rad_nudge ( id_id , rad_nudge )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: rad_nudge
  INTEGER id_id
  rad_nudge = model_config_rec%rad_nudge
  RETURN
END SUBROUTINE nl_get_rad_nudge
SUBROUTINE nl_get_gwd_opt ( id_id , gwd_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: gwd_opt
  INTEGER id_id
  gwd_opt = model_config_rec%gwd_opt
  RETURN
END SUBROUTINE nl_get_gwd_opt
SUBROUTINE nl_get_max_rot_angle_gwd ( id_id , max_rot_angle_gwd )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: max_rot_angle_gwd
  INTEGER id_id
  max_rot_angle_gwd = model_config_rec%max_rot_angle_gwd
  RETURN
END SUBROUTINE nl_get_max_rot_angle_gwd
SUBROUTINE nl_get_zdamp ( id_id , zdamp )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: zdamp
  INTEGER id_id
  zdamp = model_config_rec%zdamp(id_id)
  RETURN
END SUBROUTINE nl_get_zdamp
SUBROUTINE nl_get_dampcoef ( id_id , dampcoef )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: dampcoef
  INTEGER id_id
  dampcoef = model_config_rec%dampcoef(id_id)
  RETURN
END SUBROUTINE nl_get_dampcoef
SUBROUTINE nl_get_khdif ( id_id , khdif )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: khdif
  INTEGER id_id
  khdif = model_config_rec%khdif(id_id)
  RETURN
END SUBROUTINE nl_get_khdif
SUBROUTINE nl_get_kvdif ( id_id , kvdif )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: kvdif
  INTEGER id_id
  kvdif = model_config_rec%kvdif(id_id)
  RETURN
END SUBROUTINE nl_get_kvdif
SUBROUTINE nl_get_diff_6th_factor ( id_id , diff_6th_factor )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: diff_6th_factor
  INTEGER id_id
  diff_6th_factor = model_config_rec%diff_6th_factor(id_id)
  RETURN
END SUBROUTINE nl_get_diff_6th_factor
SUBROUTINE nl_get_diff_6th_opt ( id_id , diff_6th_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: diff_6th_opt
  INTEGER id_id
  diff_6th_opt = model_config_rec%diff_6th_opt(id_id)
  RETURN
END SUBROUTINE nl_get_diff_6th_opt
SUBROUTINE nl_get_diff_6th_slopeopt ( id_id , diff_6th_slopeopt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: diff_6th_slopeopt
  INTEGER id_id
  diff_6th_slopeopt = model_config_rec%diff_6th_slopeopt(id_id)
  RETURN
END SUBROUTINE nl_get_diff_6th_slopeopt
SUBROUTINE nl_get_diff_6th_thresh ( id_id , diff_6th_thresh )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: diff_6th_thresh
  INTEGER id_id
  diff_6th_thresh = model_config_rec%diff_6th_thresh(id_id)
  RETURN
END SUBROUTINE nl_get_diff_6th_thresh
SUBROUTINE nl_get_use_theta_m ( id_id , use_theta_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: use_theta_m
  INTEGER id_id
  use_theta_m = model_config_rec%use_theta_m
  RETURN
END SUBROUTINE nl_get_use_theta_m
SUBROUTINE nl_get_use_q_diabatic ( id_id , use_q_diabatic )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: use_q_diabatic
  INTEGER id_id
  use_q_diabatic = model_config_rec%use_q_diabatic
  RETURN
END SUBROUTINE nl_get_use_q_diabatic
SUBROUTINE nl_get_c_s ( id_id , c_s )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: c_s
  INTEGER id_id
  c_s = model_config_rec%c_s(id_id)
  RETURN
END SUBROUTINE nl_get_c_s
SUBROUTINE nl_get_c_k ( id_id , c_k )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: c_k
  INTEGER id_id
  c_k = model_config_rec%c_k(id_id)
  RETURN
END SUBROUTINE nl_get_c_k
SUBROUTINE nl_get_smdiv ( id_id , smdiv )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: smdiv
  INTEGER id_id
  smdiv = model_config_rec%smdiv(id_id)
  RETURN
END SUBROUTINE nl_get_smdiv
SUBROUTINE nl_get_emdiv ( id_id , emdiv )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: emdiv
  INTEGER id_id
  emdiv = model_config_rec%emdiv(id_id)
  RETURN
END SUBROUTINE nl_get_emdiv
SUBROUTINE nl_get_epssm ( id_id , epssm )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: epssm
  INTEGER id_id
  epssm = model_config_rec%epssm(id_id)
  RETURN
END SUBROUTINE nl_get_epssm
SUBROUTINE nl_get_non_hydrostatic ( id_id , non_hydrostatic )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: non_hydrostatic
  INTEGER id_id
  non_hydrostatic = model_config_rec%non_hydrostatic(id_id)
  RETURN
END SUBROUTINE nl_get_non_hydrostatic
SUBROUTINE nl_get_use_input_w ( id_id , use_input_w )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: use_input_w
  INTEGER id_id
  use_input_w = model_config_rec%use_input_w
  RETURN
END SUBROUTINE nl_get_use_input_w
SUBROUTINE nl_get_time_step_sound ( id_id , time_step_sound )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: time_step_sound
  INTEGER id_id
  time_step_sound = model_config_rec%time_step_sound(id_id)
  RETURN
END SUBROUTINE nl_get_time_step_sound
SUBROUTINE nl_get_h_mom_adv_order ( id_id , h_mom_adv_order )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: h_mom_adv_order
  INTEGER id_id
  h_mom_adv_order = model_config_rec%h_mom_adv_order(id_id)
  RETURN
END SUBROUTINE nl_get_h_mom_adv_order
SUBROUTINE nl_get_v_mom_adv_order ( id_id , v_mom_adv_order )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: v_mom_adv_order
  INTEGER id_id
  v_mom_adv_order = model_config_rec%v_mom_adv_order(id_id)
  RETURN
END SUBROUTINE nl_get_v_mom_adv_order
SUBROUTINE nl_get_h_sca_adv_order ( id_id , h_sca_adv_order )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: h_sca_adv_order
  INTEGER id_id
  h_sca_adv_order = model_config_rec%h_sca_adv_order(id_id)
  RETURN
END SUBROUTINE nl_get_h_sca_adv_order
SUBROUTINE nl_get_v_sca_adv_order ( id_id , v_sca_adv_order )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: v_sca_adv_order
  INTEGER id_id
  v_sca_adv_order = model_config_rec%v_sca_adv_order(id_id)
  RETURN
END SUBROUTINE nl_get_v_sca_adv_order
SUBROUTINE nl_get_momentum_adv_opt ( id_id , momentum_adv_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: momentum_adv_opt
  INTEGER id_id
  momentum_adv_opt = model_config_rec%momentum_adv_opt(id_id)
  RETURN
END SUBROUTINE nl_get_momentum_adv_opt
SUBROUTINE nl_get_moist_adv_opt ( id_id , moist_adv_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: moist_adv_opt
  INTEGER id_id
  moist_adv_opt = model_config_rec%moist_adv_opt(id_id)
  RETURN
END SUBROUTINE nl_get_moist_adv_opt
SUBROUTINE nl_get_moist_adv_dfi_opt ( id_id , moist_adv_dfi_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: moist_adv_dfi_opt
  INTEGER id_id
  moist_adv_dfi_opt = model_config_rec%moist_adv_dfi_opt(id_id)
  RETURN
END SUBROUTINE nl_get_moist_adv_dfi_opt
SUBROUTINE nl_get_chem_adv_opt ( id_id , chem_adv_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: chem_adv_opt
  INTEGER id_id
  chem_adv_opt = model_config_rec%chem_adv_opt(id_id)
  RETURN
END SUBROUTINE nl_get_chem_adv_opt
SUBROUTINE nl_get_tracer_adv_opt ( id_id , tracer_adv_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: tracer_adv_opt
  INTEGER id_id
  tracer_adv_opt = model_config_rec%tracer_adv_opt(id_id)
  RETURN
END SUBROUTINE nl_get_tracer_adv_opt
SUBROUTINE nl_get_scalar_adv_opt ( id_id , scalar_adv_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: scalar_adv_opt
  INTEGER id_id
  scalar_adv_opt = model_config_rec%scalar_adv_opt(id_id)
  RETURN
END SUBROUTINE nl_get_scalar_adv_opt
SUBROUTINE nl_get_tke_adv_opt ( id_id , tke_adv_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: tke_adv_opt
  INTEGER id_id
  tke_adv_opt = model_config_rec%tke_adv_opt(id_id)
  RETURN
END SUBROUTINE nl_get_tke_adv_opt
SUBROUTINE nl_get_moist_mix2_off ( id_id , moist_mix2_off )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: moist_mix2_off
  INTEGER id_id
  moist_mix2_off = model_config_rec%moist_mix2_off(id_id)
  RETURN
END SUBROUTINE nl_get_moist_mix2_off
SUBROUTINE nl_get_chem_mix2_off ( id_id , chem_mix2_off )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: chem_mix2_off
  INTEGER id_id
  chem_mix2_off = model_config_rec%chem_mix2_off(id_id)
  RETURN
END SUBROUTINE nl_get_chem_mix2_off
SUBROUTINE nl_get_tracer_mix2_off ( id_id , tracer_mix2_off )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: tracer_mix2_off
  INTEGER id_id
  tracer_mix2_off = model_config_rec%tracer_mix2_off(id_id)
  RETURN
END SUBROUTINE nl_get_tracer_mix2_off
SUBROUTINE nl_get_scalar_mix2_off ( id_id , scalar_mix2_off )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: scalar_mix2_off
  INTEGER id_id
  scalar_mix2_off = model_config_rec%scalar_mix2_off(id_id)
  RETURN
END SUBROUTINE nl_get_scalar_mix2_off
SUBROUTINE nl_get_tke_mix2_off ( id_id , tke_mix2_off )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: tke_mix2_off
  INTEGER id_id
  tke_mix2_off = model_config_rec%tke_mix2_off(id_id)
  RETURN
END SUBROUTINE nl_get_tke_mix2_off
SUBROUTINE nl_get_moist_mix6_off ( id_id , moist_mix6_off )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: moist_mix6_off
  INTEGER id_id
  moist_mix6_off = model_config_rec%moist_mix6_off(id_id)
  RETURN
END SUBROUTINE nl_get_moist_mix6_off
SUBROUTINE nl_get_chem_mix6_off ( id_id , chem_mix6_off )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: chem_mix6_off
  INTEGER id_id
  chem_mix6_off = model_config_rec%chem_mix6_off(id_id)
  RETURN
END SUBROUTINE nl_get_chem_mix6_off
SUBROUTINE nl_get_tracer_mix6_off ( id_id , tracer_mix6_off )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: tracer_mix6_off
  INTEGER id_id
  tracer_mix6_off = model_config_rec%tracer_mix6_off(id_id)
  RETURN
END SUBROUTINE nl_get_tracer_mix6_off
SUBROUTINE nl_get_scalar_mix6_off ( id_id , scalar_mix6_off )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: scalar_mix6_off
  INTEGER id_id
  scalar_mix6_off = model_config_rec%scalar_mix6_off(id_id)
  RETURN
END SUBROUTINE nl_get_scalar_mix6_off
SUBROUTINE nl_get_tke_mix6_off ( id_id , tke_mix6_off )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: tke_mix6_off
  INTEGER id_id
  tke_mix6_off = model_config_rec%tke_mix6_off(id_id)
  RETURN
END SUBROUTINE nl_get_tke_mix6_off
SUBROUTINE nl_get_top_radiation ( id_id , top_radiation )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: top_radiation
  INTEGER id_id
  top_radiation = model_config_rec%top_radiation(id_id)
  RETURN
END SUBROUTINE nl_get_top_radiation
SUBROUTINE nl_get_mix_isotropic ( id_id , mix_isotropic )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: mix_isotropic
  INTEGER id_id
  mix_isotropic = model_config_rec%mix_isotropic(id_id)
  RETURN
END SUBROUTINE nl_get_mix_isotropic
SUBROUTINE nl_get_mix_upper_bound ( id_id , mix_upper_bound )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: mix_upper_bound
  INTEGER id_id
  mix_upper_bound = model_config_rec%mix_upper_bound(id_id)
  RETURN
END SUBROUTINE nl_get_mix_upper_bound
SUBROUTINE nl_get_top_lid ( id_id , top_lid )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: top_lid
  INTEGER id_id
  top_lid = model_config_rec%top_lid(id_id)
  RETURN
END SUBROUTINE nl_get_top_lid
SUBROUTINE nl_get_tke_upper_bound ( id_id , tke_upper_bound )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: tke_upper_bound
  INTEGER id_id
  tke_upper_bound = model_config_rec%tke_upper_bound(id_id)
  RETURN
END SUBROUTINE nl_get_tke_upper_bound
SUBROUTINE nl_get_tke_drag_coefficient ( id_id , tke_drag_coefficient )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: tke_drag_coefficient
  INTEGER id_id
  tke_drag_coefficient = model_config_rec%tke_drag_coefficient(id_id)
  RETURN
END SUBROUTINE nl_get_tke_drag_coefficient
SUBROUTINE nl_get_tke_heat_flux ( id_id , tke_heat_flux )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: tke_heat_flux
  INTEGER id_id
  tke_heat_flux = model_config_rec%tke_heat_flux(id_id)
  RETURN
END SUBROUTINE nl_get_tke_heat_flux
SUBROUTINE nl_get_pert_coriolis ( id_id , pert_coriolis )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: pert_coriolis
  INTEGER id_id
  pert_coriolis = model_config_rec%pert_coriolis(id_id)
  RETURN
END SUBROUTINE nl_get_pert_coriolis
SUBROUTINE nl_get_coriolis2d ( id_id , coriolis2d )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: coriolis2d
  INTEGER id_id
  coriolis2d = model_config_rec%coriolis2d(id_id)
  RETURN
END SUBROUTINE nl_get_coriolis2d
SUBROUTINE nl_get_mix_full_fields ( id_id , mix_full_fields )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: mix_full_fields
  INTEGER id_id
  mix_full_fields = model_config_rec%mix_full_fields(id_id)
  RETURN
END SUBROUTINE nl_get_mix_full_fields
SUBROUTINE nl_get_base_pres ( id_id , base_pres )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: base_pres
  INTEGER id_id
  base_pres = model_config_rec%base_pres
  RETURN
END SUBROUTINE nl_get_base_pres
SUBROUTINE nl_get_base_temp ( id_id , base_temp )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: base_temp
  INTEGER id_id
  base_temp = model_config_rec%base_temp
  RETURN
END SUBROUTINE nl_get_base_temp
SUBROUTINE nl_get_base_lapse ( id_id , base_lapse )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: base_lapse
  INTEGER id_id
  base_lapse = model_config_rec%base_lapse
  RETURN
END SUBROUTINE nl_get_base_lapse
SUBROUTINE nl_get_iso_temp ( id_id , iso_temp )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: iso_temp
  INTEGER id_id
  iso_temp = model_config_rec%iso_temp
  RETURN
END SUBROUTINE nl_get_iso_temp
SUBROUTINE nl_get_base_pres_strat ( id_id , base_pres_strat )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: base_pres_strat
  INTEGER id_id
  base_pres_strat = model_config_rec%base_pres_strat
  RETURN
END SUBROUTINE nl_get_base_pres_strat
SUBROUTINE nl_get_base_lapse_strat ( id_id , base_lapse_strat )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: base_lapse_strat
  INTEGER id_id
  base_lapse_strat = model_config_rec%base_lapse_strat
  RETURN
END SUBROUTINE nl_get_base_lapse_strat
SUBROUTINE nl_get_use_baseparam_fr_nml ( id_id , use_baseparam_fr_nml )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: use_baseparam_fr_nml
  INTEGER id_id
  use_baseparam_fr_nml = model_config_rec%use_baseparam_fr_nml
  RETURN
END SUBROUTINE nl_get_use_baseparam_fr_nml
SUBROUTINE nl_get_fft_filter_lat ( id_id , fft_filter_lat )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fft_filter_lat
  INTEGER id_id
  fft_filter_lat = model_config_rec%fft_filter_lat
  RETURN
END SUBROUTINE nl_get_fft_filter_lat
SUBROUTINE nl_get_coupled_filtering ( id_id , coupled_filtering )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: coupled_filtering
  INTEGER id_id
  coupled_filtering = model_config_rec%coupled_filtering
  RETURN
END SUBROUTINE nl_get_coupled_filtering
SUBROUTINE nl_get_pos_def ( id_id , pos_def )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: pos_def
  INTEGER id_id
  pos_def = model_config_rec%pos_def
  RETURN
END SUBROUTINE nl_get_pos_def
SUBROUTINE nl_get_swap_pole_with_next_j ( id_id , swap_pole_with_next_j )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: swap_pole_with_next_j
  INTEGER id_id
  swap_pole_with_next_j = model_config_rec%swap_pole_with_next_j
  RETURN
END SUBROUTINE nl_get_swap_pole_with_next_j
SUBROUTINE nl_get_actual_distance_average ( id_id , actual_distance_average )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: actual_distance_average
  INTEGER id_id
  actual_distance_average = model_config_rec%actual_distance_average
  RETURN
END SUBROUTINE nl_get_actual_distance_average
SUBROUTINE nl_get_rotated_pole ( id_id , rotated_pole )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: rotated_pole
  INTEGER id_id
  rotated_pole = model_config_rec%rotated_pole
  RETURN
END SUBROUTINE nl_get_rotated_pole
SUBROUTINE nl_get_do_coriolis ( id_id , do_coriolis )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: do_coriolis
  INTEGER id_id
  do_coriolis = model_config_rec%do_coriolis(id_id)
  RETURN
END SUBROUTINE nl_get_do_coriolis
SUBROUTINE nl_get_do_curvature ( id_id , do_curvature )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: do_curvature
  INTEGER id_id
  do_curvature = model_config_rec%do_curvature(id_id)
  RETURN
END SUBROUTINE nl_get_do_curvature
SUBROUTINE nl_get_do_gradp ( id_id , do_gradp )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: do_gradp
  INTEGER id_id
  do_gradp = model_config_rec%do_gradp(id_id)
  RETURN
END SUBROUTINE nl_get_do_gradp
SUBROUTINE nl_get_tracer_opt ( id_id , tracer_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: tracer_opt
  INTEGER id_id
  tracer_opt = model_config_rec%tracer_opt(id_id)
  RETURN
END SUBROUTINE nl_get_tracer_opt
SUBROUTINE nl_get_tenddiag ( id_id , tenddiag )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: tenddiag
  INTEGER id_id
  tenddiag = model_config_rec%tenddiag(id_id)
  RETURN
END SUBROUTINE nl_get_tenddiag
SUBROUTINE nl_get_spec_bdy_width ( id_id , spec_bdy_width )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: spec_bdy_width
  INTEGER id_id
  spec_bdy_width = model_config_rec%spec_bdy_width
  RETURN
END SUBROUTINE nl_get_spec_bdy_width
SUBROUTINE nl_get_spec_zone ( id_id , spec_zone )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: spec_zone
  INTEGER id_id
  spec_zone = model_config_rec%spec_zone
  RETURN
END SUBROUTINE nl_get_spec_zone
SUBROUTINE nl_get_relax_zone ( id_id , relax_zone )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: relax_zone
  INTEGER id_id
  relax_zone = model_config_rec%relax_zone
  RETURN
END SUBROUTINE nl_get_relax_zone
SUBROUTINE nl_get_specified ( id_id , specified )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: specified
  INTEGER id_id
  specified = model_config_rec%specified(id_id)
  RETURN
END SUBROUTINE nl_get_specified
SUBROUTINE nl_get_constant_bc ( id_id , constant_bc )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: constant_bc
  INTEGER id_id
  constant_bc = model_config_rec%constant_bc
  RETURN
END SUBROUTINE nl_get_constant_bc
SUBROUTINE nl_get_periodic_x ( id_id , periodic_x )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: periodic_x
  INTEGER id_id
  periodic_x = model_config_rec%periodic_x(id_id)
  RETURN
END SUBROUTINE nl_get_periodic_x
SUBROUTINE nl_get_symmetric_xs ( id_id , symmetric_xs )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: symmetric_xs
  INTEGER id_id
  symmetric_xs = model_config_rec%symmetric_xs(id_id)
  RETURN
END SUBROUTINE nl_get_symmetric_xs
SUBROUTINE nl_get_symmetric_xe ( id_id , symmetric_xe )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: symmetric_xe
  INTEGER id_id
  symmetric_xe = model_config_rec%symmetric_xe(id_id)
  RETURN
END SUBROUTINE nl_get_symmetric_xe
SUBROUTINE nl_get_open_xs ( id_id , open_xs )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: open_xs
  INTEGER id_id
  open_xs = model_config_rec%open_xs(id_id)
  RETURN
END SUBROUTINE nl_get_open_xs
SUBROUTINE nl_get_open_xe ( id_id , open_xe )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: open_xe
  INTEGER id_id
  open_xe = model_config_rec%open_xe(id_id)
  RETURN
END SUBROUTINE nl_get_open_xe
SUBROUTINE nl_get_periodic_y ( id_id , periodic_y )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: periodic_y
  INTEGER id_id
  periodic_y = model_config_rec%periodic_y(id_id)
  RETURN
END SUBROUTINE nl_get_periodic_y
SUBROUTINE nl_get_symmetric_ys ( id_id , symmetric_ys )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: symmetric_ys
  INTEGER id_id
  symmetric_ys = model_config_rec%symmetric_ys(id_id)
  RETURN
END SUBROUTINE nl_get_symmetric_ys
SUBROUTINE nl_get_symmetric_ye ( id_id , symmetric_ye )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: symmetric_ye
  INTEGER id_id
  symmetric_ye = model_config_rec%symmetric_ye(id_id)
  RETURN
END SUBROUTINE nl_get_symmetric_ye
SUBROUTINE nl_get_open_ys ( id_id , open_ys )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: open_ys
  INTEGER id_id
  open_ys = model_config_rec%open_ys(id_id)
  RETURN
END SUBROUTINE nl_get_open_ys
SUBROUTINE nl_get_open_ye ( id_id , open_ye )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: open_ye
  INTEGER id_id
  open_ye = model_config_rec%open_ye(id_id)
  RETURN
END SUBROUTINE nl_get_open_ye
SUBROUTINE nl_get_polar ( id_id , polar )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: polar
  INTEGER id_id
  polar = model_config_rec%polar(id_id)
  RETURN
END SUBROUTINE nl_get_polar
SUBROUTINE nl_get_nested ( id_id , nested )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: nested
  INTEGER id_id
  nested = model_config_rec%nested(id_id)
  RETURN
END SUBROUTINE nl_get_nested
SUBROUTINE nl_get_spec_exp ( id_id , spec_exp )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: spec_exp
  INTEGER id_id
  spec_exp = model_config_rec%spec_exp
  RETURN
END SUBROUTINE nl_get_spec_exp
SUBROUTINE nl_get_spec_bdy_final_mu ( id_id , spec_bdy_final_mu )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: spec_bdy_final_mu
  INTEGER id_id
  spec_bdy_final_mu = model_config_rec%spec_bdy_final_mu
  RETURN
END SUBROUTINE nl_get_spec_bdy_final_mu
SUBROUTINE nl_get_real_data_init_type ( id_id , real_data_init_type )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: real_data_init_type
  INTEGER id_id
  real_data_init_type = model_config_rec%real_data_init_type
  RETURN
END SUBROUTINE nl_get_real_data_init_type
SUBROUTINE nl_get_have_bcs_moist ( id_id , have_bcs_moist )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: have_bcs_moist
  INTEGER id_id
  have_bcs_moist = model_config_rec%have_bcs_moist(id_id)
  RETURN
END SUBROUTINE nl_get_have_bcs_moist
SUBROUTINE nl_get_have_bcs_scalar ( id_id , have_bcs_scalar )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: have_bcs_scalar
  INTEGER id_id
  have_bcs_scalar = model_config_rec%have_bcs_scalar(id_id)
  RETURN
END SUBROUTINE nl_get_have_bcs_scalar
SUBROUTINE nl_get_background_proc_id ( id_id , background_proc_id )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: background_proc_id
  INTEGER id_id
  background_proc_id = model_config_rec%background_proc_id
  RETURN
END SUBROUTINE nl_get_background_proc_id
SUBROUTINE nl_get_forecast_proc_id ( id_id , forecast_proc_id )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: forecast_proc_id
  INTEGER id_id
  forecast_proc_id = model_config_rec%forecast_proc_id
  RETURN
END SUBROUTINE nl_get_forecast_proc_id
SUBROUTINE nl_get_production_status ( id_id , production_status )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: production_status
  INTEGER id_id
  production_status = model_config_rec%production_status
  RETURN
END SUBROUTINE nl_get_production_status
SUBROUTINE nl_get_compression ( id_id , compression )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: compression
  INTEGER id_id
  compression = model_config_rec%compression
  RETURN
END SUBROUTINE nl_get_compression
SUBROUTINE nl_get_nobs_ndg_vars ( id_id , nobs_ndg_vars )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: nobs_ndg_vars
  INTEGER id_id
  nobs_ndg_vars = model_config_rec%nobs_ndg_vars
  RETURN
END SUBROUTINE nl_get_nobs_ndg_vars
SUBROUTINE nl_get_nobs_err_flds ( id_id , nobs_err_flds )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: nobs_err_flds
  INTEGER id_id
  nobs_err_flds = model_config_rec%nobs_err_flds
  RETURN
END SUBROUTINE nl_get_nobs_err_flds
SUBROUTINE nl_get_cen_lat ( id_id , cen_lat )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: cen_lat
  INTEGER id_id
  cen_lat = model_config_rec%cen_lat(id_id)
  RETURN
END SUBROUTINE nl_get_cen_lat
SUBROUTINE nl_get_cen_lon ( id_id , cen_lon )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: cen_lon
  INTEGER id_id
  cen_lon = model_config_rec%cen_lon(id_id)
  RETURN
END SUBROUTINE nl_get_cen_lon
SUBROUTINE nl_get_truelat1 ( id_id , truelat1 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: truelat1
  INTEGER id_id
  truelat1 = model_config_rec%truelat1(id_id)
  RETURN
END SUBROUTINE nl_get_truelat1
SUBROUTINE nl_get_truelat2 ( id_id , truelat2 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: truelat2
  INTEGER id_id
  truelat2 = model_config_rec%truelat2(id_id)
  RETURN
END SUBROUTINE nl_get_truelat2
SUBROUTINE nl_get_moad_cen_lat ( id_id , moad_cen_lat )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: moad_cen_lat
  INTEGER id_id
  moad_cen_lat = model_config_rec%moad_cen_lat(id_id)
  RETURN
END SUBROUTINE nl_get_moad_cen_lat
SUBROUTINE nl_get_stand_lon ( id_id , stand_lon )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: stand_lon
  INTEGER id_id
  stand_lon = model_config_rec%stand_lon(id_id)
  RETURN
END SUBROUTINE nl_get_stand_lon
SUBROUTINE nl_get_pole_lat ( id_id , pole_lat )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: pole_lat
  INTEGER id_id
  pole_lat = model_config_rec%pole_lat(id_id)
  RETURN
END SUBROUTINE nl_get_pole_lat
SUBROUTINE nl_get_pole_lon ( id_id , pole_lon )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: pole_lon
  INTEGER id_id
  pole_lon = model_config_rec%pole_lon(id_id)
  RETURN
END SUBROUTINE nl_get_pole_lon
SUBROUTINE nl_get_flag_metgrid ( id_id , flag_metgrid )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: flag_metgrid
  INTEGER id_id
  flag_metgrid = model_config_rec%flag_metgrid
  RETURN
END SUBROUTINE nl_get_flag_metgrid
SUBROUTINE nl_get_flag_snow ( id_id , flag_snow )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: flag_snow
  INTEGER id_id
  flag_snow = model_config_rec%flag_snow
  RETURN
END SUBROUTINE nl_get_flag_snow
SUBROUTINE nl_get_flag_psfc ( id_id , flag_psfc )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: flag_psfc
  INTEGER id_id
  flag_psfc = model_config_rec%flag_psfc
  RETURN
END SUBROUTINE nl_get_flag_psfc
SUBROUTINE nl_get_flag_sm000010 ( id_id , flag_sm000010 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: flag_sm000010
  INTEGER id_id
  flag_sm000010 = model_config_rec%flag_sm000010
  RETURN
END SUBROUTINE nl_get_flag_sm000010
SUBROUTINE nl_get_flag_sm010040 ( id_id , flag_sm010040 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: flag_sm010040
  INTEGER id_id
  flag_sm010040 = model_config_rec%flag_sm010040
  RETURN
END SUBROUTINE nl_get_flag_sm010040
SUBROUTINE nl_get_flag_sm040100 ( id_id , flag_sm040100 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: flag_sm040100
  INTEGER id_id
  flag_sm040100 = model_config_rec%flag_sm040100
  RETURN
END SUBROUTINE nl_get_flag_sm040100
SUBROUTINE nl_get_flag_sm100200 ( id_id , flag_sm100200 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: flag_sm100200
  INTEGER id_id
  flag_sm100200 = model_config_rec%flag_sm100200
  RETURN
END SUBROUTINE nl_get_flag_sm100200
SUBROUTINE nl_get_flag_st000010 ( id_id , flag_st000010 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: flag_st000010
  INTEGER id_id
  flag_st000010 = model_config_rec%flag_st000010
  RETURN
END SUBROUTINE nl_get_flag_st000010
SUBROUTINE nl_get_flag_st010040 ( id_id , flag_st010040 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: flag_st010040
  INTEGER id_id
  flag_st010040 = model_config_rec%flag_st010040
  RETURN
END SUBROUTINE nl_get_flag_st010040
SUBROUTINE nl_get_flag_st040100 ( id_id , flag_st040100 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: flag_st040100
  INTEGER id_id
  flag_st040100 = model_config_rec%flag_st040100
  RETURN
END SUBROUTINE nl_get_flag_st040100
SUBROUTINE nl_get_flag_st100200 ( id_id , flag_st100200 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: flag_st100200
  INTEGER id_id
  flag_st100200 = model_config_rec%flag_st100200
  RETURN
END SUBROUTINE nl_get_flag_st100200
SUBROUTINE nl_get_flag_soil_layers ( id_id , flag_soil_layers )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: flag_soil_layers
  INTEGER id_id
  flag_soil_layers = model_config_rec%flag_soil_layers
  RETURN
END SUBROUTINE nl_get_flag_soil_layers
SUBROUTINE nl_get_flag_slp ( id_id , flag_slp )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: flag_slp
  INTEGER id_id
  flag_slp = model_config_rec%flag_slp
  RETURN
END SUBROUTINE nl_get_flag_slp
SUBROUTINE nl_get_flag_soilhgt ( id_id , flag_soilhgt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: flag_soilhgt
  INTEGER id_id
  flag_soilhgt = model_config_rec%flag_soilhgt
  RETURN
END SUBROUTINE nl_get_flag_soilhgt
SUBROUTINE nl_get_flag_mf_xy ( id_id , flag_mf_xy )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: flag_mf_xy
  INTEGER id_id
  flag_mf_xy = model_config_rec%flag_mf_xy
  RETURN
END SUBROUTINE nl_get_flag_mf_xy
SUBROUTINE nl_get_flag_um_soil ( id_id , flag_um_soil )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: flag_um_soil
  INTEGER id_id
  flag_um_soil = model_config_rec%flag_um_soil
  RETURN
END SUBROUTINE nl_get_flag_um_soil
SUBROUTINE nl_get_bdyfrq ( id_id , bdyfrq )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: bdyfrq
  INTEGER id_id
  bdyfrq = model_config_rec%bdyfrq(id_id)
  RETURN
END SUBROUTINE nl_get_bdyfrq
SUBROUTINE nl_get_mminlu ( id_id , mminlu )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: mminlu
  INTEGER id_id
  mminlu = model_config_rec%mminlu(id_id)
  RETURN
END SUBROUTINE nl_get_mminlu
SUBROUTINE nl_get_iswater ( id_id , iswater )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: iswater
  INTEGER id_id
  iswater = model_config_rec%iswater(id_id)
  RETURN
END SUBROUTINE nl_get_iswater
SUBROUTINE nl_get_islake ( id_id , islake )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: islake
  INTEGER id_id
  islake = model_config_rec%islake(id_id)
  RETURN
END SUBROUTINE nl_get_islake
SUBROUTINE nl_get_isice ( id_id , isice )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: isice
  INTEGER id_id
  isice = model_config_rec%isice(id_id)
  RETURN
END SUBROUTINE nl_get_isice
SUBROUTINE nl_get_isurban ( id_id , isurban )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: isurban
  INTEGER id_id
  isurban = model_config_rec%isurban(id_id)
  RETURN
END SUBROUTINE nl_get_isurban
SUBROUTINE nl_get_isoilwater ( id_id , isoilwater )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: isoilwater
  INTEGER id_id
  isoilwater = model_config_rec%isoilwater(id_id)
  RETURN
END SUBROUTINE nl_get_isoilwater
SUBROUTINE nl_get_map_proj ( id_id , map_proj )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: map_proj
  INTEGER id_id
  map_proj = model_config_rec%map_proj(id_id)
  RETURN
END SUBROUTINE nl_get_map_proj
SUBROUTINE nl_get_use_wps_input ( id_id , use_wps_input )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: use_wps_input
  INTEGER id_id
  use_wps_input = model_config_rec%use_wps_input
  RETURN
END SUBROUTINE nl_get_use_wps_input
SUBROUTINE nl_get_dfi_stage ( id_id , dfi_stage )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: dfi_stage
  INTEGER id_id
  dfi_stage = model_config_rec%dfi_stage(id_id)
  RETURN
END SUBROUTINE nl_get_dfi_stage
SUBROUTINE nl_get_mp_physics_dfi ( id_id , mp_physics_dfi )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: mp_physics_dfi
  INTEGER id_id
  mp_physics_dfi = model_config_rec%mp_physics_dfi(id_id)
  RETURN
END SUBROUTINE nl_get_mp_physics_dfi
SUBROUTINE nl_get_bl_pbl_physics_dfi ( id_id , bl_pbl_physics_dfi )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: bl_pbl_physics_dfi
  INTEGER id_id
  bl_pbl_physics_dfi = model_config_rec%bl_pbl_physics_dfi(id_id)
  RETURN
END SUBROUTINE nl_get_bl_pbl_physics_dfi
SUBROUTINE nl_get_windfarm_opt ( id_id , windfarm_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: windfarm_opt
  INTEGER id_id
  windfarm_opt = model_config_rec%windfarm_opt(id_id)
  RETURN
END SUBROUTINE nl_get_windfarm_opt
SUBROUTINE nl_get_windfarm_ij ( id_id , windfarm_ij )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: windfarm_ij
  INTEGER id_id
  windfarm_ij = model_config_rec%windfarm_ij
  RETURN
END SUBROUTINE nl_get_windfarm_ij
SUBROUTINE nl_get_ideal_case ( id_id , ideal_case )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: ideal_case
  INTEGER id_id
  ideal_case = model_config_rec%ideal_case
  RETURN
END SUBROUTINE nl_get_ideal_case
SUBROUTINE nl_get_hailcast_opt ( id_id , hailcast_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: hailcast_opt
  INTEGER id_id
  hailcast_opt = model_config_rec%hailcast_opt(id_id)
  RETURN
END SUBROUTINE nl_get_hailcast_opt
SUBROUTINE nl_get_haildt ( id_id , haildt )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: haildt
  INTEGER id_id
  haildt = model_config_rec%haildt(id_id)
  RETURN
END SUBROUTINE nl_get_haildt
SUBROUTINE nl_get_lightning_option ( id_id , lightning_option )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: lightning_option
  INTEGER id_id
  lightning_option = model_config_rec%lightning_option(id_id)
  RETURN
END SUBROUTINE nl_get_lightning_option
SUBROUTINE nl_get_lightning_dt ( id_id , lightning_dt )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: lightning_dt
  INTEGER id_id
  lightning_dt = model_config_rec%lightning_dt(id_id)
  RETURN
END SUBROUTINE nl_get_lightning_dt
SUBROUTINE nl_get_lightning_start_seconds ( id_id , lightning_start_seconds )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: lightning_start_seconds
  INTEGER id_id
  lightning_start_seconds = model_config_rec%lightning_start_seconds(id_id)
  RETURN
END SUBROUTINE nl_get_lightning_start_seconds
SUBROUTINE nl_get_flashrate_factor ( id_id , flashrate_factor )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: flashrate_factor
  INTEGER id_id
  flashrate_factor = model_config_rec%flashrate_factor(id_id)
  RETURN
END SUBROUTINE nl_get_flashrate_factor
SUBROUTINE nl_get_iccg_method ( id_id , iccg_method )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: iccg_method
  INTEGER id_id
  iccg_method = model_config_rec%iccg_method(id_id)
  RETURN
END SUBROUTINE nl_get_iccg_method
SUBROUTINE nl_get_iccg_prescribed_num ( id_id , iccg_prescribed_num )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: iccg_prescribed_num
  INTEGER id_id
  iccg_prescribed_num = model_config_rec%iccg_prescribed_num(id_id)
  RETURN
END SUBROUTINE nl_get_iccg_prescribed_num
SUBROUTINE nl_get_iccg_prescribed_den ( id_id , iccg_prescribed_den )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: iccg_prescribed_den
  INTEGER id_id
  iccg_prescribed_den = model_config_rec%iccg_prescribed_den(id_id)
  RETURN
END SUBROUTINE nl_get_iccg_prescribed_den
SUBROUTINE nl_get_cellcount_method ( id_id , cellcount_method )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: cellcount_method
  INTEGER id_id
  cellcount_method = model_config_rec%cellcount_method(id_id)
  RETURN
END SUBROUTINE nl_get_cellcount_method
SUBROUTINE nl_get_cldtop_adjustment ( id_id , cldtop_adjustment )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: cldtop_adjustment
  INTEGER id_id
  cldtop_adjustment = model_config_rec%cldtop_adjustment(id_id)
  RETURN
END SUBROUTINE nl_get_cldtop_adjustment
SUBROUTINE nl_get_sf_lake_physics ( id_id , sf_lake_physics )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: sf_lake_physics
  INTEGER id_id
  sf_lake_physics = model_config_rec%sf_lake_physics(id_id)
  RETURN
END SUBROUTINE nl_get_sf_lake_physics
SUBROUTINE nl_get_auxinput1_inname ( id_id , auxinput1_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput1_inname
  INTEGER id_id
  auxinput1_inname = trim(model_config_rec%auxinput1_inname)
  RETURN
END SUBROUTINE nl_get_auxinput1_inname
SUBROUTINE nl_get_io_form_auxinput1 ( id_id , io_form_auxinput1 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxinput1
  INTEGER id_id
  io_form_auxinput1 = model_config_rec%io_form_auxinput1
  RETURN
END SUBROUTINE nl_get_io_form_auxinput1
SUBROUTINE nl_get_override_restart_timers ( id_id , override_restart_timers )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: override_restart_timers
  INTEGER id_id
  override_restart_timers = model_config_rec%override_restart_timers
  RETURN
END SUBROUTINE nl_get_override_restart_timers
SUBROUTINE nl_get_auxhist1_inname ( id_id , auxhist1_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist1_inname
  INTEGER id_id
  auxhist1_inname = trim(model_config_rec%auxhist1_inname)
  RETURN
END SUBROUTINE nl_get_auxhist1_inname
SUBROUTINE nl_get_auxhist1_outname ( id_id , auxhist1_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist1_outname
  INTEGER id_id
  auxhist1_outname = trim(model_config_rec%auxhist1_outname)
  RETURN
END SUBROUTINE nl_get_auxhist1_outname
SUBROUTINE nl_get_auxhist1_interval_y ( id_id , auxhist1_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist1_interval_y
  INTEGER id_id
  auxhist1_interval_y = model_config_rec%auxhist1_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist1_interval_y
SUBROUTINE nl_get_auxhist1_interval_d ( id_id , auxhist1_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist1_interval_d
  INTEGER id_id
  auxhist1_interval_d = model_config_rec%auxhist1_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist1_interval_d
SUBROUTINE nl_get_auxhist1_interval_h ( id_id , auxhist1_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist1_interval_h
  INTEGER id_id
  auxhist1_interval_h = model_config_rec%auxhist1_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist1_interval_h
SUBROUTINE nl_get_auxhist1_interval_m ( id_id , auxhist1_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist1_interval_m
  INTEGER id_id
  auxhist1_interval_m = model_config_rec%auxhist1_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist1_interval_m
SUBROUTINE nl_get_auxhist1_interval_s ( id_id , auxhist1_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist1_interval_s
  INTEGER id_id
  auxhist1_interval_s = model_config_rec%auxhist1_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist1_interval_s
SUBROUTINE nl_get_auxhist1_interval ( id_id , auxhist1_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist1_interval
  INTEGER id_id
  auxhist1_interval = model_config_rec%auxhist1_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist1_interval
SUBROUTINE nl_get_auxhist1_begin_y ( id_id , auxhist1_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist1_begin_y
  INTEGER id_id
  auxhist1_begin_y = model_config_rec%auxhist1_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist1_begin_y
SUBROUTINE nl_get_auxhist1_begin_d ( id_id , auxhist1_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist1_begin_d
  INTEGER id_id
  auxhist1_begin_d = model_config_rec%auxhist1_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist1_begin_d
SUBROUTINE nl_get_auxhist1_begin_h ( id_id , auxhist1_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist1_begin_h
  INTEGER id_id
  auxhist1_begin_h = model_config_rec%auxhist1_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist1_begin_h
SUBROUTINE nl_get_auxhist1_begin_m ( id_id , auxhist1_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist1_begin_m
  INTEGER id_id
  auxhist1_begin_m = model_config_rec%auxhist1_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist1_begin_m
SUBROUTINE nl_get_auxhist1_begin_s ( id_id , auxhist1_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist1_begin_s
  INTEGER id_id
  auxhist1_begin_s = model_config_rec%auxhist1_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist1_begin_s
SUBROUTINE nl_get_auxhist1_begin ( id_id , auxhist1_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist1_begin
  INTEGER id_id
  auxhist1_begin = model_config_rec%auxhist1_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist1_begin
SUBROUTINE nl_get_auxhist1_end_y ( id_id , auxhist1_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist1_end_y
  INTEGER id_id
  auxhist1_end_y = model_config_rec%auxhist1_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist1_end_y
SUBROUTINE nl_get_auxhist1_end_d ( id_id , auxhist1_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist1_end_d
  INTEGER id_id
  auxhist1_end_d = model_config_rec%auxhist1_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist1_end_d
SUBROUTINE nl_get_auxhist1_end_h ( id_id , auxhist1_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist1_end_h
  INTEGER id_id
  auxhist1_end_h = model_config_rec%auxhist1_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist1_end_h
SUBROUTINE nl_get_auxhist1_end_m ( id_id , auxhist1_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist1_end_m
  INTEGER id_id
  auxhist1_end_m = model_config_rec%auxhist1_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist1_end_m
SUBROUTINE nl_get_auxhist1_end_s ( id_id , auxhist1_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist1_end_s
  INTEGER id_id
  auxhist1_end_s = model_config_rec%auxhist1_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist1_end_s
SUBROUTINE nl_get_auxhist1_end ( id_id , auxhist1_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist1_end
  INTEGER id_id
  auxhist1_end = model_config_rec%auxhist1_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist1_end
SUBROUTINE nl_get_io_form_auxhist1 ( id_id , io_form_auxhist1 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxhist1
  INTEGER id_id
  io_form_auxhist1 = model_config_rec%io_form_auxhist1
  RETURN
END SUBROUTINE nl_get_io_form_auxhist1
SUBROUTINE nl_get_frames_per_auxhist1 ( id_id , frames_per_auxhist1 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxhist1
  INTEGER id_id
  frames_per_auxhist1 = model_config_rec%frames_per_auxhist1(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxhist1
SUBROUTINE nl_get_auxhist2_inname ( id_id , auxhist2_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist2_inname
  INTEGER id_id
  auxhist2_inname = trim(model_config_rec%auxhist2_inname)
  RETURN
END SUBROUTINE nl_get_auxhist2_inname
SUBROUTINE nl_get_auxhist2_outname ( id_id , auxhist2_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist2_outname
  INTEGER id_id
  auxhist2_outname = trim(model_config_rec%auxhist2_outname)
  RETURN
END SUBROUTINE nl_get_auxhist2_outname
SUBROUTINE nl_get_auxhist2_interval_y ( id_id , auxhist2_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist2_interval_y
  INTEGER id_id
  auxhist2_interval_y = model_config_rec%auxhist2_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist2_interval_y
SUBROUTINE nl_get_auxhist2_interval_d ( id_id , auxhist2_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist2_interval_d
  INTEGER id_id
  auxhist2_interval_d = model_config_rec%auxhist2_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist2_interval_d
SUBROUTINE nl_get_auxhist2_interval_h ( id_id , auxhist2_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist2_interval_h
  INTEGER id_id
  auxhist2_interval_h = model_config_rec%auxhist2_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist2_interval_h
SUBROUTINE nl_get_auxhist2_interval_m ( id_id , auxhist2_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist2_interval_m
  INTEGER id_id
  auxhist2_interval_m = model_config_rec%auxhist2_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist2_interval_m
SUBROUTINE nl_get_auxhist2_interval_s ( id_id , auxhist2_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist2_interval_s
  INTEGER id_id
  auxhist2_interval_s = model_config_rec%auxhist2_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist2_interval_s
SUBROUTINE nl_get_auxhist2_interval ( id_id , auxhist2_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist2_interval
  INTEGER id_id
  auxhist2_interval = model_config_rec%auxhist2_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist2_interval
SUBROUTINE nl_get_auxhist2_begin_y ( id_id , auxhist2_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist2_begin_y
  INTEGER id_id
  auxhist2_begin_y = model_config_rec%auxhist2_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist2_begin_y
SUBROUTINE nl_get_auxhist2_begin_d ( id_id , auxhist2_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist2_begin_d
  INTEGER id_id
  auxhist2_begin_d = model_config_rec%auxhist2_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist2_begin_d
SUBROUTINE nl_get_auxhist2_begin_h ( id_id , auxhist2_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist2_begin_h
  INTEGER id_id
  auxhist2_begin_h = model_config_rec%auxhist2_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist2_begin_h
SUBROUTINE nl_get_auxhist2_begin_m ( id_id , auxhist2_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist2_begin_m
  INTEGER id_id
  auxhist2_begin_m = model_config_rec%auxhist2_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist2_begin_m
SUBROUTINE nl_get_auxhist2_begin_s ( id_id , auxhist2_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist2_begin_s
  INTEGER id_id
  auxhist2_begin_s = model_config_rec%auxhist2_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist2_begin_s
SUBROUTINE nl_get_auxhist2_begin ( id_id , auxhist2_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist2_begin
  INTEGER id_id
  auxhist2_begin = model_config_rec%auxhist2_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist2_begin
SUBROUTINE nl_get_auxhist2_end_y ( id_id , auxhist2_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist2_end_y
  INTEGER id_id
  auxhist2_end_y = model_config_rec%auxhist2_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist2_end_y
SUBROUTINE nl_get_auxhist2_end_d ( id_id , auxhist2_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist2_end_d
  INTEGER id_id
  auxhist2_end_d = model_config_rec%auxhist2_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist2_end_d
SUBROUTINE nl_get_auxhist2_end_h ( id_id , auxhist2_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist2_end_h
  INTEGER id_id
  auxhist2_end_h = model_config_rec%auxhist2_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist2_end_h
SUBROUTINE nl_get_auxhist2_end_m ( id_id , auxhist2_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist2_end_m
  INTEGER id_id
  auxhist2_end_m = model_config_rec%auxhist2_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist2_end_m
SUBROUTINE nl_get_auxhist2_end_s ( id_id , auxhist2_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist2_end_s
  INTEGER id_id
  auxhist2_end_s = model_config_rec%auxhist2_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist2_end_s
SUBROUTINE nl_get_auxhist2_end ( id_id , auxhist2_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist2_end
  INTEGER id_id
  auxhist2_end = model_config_rec%auxhist2_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist2_end
SUBROUTINE nl_get_io_form_auxhist2 ( id_id , io_form_auxhist2 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxhist2
  INTEGER id_id
  io_form_auxhist2 = model_config_rec%io_form_auxhist2
  RETURN
END SUBROUTINE nl_get_io_form_auxhist2
SUBROUTINE nl_get_frames_per_auxhist2 ( id_id , frames_per_auxhist2 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxhist2
  INTEGER id_id
  frames_per_auxhist2 = model_config_rec%frames_per_auxhist2(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxhist2
SUBROUTINE nl_get_auxhist3_inname ( id_id , auxhist3_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist3_inname
  INTEGER id_id
  auxhist3_inname = trim(model_config_rec%auxhist3_inname)
  RETURN
END SUBROUTINE nl_get_auxhist3_inname
SUBROUTINE nl_get_auxhist3_outname ( id_id , auxhist3_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist3_outname
  INTEGER id_id
  auxhist3_outname = trim(model_config_rec%auxhist3_outname)
  RETURN
END SUBROUTINE nl_get_auxhist3_outname
SUBROUTINE nl_get_auxhist3_interval_y ( id_id , auxhist3_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist3_interval_y
  INTEGER id_id
  auxhist3_interval_y = model_config_rec%auxhist3_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist3_interval_y
SUBROUTINE nl_get_auxhist3_interval_d ( id_id , auxhist3_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist3_interval_d
  INTEGER id_id
  auxhist3_interval_d = model_config_rec%auxhist3_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist3_interval_d
SUBROUTINE nl_get_auxhist3_interval_h ( id_id , auxhist3_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist3_interval_h
  INTEGER id_id
  auxhist3_interval_h = model_config_rec%auxhist3_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist3_interval_h
SUBROUTINE nl_get_auxhist3_interval_m ( id_id , auxhist3_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist3_interval_m
  INTEGER id_id
  auxhist3_interval_m = model_config_rec%auxhist3_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist3_interval_m
SUBROUTINE nl_get_auxhist3_interval_s ( id_id , auxhist3_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist3_interval_s
  INTEGER id_id
  auxhist3_interval_s = model_config_rec%auxhist3_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist3_interval_s
SUBROUTINE nl_get_auxhist3_interval ( id_id , auxhist3_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist3_interval
  INTEGER id_id
  auxhist3_interval = model_config_rec%auxhist3_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist3_interval
SUBROUTINE nl_get_auxhist3_begin_y ( id_id , auxhist3_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist3_begin_y
  INTEGER id_id
  auxhist3_begin_y = model_config_rec%auxhist3_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist3_begin_y
SUBROUTINE nl_get_auxhist3_begin_d ( id_id , auxhist3_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist3_begin_d
  INTEGER id_id
  auxhist3_begin_d = model_config_rec%auxhist3_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist3_begin_d
SUBROUTINE nl_get_auxhist3_begin_h ( id_id , auxhist3_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist3_begin_h
  INTEGER id_id
  auxhist3_begin_h = model_config_rec%auxhist3_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist3_begin_h
SUBROUTINE nl_get_auxhist3_begin_m ( id_id , auxhist3_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist3_begin_m
  INTEGER id_id
  auxhist3_begin_m = model_config_rec%auxhist3_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist3_begin_m
SUBROUTINE nl_get_auxhist3_begin_s ( id_id , auxhist3_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist3_begin_s
  INTEGER id_id
  auxhist3_begin_s = model_config_rec%auxhist3_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist3_begin_s
SUBROUTINE nl_get_auxhist3_begin ( id_id , auxhist3_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist3_begin
  INTEGER id_id
  auxhist3_begin = model_config_rec%auxhist3_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist3_begin
SUBROUTINE nl_get_auxhist3_end_y ( id_id , auxhist3_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist3_end_y
  INTEGER id_id
  auxhist3_end_y = model_config_rec%auxhist3_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist3_end_y
SUBROUTINE nl_get_auxhist3_end_d ( id_id , auxhist3_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist3_end_d
  INTEGER id_id
  auxhist3_end_d = model_config_rec%auxhist3_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist3_end_d
SUBROUTINE nl_get_auxhist3_end_h ( id_id , auxhist3_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist3_end_h
  INTEGER id_id
  auxhist3_end_h = model_config_rec%auxhist3_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist3_end_h
SUBROUTINE nl_get_auxhist3_end_m ( id_id , auxhist3_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist3_end_m
  INTEGER id_id
  auxhist3_end_m = model_config_rec%auxhist3_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist3_end_m
SUBROUTINE nl_get_auxhist3_end_s ( id_id , auxhist3_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist3_end_s
  INTEGER id_id
  auxhist3_end_s = model_config_rec%auxhist3_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist3_end_s
SUBROUTINE nl_get_auxhist3_end ( id_id , auxhist3_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist3_end
  INTEGER id_id
  auxhist3_end = model_config_rec%auxhist3_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist3_end
SUBROUTINE nl_get_io_form_auxhist3 ( id_id , io_form_auxhist3 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxhist3
  INTEGER id_id
  io_form_auxhist3 = model_config_rec%io_form_auxhist3
  RETURN
END SUBROUTINE nl_get_io_form_auxhist3
SUBROUTINE nl_get_frames_per_auxhist3 ( id_id , frames_per_auxhist3 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxhist3
  INTEGER id_id
  frames_per_auxhist3 = model_config_rec%frames_per_auxhist3(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxhist3
SUBROUTINE nl_get_auxhist4_inname ( id_id , auxhist4_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist4_inname
  INTEGER id_id
  auxhist4_inname = trim(model_config_rec%auxhist4_inname)
  RETURN
END SUBROUTINE nl_get_auxhist4_inname
SUBROUTINE nl_get_auxhist4_outname ( id_id , auxhist4_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist4_outname
  INTEGER id_id
  auxhist4_outname = trim(model_config_rec%auxhist4_outname)
  RETURN
END SUBROUTINE nl_get_auxhist4_outname
SUBROUTINE nl_get_auxhist4_interval_y ( id_id , auxhist4_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist4_interval_y
  INTEGER id_id
  auxhist4_interval_y = model_config_rec%auxhist4_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist4_interval_y
SUBROUTINE nl_get_auxhist4_interval_d ( id_id , auxhist4_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist4_interval_d
  INTEGER id_id
  auxhist4_interval_d = model_config_rec%auxhist4_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist4_interval_d
SUBROUTINE nl_get_auxhist4_interval_h ( id_id , auxhist4_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist4_interval_h
  INTEGER id_id
  auxhist4_interval_h = model_config_rec%auxhist4_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist4_interval_h
SUBROUTINE nl_get_auxhist4_interval_m ( id_id , auxhist4_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist4_interval_m
  INTEGER id_id
  auxhist4_interval_m = model_config_rec%auxhist4_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist4_interval_m
SUBROUTINE nl_get_auxhist4_interval_s ( id_id , auxhist4_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist4_interval_s
  INTEGER id_id
  auxhist4_interval_s = model_config_rec%auxhist4_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist4_interval_s
SUBROUTINE nl_get_auxhist4_interval ( id_id , auxhist4_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist4_interval
  INTEGER id_id
  auxhist4_interval = model_config_rec%auxhist4_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist4_interval
SUBROUTINE nl_get_auxhist4_begin_y ( id_id , auxhist4_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist4_begin_y
  INTEGER id_id
  auxhist4_begin_y = model_config_rec%auxhist4_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist4_begin_y
SUBROUTINE nl_get_auxhist4_begin_d ( id_id , auxhist4_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist4_begin_d
  INTEGER id_id
  auxhist4_begin_d = model_config_rec%auxhist4_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist4_begin_d
SUBROUTINE nl_get_auxhist4_begin_h ( id_id , auxhist4_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist4_begin_h
  INTEGER id_id
  auxhist4_begin_h = model_config_rec%auxhist4_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist4_begin_h
SUBROUTINE nl_get_auxhist4_begin_m ( id_id , auxhist4_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist4_begin_m
  INTEGER id_id
  auxhist4_begin_m = model_config_rec%auxhist4_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist4_begin_m
SUBROUTINE nl_get_auxhist4_begin_s ( id_id , auxhist4_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist4_begin_s
  INTEGER id_id
  auxhist4_begin_s = model_config_rec%auxhist4_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist4_begin_s
SUBROUTINE nl_get_auxhist4_begin ( id_id , auxhist4_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist4_begin
  INTEGER id_id
  auxhist4_begin = model_config_rec%auxhist4_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist4_begin
SUBROUTINE nl_get_auxhist4_end_y ( id_id , auxhist4_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist4_end_y
  INTEGER id_id
  auxhist4_end_y = model_config_rec%auxhist4_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist4_end_y
SUBROUTINE nl_get_auxhist4_end_d ( id_id , auxhist4_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist4_end_d
  INTEGER id_id
  auxhist4_end_d = model_config_rec%auxhist4_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist4_end_d
SUBROUTINE nl_get_auxhist4_end_h ( id_id , auxhist4_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist4_end_h
  INTEGER id_id
  auxhist4_end_h = model_config_rec%auxhist4_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist4_end_h
SUBROUTINE nl_get_auxhist4_end_m ( id_id , auxhist4_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist4_end_m
  INTEGER id_id
  auxhist4_end_m = model_config_rec%auxhist4_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist4_end_m
SUBROUTINE nl_get_auxhist4_end_s ( id_id , auxhist4_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist4_end_s
  INTEGER id_id
  auxhist4_end_s = model_config_rec%auxhist4_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist4_end_s
SUBROUTINE nl_get_auxhist4_end ( id_id , auxhist4_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist4_end
  INTEGER id_id
  auxhist4_end = model_config_rec%auxhist4_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist4_end
SUBROUTINE nl_get_io_form_auxhist4 ( id_id , io_form_auxhist4 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxhist4
  INTEGER id_id
  io_form_auxhist4 = model_config_rec%io_form_auxhist4
  RETURN
END SUBROUTINE nl_get_io_form_auxhist4
SUBROUTINE nl_get_frames_per_auxhist4 ( id_id , frames_per_auxhist4 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxhist4
  INTEGER id_id
  frames_per_auxhist4 = model_config_rec%frames_per_auxhist4(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxhist4
SUBROUTINE nl_get_auxhist5_inname ( id_id , auxhist5_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist5_inname
  INTEGER id_id
  auxhist5_inname = trim(model_config_rec%auxhist5_inname)
  RETURN
END SUBROUTINE nl_get_auxhist5_inname
SUBROUTINE nl_get_auxhist5_outname ( id_id , auxhist5_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist5_outname
  INTEGER id_id
  auxhist5_outname = trim(model_config_rec%auxhist5_outname)
  RETURN
END SUBROUTINE nl_get_auxhist5_outname
SUBROUTINE nl_get_auxhist5_interval_y ( id_id , auxhist5_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist5_interval_y
  INTEGER id_id
  auxhist5_interval_y = model_config_rec%auxhist5_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist5_interval_y
SUBROUTINE nl_get_auxhist5_interval_d ( id_id , auxhist5_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist5_interval_d
  INTEGER id_id
  auxhist5_interval_d = model_config_rec%auxhist5_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist5_interval_d
SUBROUTINE nl_get_auxhist5_interval_h ( id_id , auxhist5_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist5_interval_h
  INTEGER id_id
  auxhist5_interval_h = model_config_rec%auxhist5_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist5_interval_h
SUBROUTINE nl_get_auxhist5_interval_m ( id_id , auxhist5_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist5_interval_m
  INTEGER id_id
  auxhist5_interval_m = model_config_rec%auxhist5_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist5_interval_m
SUBROUTINE nl_get_auxhist5_interval_s ( id_id , auxhist5_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist5_interval_s
  INTEGER id_id
  auxhist5_interval_s = model_config_rec%auxhist5_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist5_interval_s
SUBROUTINE nl_get_auxhist5_interval ( id_id , auxhist5_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist5_interval
  INTEGER id_id
  auxhist5_interval = model_config_rec%auxhist5_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist5_interval
SUBROUTINE nl_get_auxhist5_begin_y ( id_id , auxhist5_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist5_begin_y
  INTEGER id_id
  auxhist5_begin_y = model_config_rec%auxhist5_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist5_begin_y
SUBROUTINE nl_get_auxhist5_begin_d ( id_id , auxhist5_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist5_begin_d
  INTEGER id_id
  auxhist5_begin_d = model_config_rec%auxhist5_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist5_begin_d
SUBROUTINE nl_get_auxhist5_begin_h ( id_id , auxhist5_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist5_begin_h
  INTEGER id_id
  auxhist5_begin_h = model_config_rec%auxhist5_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist5_begin_h
SUBROUTINE nl_get_auxhist5_begin_m ( id_id , auxhist5_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist5_begin_m
  INTEGER id_id
  auxhist5_begin_m = model_config_rec%auxhist5_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist5_begin_m
SUBROUTINE nl_get_auxhist5_begin_s ( id_id , auxhist5_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist5_begin_s
  INTEGER id_id
  auxhist5_begin_s = model_config_rec%auxhist5_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist5_begin_s
SUBROUTINE nl_get_auxhist5_begin ( id_id , auxhist5_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist5_begin
  INTEGER id_id
  auxhist5_begin = model_config_rec%auxhist5_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist5_begin
SUBROUTINE nl_get_auxhist5_end_y ( id_id , auxhist5_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist5_end_y
  INTEGER id_id
  auxhist5_end_y = model_config_rec%auxhist5_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist5_end_y
SUBROUTINE nl_get_auxhist5_end_d ( id_id , auxhist5_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist5_end_d
  INTEGER id_id
  auxhist5_end_d = model_config_rec%auxhist5_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist5_end_d
SUBROUTINE nl_get_auxhist5_end_h ( id_id , auxhist5_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist5_end_h
  INTEGER id_id
  auxhist5_end_h = model_config_rec%auxhist5_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist5_end_h
SUBROUTINE nl_get_auxhist5_end_m ( id_id , auxhist5_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist5_end_m
  INTEGER id_id
  auxhist5_end_m = model_config_rec%auxhist5_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist5_end_m
SUBROUTINE nl_get_auxhist5_end_s ( id_id , auxhist5_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist5_end_s
  INTEGER id_id
  auxhist5_end_s = model_config_rec%auxhist5_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist5_end_s
SUBROUTINE nl_get_auxhist5_end ( id_id , auxhist5_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist5_end
  INTEGER id_id
  auxhist5_end = model_config_rec%auxhist5_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist5_end
#endif
#if (NNN == 3)
SUBROUTINE nl_get_io_form_auxhist5 ( id_id , io_form_auxhist5 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxhist5
  INTEGER id_id
  io_form_auxhist5 = model_config_rec%io_form_auxhist5
  RETURN
END SUBROUTINE nl_get_io_form_auxhist5
SUBROUTINE nl_get_frames_per_auxhist5 ( id_id , frames_per_auxhist5 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxhist5
  INTEGER id_id
  frames_per_auxhist5 = model_config_rec%frames_per_auxhist5(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxhist5
SUBROUTINE nl_get_auxhist6_inname ( id_id , auxhist6_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist6_inname
  INTEGER id_id
  auxhist6_inname = trim(model_config_rec%auxhist6_inname)
  RETURN
END SUBROUTINE nl_get_auxhist6_inname
SUBROUTINE nl_get_auxhist6_outname ( id_id , auxhist6_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist6_outname
  INTEGER id_id
  auxhist6_outname = trim(model_config_rec%auxhist6_outname)
  RETURN
END SUBROUTINE nl_get_auxhist6_outname
SUBROUTINE nl_get_auxhist6_interval_y ( id_id , auxhist6_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist6_interval_y
  INTEGER id_id
  auxhist6_interval_y = model_config_rec%auxhist6_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist6_interval_y
SUBROUTINE nl_get_auxhist6_interval_d ( id_id , auxhist6_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist6_interval_d
  INTEGER id_id
  auxhist6_interval_d = model_config_rec%auxhist6_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist6_interval_d
SUBROUTINE nl_get_auxhist6_interval_h ( id_id , auxhist6_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist6_interval_h
  INTEGER id_id
  auxhist6_interval_h = model_config_rec%auxhist6_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist6_interval_h
SUBROUTINE nl_get_auxhist6_interval_m ( id_id , auxhist6_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist6_interval_m
  INTEGER id_id
  auxhist6_interval_m = model_config_rec%auxhist6_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist6_interval_m
SUBROUTINE nl_get_auxhist6_interval_s ( id_id , auxhist6_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist6_interval_s
  INTEGER id_id
  auxhist6_interval_s = model_config_rec%auxhist6_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist6_interval_s
SUBROUTINE nl_get_auxhist6_interval ( id_id , auxhist6_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist6_interval
  INTEGER id_id
  auxhist6_interval = model_config_rec%auxhist6_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist6_interval
SUBROUTINE nl_get_auxhist6_begin_y ( id_id , auxhist6_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist6_begin_y
  INTEGER id_id
  auxhist6_begin_y = model_config_rec%auxhist6_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist6_begin_y
SUBROUTINE nl_get_auxhist6_begin_d ( id_id , auxhist6_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist6_begin_d
  INTEGER id_id
  auxhist6_begin_d = model_config_rec%auxhist6_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist6_begin_d
SUBROUTINE nl_get_auxhist6_begin_h ( id_id , auxhist6_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist6_begin_h
  INTEGER id_id
  auxhist6_begin_h = model_config_rec%auxhist6_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist6_begin_h
SUBROUTINE nl_get_auxhist6_begin_m ( id_id , auxhist6_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist6_begin_m
  INTEGER id_id
  auxhist6_begin_m = model_config_rec%auxhist6_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist6_begin_m
SUBROUTINE nl_get_auxhist6_begin_s ( id_id , auxhist6_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist6_begin_s
  INTEGER id_id
  auxhist6_begin_s = model_config_rec%auxhist6_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist6_begin_s
SUBROUTINE nl_get_auxhist6_begin ( id_id , auxhist6_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist6_begin
  INTEGER id_id
  auxhist6_begin = model_config_rec%auxhist6_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist6_begin
SUBROUTINE nl_get_auxhist6_end_y ( id_id , auxhist6_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist6_end_y
  INTEGER id_id
  auxhist6_end_y = model_config_rec%auxhist6_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist6_end_y
SUBROUTINE nl_get_auxhist6_end_d ( id_id , auxhist6_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist6_end_d
  INTEGER id_id
  auxhist6_end_d = model_config_rec%auxhist6_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist6_end_d
SUBROUTINE nl_get_auxhist6_end_h ( id_id , auxhist6_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist6_end_h
  INTEGER id_id
  auxhist6_end_h = model_config_rec%auxhist6_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist6_end_h
SUBROUTINE nl_get_auxhist6_end_m ( id_id , auxhist6_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist6_end_m
  INTEGER id_id
  auxhist6_end_m = model_config_rec%auxhist6_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist6_end_m
SUBROUTINE nl_get_auxhist6_end_s ( id_id , auxhist6_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist6_end_s
  INTEGER id_id
  auxhist6_end_s = model_config_rec%auxhist6_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist6_end_s
SUBROUTINE nl_get_auxhist6_end ( id_id , auxhist6_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist6_end
  INTEGER id_id
  auxhist6_end = model_config_rec%auxhist6_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist6_end
SUBROUTINE nl_get_io_form_auxhist6 ( id_id , io_form_auxhist6 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxhist6
  INTEGER id_id
  io_form_auxhist6 = model_config_rec%io_form_auxhist6
  RETURN
END SUBROUTINE nl_get_io_form_auxhist6
SUBROUTINE nl_get_frames_per_auxhist6 ( id_id , frames_per_auxhist6 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxhist6
  INTEGER id_id
  frames_per_auxhist6 = model_config_rec%frames_per_auxhist6(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxhist6
SUBROUTINE nl_get_auxhist7_inname ( id_id , auxhist7_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist7_inname
  INTEGER id_id
  auxhist7_inname = trim(model_config_rec%auxhist7_inname)
  RETURN
END SUBROUTINE nl_get_auxhist7_inname
SUBROUTINE nl_get_auxhist7_outname ( id_id , auxhist7_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist7_outname
  INTEGER id_id
  auxhist7_outname = trim(model_config_rec%auxhist7_outname)
  RETURN
END SUBROUTINE nl_get_auxhist7_outname
SUBROUTINE nl_get_auxhist7_interval_y ( id_id , auxhist7_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist7_interval_y
  INTEGER id_id
  auxhist7_interval_y = model_config_rec%auxhist7_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist7_interval_y
SUBROUTINE nl_get_auxhist7_interval_d ( id_id , auxhist7_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist7_interval_d
  INTEGER id_id
  auxhist7_interval_d = model_config_rec%auxhist7_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist7_interval_d
SUBROUTINE nl_get_auxhist7_interval_h ( id_id , auxhist7_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist7_interval_h
  INTEGER id_id
  auxhist7_interval_h = model_config_rec%auxhist7_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist7_interval_h
SUBROUTINE nl_get_auxhist7_interval_m ( id_id , auxhist7_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist7_interval_m
  INTEGER id_id
  auxhist7_interval_m = model_config_rec%auxhist7_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist7_interval_m
SUBROUTINE nl_get_auxhist7_interval_s ( id_id , auxhist7_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist7_interval_s
  INTEGER id_id
  auxhist7_interval_s = model_config_rec%auxhist7_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist7_interval_s
SUBROUTINE nl_get_auxhist7_interval ( id_id , auxhist7_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist7_interval
  INTEGER id_id
  auxhist7_interval = model_config_rec%auxhist7_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist7_interval
SUBROUTINE nl_get_auxhist7_begin_y ( id_id , auxhist7_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist7_begin_y
  INTEGER id_id
  auxhist7_begin_y = model_config_rec%auxhist7_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist7_begin_y
SUBROUTINE nl_get_auxhist7_begin_d ( id_id , auxhist7_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist7_begin_d
  INTEGER id_id
  auxhist7_begin_d = model_config_rec%auxhist7_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist7_begin_d
SUBROUTINE nl_get_auxhist7_begin_h ( id_id , auxhist7_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist7_begin_h
  INTEGER id_id
  auxhist7_begin_h = model_config_rec%auxhist7_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist7_begin_h
SUBROUTINE nl_get_auxhist7_begin_m ( id_id , auxhist7_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist7_begin_m
  INTEGER id_id
  auxhist7_begin_m = model_config_rec%auxhist7_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist7_begin_m
SUBROUTINE nl_get_auxhist7_begin_s ( id_id , auxhist7_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist7_begin_s
  INTEGER id_id
  auxhist7_begin_s = model_config_rec%auxhist7_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist7_begin_s
SUBROUTINE nl_get_auxhist7_begin ( id_id , auxhist7_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist7_begin
  INTEGER id_id
  auxhist7_begin = model_config_rec%auxhist7_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist7_begin
SUBROUTINE nl_get_auxhist7_end_y ( id_id , auxhist7_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist7_end_y
  INTEGER id_id
  auxhist7_end_y = model_config_rec%auxhist7_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist7_end_y
SUBROUTINE nl_get_auxhist7_end_d ( id_id , auxhist7_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist7_end_d
  INTEGER id_id
  auxhist7_end_d = model_config_rec%auxhist7_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist7_end_d
SUBROUTINE nl_get_auxhist7_end_h ( id_id , auxhist7_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist7_end_h
  INTEGER id_id
  auxhist7_end_h = model_config_rec%auxhist7_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist7_end_h
SUBROUTINE nl_get_auxhist7_end_m ( id_id , auxhist7_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist7_end_m
  INTEGER id_id
  auxhist7_end_m = model_config_rec%auxhist7_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist7_end_m
SUBROUTINE nl_get_auxhist7_end_s ( id_id , auxhist7_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist7_end_s
  INTEGER id_id
  auxhist7_end_s = model_config_rec%auxhist7_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist7_end_s
SUBROUTINE nl_get_auxhist7_end ( id_id , auxhist7_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist7_end
  INTEGER id_id
  auxhist7_end = model_config_rec%auxhist7_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist7_end
SUBROUTINE nl_get_io_form_auxhist7 ( id_id , io_form_auxhist7 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxhist7
  INTEGER id_id
  io_form_auxhist7 = model_config_rec%io_form_auxhist7
  RETURN
END SUBROUTINE nl_get_io_form_auxhist7
SUBROUTINE nl_get_frames_per_auxhist7 ( id_id , frames_per_auxhist7 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxhist7
  INTEGER id_id
  frames_per_auxhist7 = model_config_rec%frames_per_auxhist7(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxhist7
SUBROUTINE nl_get_auxhist8_inname ( id_id , auxhist8_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist8_inname
  INTEGER id_id
  auxhist8_inname = trim(model_config_rec%auxhist8_inname)
  RETURN
END SUBROUTINE nl_get_auxhist8_inname
SUBROUTINE nl_get_auxhist8_outname ( id_id , auxhist8_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist8_outname
  INTEGER id_id
  auxhist8_outname = trim(model_config_rec%auxhist8_outname)
  RETURN
END SUBROUTINE nl_get_auxhist8_outname
SUBROUTINE nl_get_auxhist8_interval_y ( id_id , auxhist8_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist8_interval_y
  INTEGER id_id
  auxhist8_interval_y = model_config_rec%auxhist8_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist8_interval_y
SUBROUTINE nl_get_auxhist8_interval_d ( id_id , auxhist8_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist8_interval_d
  INTEGER id_id
  auxhist8_interval_d = model_config_rec%auxhist8_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist8_interval_d
SUBROUTINE nl_get_auxhist8_interval_h ( id_id , auxhist8_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist8_interval_h
  INTEGER id_id
  auxhist8_interval_h = model_config_rec%auxhist8_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist8_interval_h
SUBROUTINE nl_get_auxhist8_interval_m ( id_id , auxhist8_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist8_interval_m
  INTEGER id_id
  auxhist8_interval_m = model_config_rec%auxhist8_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist8_interval_m
SUBROUTINE nl_get_auxhist8_interval_s ( id_id , auxhist8_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist8_interval_s
  INTEGER id_id
  auxhist8_interval_s = model_config_rec%auxhist8_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist8_interval_s
SUBROUTINE nl_get_auxhist8_interval ( id_id , auxhist8_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist8_interval
  INTEGER id_id
  auxhist8_interval = model_config_rec%auxhist8_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist8_interval
SUBROUTINE nl_get_auxhist8_begin_y ( id_id , auxhist8_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist8_begin_y
  INTEGER id_id
  auxhist8_begin_y = model_config_rec%auxhist8_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist8_begin_y
SUBROUTINE nl_get_auxhist8_begin_d ( id_id , auxhist8_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist8_begin_d
  INTEGER id_id
  auxhist8_begin_d = model_config_rec%auxhist8_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist8_begin_d
SUBROUTINE nl_get_auxhist8_begin_h ( id_id , auxhist8_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist8_begin_h
  INTEGER id_id
  auxhist8_begin_h = model_config_rec%auxhist8_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist8_begin_h
SUBROUTINE nl_get_auxhist8_begin_m ( id_id , auxhist8_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist8_begin_m
  INTEGER id_id
  auxhist8_begin_m = model_config_rec%auxhist8_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist8_begin_m
SUBROUTINE nl_get_auxhist8_begin_s ( id_id , auxhist8_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist8_begin_s
  INTEGER id_id
  auxhist8_begin_s = model_config_rec%auxhist8_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist8_begin_s
SUBROUTINE nl_get_auxhist8_begin ( id_id , auxhist8_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist8_begin
  INTEGER id_id
  auxhist8_begin = model_config_rec%auxhist8_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist8_begin
SUBROUTINE nl_get_auxhist8_end_y ( id_id , auxhist8_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist8_end_y
  INTEGER id_id
  auxhist8_end_y = model_config_rec%auxhist8_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist8_end_y
SUBROUTINE nl_get_auxhist8_end_d ( id_id , auxhist8_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist8_end_d
  INTEGER id_id
  auxhist8_end_d = model_config_rec%auxhist8_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist8_end_d
SUBROUTINE nl_get_auxhist8_end_h ( id_id , auxhist8_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist8_end_h
  INTEGER id_id
  auxhist8_end_h = model_config_rec%auxhist8_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist8_end_h
SUBROUTINE nl_get_auxhist8_end_m ( id_id , auxhist8_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist8_end_m
  INTEGER id_id
  auxhist8_end_m = model_config_rec%auxhist8_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist8_end_m
SUBROUTINE nl_get_auxhist8_end_s ( id_id , auxhist8_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist8_end_s
  INTEGER id_id
  auxhist8_end_s = model_config_rec%auxhist8_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist8_end_s
SUBROUTINE nl_get_auxhist8_end ( id_id , auxhist8_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist8_end
  INTEGER id_id
  auxhist8_end = model_config_rec%auxhist8_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist8_end
SUBROUTINE nl_get_io_form_auxhist8 ( id_id , io_form_auxhist8 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxhist8
  INTEGER id_id
  io_form_auxhist8 = model_config_rec%io_form_auxhist8
  RETURN
END SUBROUTINE nl_get_io_form_auxhist8
SUBROUTINE nl_get_frames_per_auxhist8 ( id_id , frames_per_auxhist8 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxhist8
  INTEGER id_id
  frames_per_auxhist8 = model_config_rec%frames_per_auxhist8(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxhist8
SUBROUTINE nl_get_auxhist9_inname ( id_id , auxhist9_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist9_inname
  INTEGER id_id
  auxhist9_inname = trim(model_config_rec%auxhist9_inname)
  RETURN
END SUBROUTINE nl_get_auxhist9_inname
SUBROUTINE nl_get_auxhist9_outname ( id_id , auxhist9_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist9_outname
  INTEGER id_id
  auxhist9_outname = trim(model_config_rec%auxhist9_outname)
  RETURN
END SUBROUTINE nl_get_auxhist9_outname
SUBROUTINE nl_get_auxhist9_interval_y ( id_id , auxhist9_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist9_interval_y
  INTEGER id_id
  auxhist9_interval_y = model_config_rec%auxhist9_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist9_interval_y
SUBROUTINE nl_get_auxhist9_interval_d ( id_id , auxhist9_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist9_interval_d
  INTEGER id_id
  auxhist9_interval_d = model_config_rec%auxhist9_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist9_interval_d
SUBROUTINE nl_get_auxhist9_interval_h ( id_id , auxhist9_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist9_interval_h
  INTEGER id_id
  auxhist9_interval_h = model_config_rec%auxhist9_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist9_interval_h
SUBROUTINE nl_get_auxhist9_interval_m ( id_id , auxhist9_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist9_interval_m
  INTEGER id_id
  auxhist9_interval_m = model_config_rec%auxhist9_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist9_interval_m
SUBROUTINE nl_get_auxhist9_interval_s ( id_id , auxhist9_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist9_interval_s
  INTEGER id_id
  auxhist9_interval_s = model_config_rec%auxhist9_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist9_interval_s
SUBROUTINE nl_get_auxhist9_interval ( id_id , auxhist9_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist9_interval
  INTEGER id_id
  auxhist9_interval = model_config_rec%auxhist9_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist9_interval
SUBROUTINE nl_get_auxhist9_begin_y ( id_id , auxhist9_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist9_begin_y
  INTEGER id_id
  auxhist9_begin_y = model_config_rec%auxhist9_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist9_begin_y
SUBROUTINE nl_get_auxhist9_begin_d ( id_id , auxhist9_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist9_begin_d
  INTEGER id_id
  auxhist9_begin_d = model_config_rec%auxhist9_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist9_begin_d
SUBROUTINE nl_get_auxhist9_begin_h ( id_id , auxhist9_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist9_begin_h
  INTEGER id_id
  auxhist9_begin_h = model_config_rec%auxhist9_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist9_begin_h
SUBROUTINE nl_get_auxhist9_begin_m ( id_id , auxhist9_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist9_begin_m
  INTEGER id_id
  auxhist9_begin_m = model_config_rec%auxhist9_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist9_begin_m
SUBROUTINE nl_get_auxhist9_begin_s ( id_id , auxhist9_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist9_begin_s
  INTEGER id_id
  auxhist9_begin_s = model_config_rec%auxhist9_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist9_begin_s
SUBROUTINE nl_get_auxhist9_begin ( id_id , auxhist9_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist9_begin
  INTEGER id_id
  auxhist9_begin = model_config_rec%auxhist9_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist9_begin
SUBROUTINE nl_get_auxhist9_end_y ( id_id , auxhist9_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist9_end_y
  INTEGER id_id
  auxhist9_end_y = model_config_rec%auxhist9_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist9_end_y
SUBROUTINE nl_get_auxhist9_end_d ( id_id , auxhist9_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist9_end_d
  INTEGER id_id
  auxhist9_end_d = model_config_rec%auxhist9_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist9_end_d
SUBROUTINE nl_get_auxhist9_end_h ( id_id , auxhist9_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist9_end_h
  INTEGER id_id
  auxhist9_end_h = model_config_rec%auxhist9_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist9_end_h
SUBROUTINE nl_get_auxhist9_end_m ( id_id , auxhist9_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist9_end_m
  INTEGER id_id
  auxhist9_end_m = model_config_rec%auxhist9_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist9_end_m
SUBROUTINE nl_get_auxhist9_end_s ( id_id , auxhist9_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist9_end_s
  INTEGER id_id
  auxhist9_end_s = model_config_rec%auxhist9_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist9_end_s
SUBROUTINE nl_get_auxhist9_end ( id_id , auxhist9_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist9_end
  INTEGER id_id
  auxhist9_end = model_config_rec%auxhist9_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist9_end
SUBROUTINE nl_get_io_form_auxhist9 ( id_id , io_form_auxhist9 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxhist9
  INTEGER id_id
  io_form_auxhist9 = model_config_rec%io_form_auxhist9
  RETURN
END SUBROUTINE nl_get_io_form_auxhist9
SUBROUTINE nl_get_frames_per_auxhist9 ( id_id , frames_per_auxhist9 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxhist9
  INTEGER id_id
  frames_per_auxhist9 = model_config_rec%frames_per_auxhist9(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxhist9
SUBROUTINE nl_get_auxhist10_inname ( id_id , auxhist10_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist10_inname
  INTEGER id_id
  auxhist10_inname = trim(model_config_rec%auxhist10_inname)
  RETURN
END SUBROUTINE nl_get_auxhist10_inname
SUBROUTINE nl_get_auxhist10_outname ( id_id , auxhist10_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist10_outname
  INTEGER id_id
  auxhist10_outname = trim(model_config_rec%auxhist10_outname)
  RETURN
END SUBROUTINE nl_get_auxhist10_outname
SUBROUTINE nl_get_auxhist10_interval_y ( id_id , auxhist10_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist10_interval_y
  INTEGER id_id
  auxhist10_interval_y = model_config_rec%auxhist10_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist10_interval_y
SUBROUTINE nl_get_auxhist10_interval_d ( id_id , auxhist10_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist10_interval_d
  INTEGER id_id
  auxhist10_interval_d = model_config_rec%auxhist10_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist10_interval_d
SUBROUTINE nl_get_auxhist10_interval_h ( id_id , auxhist10_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist10_interval_h
  INTEGER id_id
  auxhist10_interval_h = model_config_rec%auxhist10_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist10_interval_h
SUBROUTINE nl_get_auxhist10_interval_m ( id_id , auxhist10_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist10_interval_m
  INTEGER id_id
  auxhist10_interval_m = model_config_rec%auxhist10_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist10_interval_m
SUBROUTINE nl_get_auxhist10_interval_s ( id_id , auxhist10_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist10_interval_s
  INTEGER id_id
  auxhist10_interval_s = model_config_rec%auxhist10_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist10_interval_s
SUBROUTINE nl_get_auxhist10_interval ( id_id , auxhist10_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist10_interval
  INTEGER id_id
  auxhist10_interval = model_config_rec%auxhist10_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist10_interval
SUBROUTINE nl_get_auxhist10_begin_y ( id_id , auxhist10_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist10_begin_y
  INTEGER id_id
  auxhist10_begin_y = model_config_rec%auxhist10_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist10_begin_y
SUBROUTINE nl_get_auxhist10_begin_d ( id_id , auxhist10_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist10_begin_d
  INTEGER id_id
  auxhist10_begin_d = model_config_rec%auxhist10_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist10_begin_d
SUBROUTINE nl_get_auxhist10_begin_h ( id_id , auxhist10_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist10_begin_h
  INTEGER id_id
  auxhist10_begin_h = model_config_rec%auxhist10_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist10_begin_h
SUBROUTINE nl_get_auxhist10_begin_m ( id_id , auxhist10_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist10_begin_m
  INTEGER id_id
  auxhist10_begin_m = model_config_rec%auxhist10_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist10_begin_m
SUBROUTINE nl_get_auxhist10_begin_s ( id_id , auxhist10_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist10_begin_s
  INTEGER id_id
  auxhist10_begin_s = model_config_rec%auxhist10_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist10_begin_s
SUBROUTINE nl_get_auxhist10_begin ( id_id , auxhist10_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist10_begin
  INTEGER id_id
  auxhist10_begin = model_config_rec%auxhist10_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist10_begin
SUBROUTINE nl_get_auxhist10_end_y ( id_id , auxhist10_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist10_end_y
  INTEGER id_id
  auxhist10_end_y = model_config_rec%auxhist10_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist10_end_y
SUBROUTINE nl_get_auxhist10_end_d ( id_id , auxhist10_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist10_end_d
  INTEGER id_id
  auxhist10_end_d = model_config_rec%auxhist10_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist10_end_d
SUBROUTINE nl_get_auxhist10_end_h ( id_id , auxhist10_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist10_end_h
  INTEGER id_id
  auxhist10_end_h = model_config_rec%auxhist10_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist10_end_h
SUBROUTINE nl_get_auxhist10_end_m ( id_id , auxhist10_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist10_end_m
  INTEGER id_id
  auxhist10_end_m = model_config_rec%auxhist10_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist10_end_m
SUBROUTINE nl_get_auxhist10_end_s ( id_id , auxhist10_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist10_end_s
  INTEGER id_id
  auxhist10_end_s = model_config_rec%auxhist10_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist10_end_s
SUBROUTINE nl_get_auxhist10_end ( id_id , auxhist10_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist10_end
  INTEGER id_id
  auxhist10_end = model_config_rec%auxhist10_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist10_end
SUBROUTINE nl_get_io_form_auxhist10 ( id_id , io_form_auxhist10 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxhist10
  INTEGER id_id
  io_form_auxhist10 = model_config_rec%io_form_auxhist10
  RETURN
END SUBROUTINE nl_get_io_form_auxhist10
SUBROUTINE nl_get_frames_per_auxhist10 ( id_id , frames_per_auxhist10 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxhist10
  INTEGER id_id
  frames_per_auxhist10 = model_config_rec%frames_per_auxhist10(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxhist10
SUBROUTINE nl_get_auxhist11_inname ( id_id , auxhist11_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist11_inname
  INTEGER id_id
  auxhist11_inname = trim(model_config_rec%auxhist11_inname)
  RETURN
END SUBROUTINE nl_get_auxhist11_inname
SUBROUTINE nl_get_auxhist11_outname ( id_id , auxhist11_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist11_outname
  INTEGER id_id
  auxhist11_outname = trim(model_config_rec%auxhist11_outname)
  RETURN
END SUBROUTINE nl_get_auxhist11_outname
SUBROUTINE nl_get_auxhist11_interval_y ( id_id , auxhist11_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist11_interval_y
  INTEGER id_id
  auxhist11_interval_y = model_config_rec%auxhist11_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist11_interval_y
SUBROUTINE nl_get_auxhist11_interval_d ( id_id , auxhist11_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist11_interval_d
  INTEGER id_id
  auxhist11_interval_d = model_config_rec%auxhist11_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist11_interval_d
SUBROUTINE nl_get_auxhist11_interval_h ( id_id , auxhist11_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist11_interval_h
  INTEGER id_id
  auxhist11_interval_h = model_config_rec%auxhist11_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist11_interval_h
SUBROUTINE nl_get_auxhist11_interval_m ( id_id , auxhist11_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist11_interval_m
  INTEGER id_id
  auxhist11_interval_m = model_config_rec%auxhist11_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist11_interval_m
SUBROUTINE nl_get_auxhist11_interval_s ( id_id , auxhist11_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist11_interval_s
  INTEGER id_id
  auxhist11_interval_s = model_config_rec%auxhist11_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist11_interval_s
SUBROUTINE nl_get_auxhist11_interval ( id_id , auxhist11_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist11_interval
  INTEGER id_id
  auxhist11_interval = model_config_rec%auxhist11_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist11_interval
SUBROUTINE nl_get_auxhist11_begin_y ( id_id , auxhist11_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist11_begin_y
  INTEGER id_id
  auxhist11_begin_y = model_config_rec%auxhist11_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist11_begin_y
SUBROUTINE nl_get_auxhist11_begin_d ( id_id , auxhist11_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist11_begin_d
  INTEGER id_id
  auxhist11_begin_d = model_config_rec%auxhist11_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist11_begin_d
SUBROUTINE nl_get_auxhist11_begin_h ( id_id , auxhist11_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist11_begin_h
  INTEGER id_id
  auxhist11_begin_h = model_config_rec%auxhist11_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist11_begin_h
SUBROUTINE nl_get_auxhist11_begin_m ( id_id , auxhist11_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist11_begin_m
  INTEGER id_id
  auxhist11_begin_m = model_config_rec%auxhist11_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist11_begin_m
SUBROUTINE nl_get_auxhist11_begin_s ( id_id , auxhist11_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist11_begin_s
  INTEGER id_id
  auxhist11_begin_s = model_config_rec%auxhist11_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist11_begin_s
SUBROUTINE nl_get_auxhist11_begin ( id_id , auxhist11_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist11_begin
  INTEGER id_id
  auxhist11_begin = model_config_rec%auxhist11_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist11_begin
SUBROUTINE nl_get_auxhist11_end_y ( id_id , auxhist11_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist11_end_y
  INTEGER id_id
  auxhist11_end_y = model_config_rec%auxhist11_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist11_end_y
SUBROUTINE nl_get_auxhist11_end_d ( id_id , auxhist11_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist11_end_d
  INTEGER id_id
  auxhist11_end_d = model_config_rec%auxhist11_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist11_end_d
SUBROUTINE nl_get_auxhist11_end_h ( id_id , auxhist11_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist11_end_h
  INTEGER id_id
  auxhist11_end_h = model_config_rec%auxhist11_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist11_end_h
SUBROUTINE nl_get_auxhist11_end_m ( id_id , auxhist11_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist11_end_m
  INTEGER id_id
  auxhist11_end_m = model_config_rec%auxhist11_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist11_end_m
SUBROUTINE nl_get_auxhist11_end_s ( id_id , auxhist11_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist11_end_s
  INTEGER id_id
  auxhist11_end_s = model_config_rec%auxhist11_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist11_end_s
SUBROUTINE nl_get_auxhist11_end ( id_id , auxhist11_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist11_end
  INTEGER id_id
  auxhist11_end = model_config_rec%auxhist11_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist11_end
SUBROUTINE nl_get_io_form_auxhist11 ( id_id , io_form_auxhist11 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxhist11
  INTEGER id_id
  io_form_auxhist11 = model_config_rec%io_form_auxhist11
  RETURN
END SUBROUTINE nl_get_io_form_auxhist11
SUBROUTINE nl_get_frames_per_auxhist11 ( id_id , frames_per_auxhist11 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxhist11
  INTEGER id_id
  frames_per_auxhist11 = model_config_rec%frames_per_auxhist11(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxhist11
SUBROUTINE nl_get_auxhist12_inname ( id_id , auxhist12_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist12_inname
  INTEGER id_id
  auxhist12_inname = trim(model_config_rec%auxhist12_inname)
  RETURN
END SUBROUTINE nl_get_auxhist12_inname
SUBROUTINE nl_get_auxhist12_outname ( id_id , auxhist12_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist12_outname
  INTEGER id_id
  auxhist12_outname = trim(model_config_rec%auxhist12_outname)
  RETURN
END SUBROUTINE nl_get_auxhist12_outname
SUBROUTINE nl_get_auxhist12_interval_y ( id_id , auxhist12_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist12_interval_y
  INTEGER id_id
  auxhist12_interval_y = model_config_rec%auxhist12_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist12_interval_y
SUBROUTINE nl_get_auxhist12_interval_d ( id_id , auxhist12_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist12_interval_d
  INTEGER id_id
  auxhist12_interval_d = model_config_rec%auxhist12_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist12_interval_d
SUBROUTINE nl_get_auxhist12_interval_h ( id_id , auxhist12_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist12_interval_h
  INTEGER id_id
  auxhist12_interval_h = model_config_rec%auxhist12_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist12_interval_h
SUBROUTINE nl_get_auxhist12_interval_m ( id_id , auxhist12_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist12_interval_m
  INTEGER id_id
  auxhist12_interval_m = model_config_rec%auxhist12_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist12_interval_m
SUBROUTINE nl_get_auxhist12_interval_s ( id_id , auxhist12_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist12_interval_s
  INTEGER id_id
  auxhist12_interval_s = model_config_rec%auxhist12_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist12_interval_s
SUBROUTINE nl_get_auxhist12_interval ( id_id , auxhist12_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist12_interval
  INTEGER id_id
  auxhist12_interval = model_config_rec%auxhist12_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist12_interval
SUBROUTINE nl_get_auxhist12_begin_y ( id_id , auxhist12_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist12_begin_y
  INTEGER id_id
  auxhist12_begin_y = model_config_rec%auxhist12_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist12_begin_y
SUBROUTINE nl_get_auxhist12_begin_d ( id_id , auxhist12_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist12_begin_d
  INTEGER id_id
  auxhist12_begin_d = model_config_rec%auxhist12_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist12_begin_d
SUBROUTINE nl_get_auxhist12_begin_h ( id_id , auxhist12_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist12_begin_h
  INTEGER id_id
  auxhist12_begin_h = model_config_rec%auxhist12_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist12_begin_h
SUBROUTINE nl_get_auxhist12_begin_m ( id_id , auxhist12_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist12_begin_m
  INTEGER id_id
  auxhist12_begin_m = model_config_rec%auxhist12_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist12_begin_m
SUBROUTINE nl_get_auxhist12_begin_s ( id_id , auxhist12_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist12_begin_s
  INTEGER id_id
  auxhist12_begin_s = model_config_rec%auxhist12_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist12_begin_s
SUBROUTINE nl_get_auxhist12_begin ( id_id , auxhist12_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist12_begin
  INTEGER id_id
  auxhist12_begin = model_config_rec%auxhist12_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist12_begin
SUBROUTINE nl_get_auxhist12_end_y ( id_id , auxhist12_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist12_end_y
  INTEGER id_id
  auxhist12_end_y = model_config_rec%auxhist12_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist12_end_y
SUBROUTINE nl_get_auxhist12_end_d ( id_id , auxhist12_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist12_end_d
  INTEGER id_id
  auxhist12_end_d = model_config_rec%auxhist12_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist12_end_d
SUBROUTINE nl_get_auxhist12_end_h ( id_id , auxhist12_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist12_end_h
  INTEGER id_id
  auxhist12_end_h = model_config_rec%auxhist12_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist12_end_h
SUBROUTINE nl_get_auxhist12_end_m ( id_id , auxhist12_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist12_end_m
  INTEGER id_id
  auxhist12_end_m = model_config_rec%auxhist12_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist12_end_m
SUBROUTINE nl_get_auxhist12_end_s ( id_id , auxhist12_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist12_end_s
  INTEGER id_id
  auxhist12_end_s = model_config_rec%auxhist12_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist12_end_s
SUBROUTINE nl_get_auxhist12_end ( id_id , auxhist12_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist12_end
  INTEGER id_id
  auxhist12_end = model_config_rec%auxhist12_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist12_end
SUBROUTINE nl_get_io_form_auxhist12 ( id_id , io_form_auxhist12 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxhist12
  INTEGER id_id
  io_form_auxhist12 = model_config_rec%io_form_auxhist12
  RETURN
END SUBROUTINE nl_get_io_form_auxhist12
SUBROUTINE nl_get_frames_per_auxhist12 ( id_id , frames_per_auxhist12 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxhist12
  INTEGER id_id
  frames_per_auxhist12 = model_config_rec%frames_per_auxhist12(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxhist12
SUBROUTINE nl_get_auxhist13_inname ( id_id , auxhist13_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist13_inname
  INTEGER id_id
  auxhist13_inname = trim(model_config_rec%auxhist13_inname)
  RETURN
END SUBROUTINE nl_get_auxhist13_inname
SUBROUTINE nl_get_auxhist13_outname ( id_id , auxhist13_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist13_outname
  INTEGER id_id
  auxhist13_outname = trim(model_config_rec%auxhist13_outname)
  RETURN
END SUBROUTINE nl_get_auxhist13_outname
SUBROUTINE nl_get_auxhist13_interval_y ( id_id , auxhist13_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist13_interval_y
  INTEGER id_id
  auxhist13_interval_y = model_config_rec%auxhist13_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist13_interval_y
SUBROUTINE nl_get_auxhist13_interval_d ( id_id , auxhist13_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist13_interval_d
  INTEGER id_id
  auxhist13_interval_d = model_config_rec%auxhist13_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist13_interval_d
SUBROUTINE nl_get_auxhist13_interval_h ( id_id , auxhist13_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist13_interval_h
  INTEGER id_id
  auxhist13_interval_h = model_config_rec%auxhist13_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist13_interval_h
SUBROUTINE nl_get_auxhist13_interval_m ( id_id , auxhist13_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist13_interval_m
  INTEGER id_id
  auxhist13_interval_m = model_config_rec%auxhist13_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist13_interval_m
SUBROUTINE nl_get_auxhist13_interval_s ( id_id , auxhist13_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist13_interval_s
  INTEGER id_id
  auxhist13_interval_s = model_config_rec%auxhist13_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist13_interval_s
SUBROUTINE nl_get_auxhist13_interval ( id_id , auxhist13_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist13_interval
  INTEGER id_id
  auxhist13_interval = model_config_rec%auxhist13_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist13_interval
SUBROUTINE nl_get_auxhist13_begin_y ( id_id , auxhist13_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist13_begin_y
  INTEGER id_id
  auxhist13_begin_y = model_config_rec%auxhist13_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist13_begin_y
SUBROUTINE nl_get_auxhist13_begin_d ( id_id , auxhist13_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist13_begin_d
  INTEGER id_id
  auxhist13_begin_d = model_config_rec%auxhist13_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist13_begin_d
SUBROUTINE nl_get_auxhist13_begin_h ( id_id , auxhist13_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist13_begin_h
  INTEGER id_id
  auxhist13_begin_h = model_config_rec%auxhist13_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist13_begin_h
SUBROUTINE nl_get_auxhist13_begin_m ( id_id , auxhist13_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist13_begin_m
  INTEGER id_id
  auxhist13_begin_m = model_config_rec%auxhist13_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist13_begin_m
SUBROUTINE nl_get_auxhist13_begin_s ( id_id , auxhist13_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist13_begin_s
  INTEGER id_id
  auxhist13_begin_s = model_config_rec%auxhist13_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist13_begin_s
SUBROUTINE nl_get_auxhist13_begin ( id_id , auxhist13_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist13_begin
  INTEGER id_id
  auxhist13_begin = model_config_rec%auxhist13_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist13_begin
SUBROUTINE nl_get_auxhist13_end_y ( id_id , auxhist13_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist13_end_y
  INTEGER id_id
  auxhist13_end_y = model_config_rec%auxhist13_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist13_end_y
SUBROUTINE nl_get_auxhist13_end_d ( id_id , auxhist13_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist13_end_d
  INTEGER id_id
  auxhist13_end_d = model_config_rec%auxhist13_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist13_end_d
SUBROUTINE nl_get_auxhist13_end_h ( id_id , auxhist13_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist13_end_h
  INTEGER id_id
  auxhist13_end_h = model_config_rec%auxhist13_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist13_end_h
SUBROUTINE nl_get_auxhist13_end_m ( id_id , auxhist13_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist13_end_m
  INTEGER id_id
  auxhist13_end_m = model_config_rec%auxhist13_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist13_end_m
SUBROUTINE nl_get_auxhist13_end_s ( id_id , auxhist13_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist13_end_s
  INTEGER id_id
  auxhist13_end_s = model_config_rec%auxhist13_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist13_end_s
SUBROUTINE nl_get_auxhist13_end ( id_id , auxhist13_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist13_end
  INTEGER id_id
  auxhist13_end = model_config_rec%auxhist13_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist13_end
SUBROUTINE nl_get_io_form_auxhist13 ( id_id , io_form_auxhist13 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxhist13
  INTEGER id_id
  io_form_auxhist13 = model_config_rec%io_form_auxhist13
  RETURN
END SUBROUTINE nl_get_io_form_auxhist13
SUBROUTINE nl_get_frames_per_auxhist13 ( id_id , frames_per_auxhist13 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxhist13
  INTEGER id_id
  frames_per_auxhist13 = model_config_rec%frames_per_auxhist13(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxhist13
SUBROUTINE nl_get_auxhist14_inname ( id_id , auxhist14_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist14_inname
  INTEGER id_id
  auxhist14_inname = trim(model_config_rec%auxhist14_inname)
  RETURN
END SUBROUTINE nl_get_auxhist14_inname
SUBROUTINE nl_get_auxhist14_outname ( id_id , auxhist14_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist14_outname
  INTEGER id_id
  auxhist14_outname = trim(model_config_rec%auxhist14_outname)
  RETURN
END SUBROUTINE nl_get_auxhist14_outname
SUBROUTINE nl_get_auxhist14_interval_y ( id_id , auxhist14_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist14_interval_y
  INTEGER id_id
  auxhist14_interval_y = model_config_rec%auxhist14_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist14_interval_y
SUBROUTINE nl_get_auxhist14_interval_d ( id_id , auxhist14_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist14_interval_d
  INTEGER id_id
  auxhist14_interval_d = model_config_rec%auxhist14_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist14_interval_d
SUBROUTINE nl_get_auxhist14_interval_h ( id_id , auxhist14_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist14_interval_h
  INTEGER id_id
  auxhist14_interval_h = model_config_rec%auxhist14_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist14_interval_h
SUBROUTINE nl_get_auxhist14_interval_m ( id_id , auxhist14_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist14_interval_m
  INTEGER id_id
  auxhist14_interval_m = model_config_rec%auxhist14_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist14_interval_m
SUBROUTINE nl_get_auxhist14_interval_s ( id_id , auxhist14_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist14_interval_s
  INTEGER id_id
  auxhist14_interval_s = model_config_rec%auxhist14_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist14_interval_s
SUBROUTINE nl_get_auxhist14_interval ( id_id , auxhist14_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist14_interval
  INTEGER id_id
  auxhist14_interval = model_config_rec%auxhist14_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist14_interval
SUBROUTINE nl_get_auxhist14_begin_y ( id_id , auxhist14_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist14_begin_y
  INTEGER id_id
  auxhist14_begin_y = model_config_rec%auxhist14_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist14_begin_y
SUBROUTINE nl_get_auxhist14_begin_d ( id_id , auxhist14_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist14_begin_d
  INTEGER id_id
  auxhist14_begin_d = model_config_rec%auxhist14_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist14_begin_d
SUBROUTINE nl_get_auxhist14_begin_h ( id_id , auxhist14_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist14_begin_h
  INTEGER id_id
  auxhist14_begin_h = model_config_rec%auxhist14_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist14_begin_h
SUBROUTINE nl_get_auxhist14_begin_m ( id_id , auxhist14_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist14_begin_m
  INTEGER id_id
  auxhist14_begin_m = model_config_rec%auxhist14_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist14_begin_m
SUBROUTINE nl_get_auxhist14_begin_s ( id_id , auxhist14_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist14_begin_s
  INTEGER id_id
  auxhist14_begin_s = model_config_rec%auxhist14_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist14_begin_s
SUBROUTINE nl_get_auxhist14_begin ( id_id , auxhist14_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist14_begin
  INTEGER id_id
  auxhist14_begin = model_config_rec%auxhist14_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist14_begin
SUBROUTINE nl_get_auxhist14_end_y ( id_id , auxhist14_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist14_end_y
  INTEGER id_id
  auxhist14_end_y = model_config_rec%auxhist14_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist14_end_y
SUBROUTINE nl_get_auxhist14_end_d ( id_id , auxhist14_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist14_end_d
  INTEGER id_id
  auxhist14_end_d = model_config_rec%auxhist14_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist14_end_d
SUBROUTINE nl_get_auxhist14_end_h ( id_id , auxhist14_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist14_end_h
  INTEGER id_id
  auxhist14_end_h = model_config_rec%auxhist14_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist14_end_h
SUBROUTINE nl_get_auxhist14_end_m ( id_id , auxhist14_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist14_end_m
  INTEGER id_id
  auxhist14_end_m = model_config_rec%auxhist14_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist14_end_m
SUBROUTINE nl_get_auxhist14_end_s ( id_id , auxhist14_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist14_end_s
  INTEGER id_id
  auxhist14_end_s = model_config_rec%auxhist14_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist14_end_s
SUBROUTINE nl_get_auxhist14_end ( id_id , auxhist14_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist14_end
  INTEGER id_id
  auxhist14_end = model_config_rec%auxhist14_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist14_end
SUBROUTINE nl_get_io_form_auxhist14 ( id_id , io_form_auxhist14 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxhist14
  INTEGER id_id
  io_form_auxhist14 = model_config_rec%io_form_auxhist14
  RETURN
END SUBROUTINE nl_get_io_form_auxhist14
SUBROUTINE nl_get_frames_per_auxhist14 ( id_id , frames_per_auxhist14 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxhist14
  INTEGER id_id
  frames_per_auxhist14 = model_config_rec%frames_per_auxhist14(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxhist14
SUBROUTINE nl_get_auxhist15_inname ( id_id , auxhist15_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist15_inname
  INTEGER id_id
  auxhist15_inname = trim(model_config_rec%auxhist15_inname)
  RETURN
END SUBROUTINE nl_get_auxhist15_inname
SUBROUTINE nl_get_auxhist15_outname ( id_id , auxhist15_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist15_outname
  INTEGER id_id
  auxhist15_outname = trim(model_config_rec%auxhist15_outname)
  RETURN
END SUBROUTINE nl_get_auxhist15_outname
SUBROUTINE nl_get_auxhist15_interval_y ( id_id , auxhist15_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist15_interval_y
  INTEGER id_id
  auxhist15_interval_y = model_config_rec%auxhist15_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist15_interval_y
SUBROUTINE nl_get_auxhist15_interval_d ( id_id , auxhist15_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist15_interval_d
  INTEGER id_id
  auxhist15_interval_d = model_config_rec%auxhist15_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist15_interval_d
SUBROUTINE nl_get_auxhist15_interval_h ( id_id , auxhist15_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist15_interval_h
  INTEGER id_id
  auxhist15_interval_h = model_config_rec%auxhist15_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist15_interval_h
SUBROUTINE nl_get_auxhist15_interval_m ( id_id , auxhist15_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist15_interval_m
  INTEGER id_id
  auxhist15_interval_m = model_config_rec%auxhist15_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist15_interval_m
SUBROUTINE nl_get_auxhist15_interval_s ( id_id , auxhist15_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist15_interval_s
  INTEGER id_id
  auxhist15_interval_s = model_config_rec%auxhist15_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist15_interval_s
SUBROUTINE nl_get_auxhist15_interval ( id_id , auxhist15_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist15_interval
  INTEGER id_id
  auxhist15_interval = model_config_rec%auxhist15_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist15_interval
SUBROUTINE nl_get_auxhist15_begin_y ( id_id , auxhist15_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist15_begin_y
  INTEGER id_id
  auxhist15_begin_y = model_config_rec%auxhist15_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist15_begin_y
SUBROUTINE nl_get_auxhist15_begin_d ( id_id , auxhist15_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist15_begin_d
  INTEGER id_id
  auxhist15_begin_d = model_config_rec%auxhist15_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist15_begin_d
SUBROUTINE nl_get_auxhist15_begin_h ( id_id , auxhist15_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist15_begin_h
  INTEGER id_id
  auxhist15_begin_h = model_config_rec%auxhist15_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist15_begin_h
SUBROUTINE nl_get_auxhist15_begin_m ( id_id , auxhist15_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist15_begin_m
  INTEGER id_id
  auxhist15_begin_m = model_config_rec%auxhist15_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist15_begin_m
SUBROUTINE nl_get_auxhist15_begin_s ( id_id , auxhist15_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist15_begin_s
  INTEGER id_id
  auxhist15_begin_s = model_config_rec%auxhist15_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist15_begin_s
SUBROUTINE nl_get_auxhist15_begin ( id_id , auxhist15_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist15_begin
  INTEGER id_id
  auxhist15_begin = model_config_rec%auxhist15_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist15_begin
SUBROUTINE nl_get_auxhist15_end_y ( id_id , auxhist15_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist15_end_y
  INTEGER id_id
  auxhist15_end_y = model_config_rec%auxhist15_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist15_end_y
SUBROUTINE nl_get_auxhist15_end_d ( id_id , auxhist15_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist15_end_d
  INTEGER id_id
  auxhist15_end_d = model_config_rec%auxhist15_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist15_end_d
SUBROUTINE nl_get_auxhist15_end_h ( id_id , auxhist15_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist15_end_h
  INTEGER id_id
  auxhist15_end_h = model_config_rec%auxhist15_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist15_end_h
SUBROUTINE nl_get_auxhist15_end_m ( id_id , auxhist15_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist15_end_m
  INTEGER id_id
  auxhist15_end_m = model_config_rec%auxhist15_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist15_end_m
SUBROUTINE nl_get_auxhist15_end_s ( id_id , auxhist15_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist15_end_s
  INTEGER id_id
  auxhist15_end_s = model_config_rec%auxhist15_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist15_end_s
SUBROUTINE nl_get_auxhist15_end ( id_id , auxhist15_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist15_end
  INTEGER id_id
  auxhist15_end = model_config_rec%auxhist15_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist15_end
SUBROUTINE nl_get_io_form_auxhist15 ( id_id , io_form_auxhist15 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxhist15
  INTEGER id_id
  io_form_auxhist15 = model_config_rec%io_form_auxhist15
  RETURN
END SUBROUTINE nl_get_io_form_auxhist15
SUBROUTINE nl_get_frames_per_auxhist15 ( id_id , frames_per_auxhist15 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxhist15
  INTEGER id_id
  frames_per_auxhist15 = model_config_rec%frames_per_auxhist15(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxhist15
SUBROUTINE nl_get_auxhist16_inname ( id_id , auxhist16_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist16_inname
  INTEGER id_id
  auxhist16_inname = trim(model_config_rec%auxhist16_inname)
  RETURN
END SUBROUTINE nl_get_auxhist16_inname
SUBROUTINE nl_get_auxhist16_outname ( id_id , auxhist16_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist16_outname
  INTEGER id_id
  auxhist16_outname = trim(model_config_rec%auxhist16_outname)
  RETURN
END SUBROUTINE nl_get_auxhist16_outname
SUBROUTINE nl_get_auxhist16_interval_y ( id_id , auxhist16_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist16_interval_y
  INTEGER id_id
  auxhist16_interval_y = model_config_rec%auxhist16_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist16_interval_y
SUBROUTINE nl_get_auxhist16_interval_d ( id_id , auxhist16_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist16_interval_d
  INTEGER id_id
  auxhist16_interval_d = model_config_rec%auxhist16_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist16_interval_d
SUBROUTINE nl_get_auxhist16_interval_h ( id_id , auxhist16_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist16_interval_h
  INTEGER id_id
  auxhist16_interval_h = model_config_rec%auxhist16_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist16_interval_h
SUBROUTINE nl_get_auxhist16_interval_m ( id_id , auxhist16_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist16_interval_m
  INTEGER id_id
  auxhist16_interval_m = model_config_rec%auxhist16_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist16_interval_m
SUBROUTINE nl_get_auxhist16_interval_s ( id_id , auxhist16_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist16_interval_s
  INTEGER id_id
  auxhist16_interval_s = model_config_rec%auxhist16_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist16_interval_s
SUBROUTINE nl_get_auxhist16_interval ( id_id , auxhist16_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist16_interval
  INTEGER id_id
  auxhist16_interval = model_config_rec%auxhist16_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist16_interval
SUBROUTINE nl_get_auxhist16_begin_y ( id_id , auxhist16_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist16_begin_y
  INTEGER id_id
  auxhist16_begin_y = model_config_rec%auxhist16_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist16_begin_y
SUBROUTINE nl_get_auxhist16_begin_d ( id_id , auxhist16_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist16_begin_d
  INTEGER id_id
  auxhist16_begin_d = model_config_rec%auxhist16_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist16_begin_d
SUBROUTINE nl_get_auxhist16_begin_h ( id_id , auxhist16_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist16_begin_h
  INTEGER id_id
  auxhist16_begin_h = model_config_rec%auxhist16_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist16_begin_h
SUBROUTINE nl_get_auxhist16_begin_m ( id_id , auxhist16_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist16_begin_m
  INTEGER id_id
  auxhist16_begin_m = model_config_rec%auxhist16_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist16_begin_m
SUBROUTINE nl_get_auxhist16_begin_s ( id_id , auxhist16_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist16_begin_s
  INTEGER id_id
  auxhist16_begin_s = model_config_rec%auxhist16_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist16_begin_s
SUBROUTINE nl_get_auxhist16_begin ( id_id , auxhist16_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist16_begin
  INTEGER id_id
  auxhist16_begin = model_config_rec%auxhist16_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist16_begin
SUBROUTINE nl_get_auxhist16_end_y ( id_id , auxhist16_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist16_end_y
  INTEGER id_id
  auxhist16_end_y = model_config_rec%auxhist16_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist16_end_y
SUBROUTINE nl_get_auxhist16_end_d ( id_id , auxhist16_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist16_end_d
  INTEGER id_id
  auxhist16_end_d = model_config_rec%auxhist16_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist16_end_d
SUBROUTINE nl_get_auxhist16_end_h ( id_id , auxhist16_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist16_end_h
  INTEGER id_id
  auxhist16_end_h = model_config_rec%auxhist16_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist16_end_h
SUBROUTINE nl_get_auxhist16_end_m ( id_id , auxhist16_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist16_end_m
  INTEGER id_id
  auxhist16_end_m = model_config_rec%auxhist16_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist16_end_m
SUBROUTINE nl_get_auxhist16_end_s ( id_id , auxhist16_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist16_end_s
  INTEGER id_id
  auxhist16_end_s = model_config_rec%auxhist16_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist16_end_s
SUBROUTINE nl_get_auxhist16_end ( id_id , auxhist16_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist16_end
  INTEGER id_id
  auxhist16_end = model_config_rec%auxhist16_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist16_end
SUBROUTINE nl_get_io_form_auxhist16 ( id_id , io_form_auxhist16 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxhist16
  INTEGER id_id
  io_form_auxhist16 = model_config_rec%io_form_auxhist16
  RETURN
END SUBROUTINE nl_get_io_form_auxhist16
SUBROUTINE nl_get_frames_per_auxhist16 ( id_id , frames_per_auxhist16 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxhist16
  INTEGER id_id
  frames_per_auxhist16 = model_config_rec%frames_per_auxhist16(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxhist16
SUBROUTINE nl_get_auxhist17_inname ( id_id , auxhist17_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist17_inname
  INTEGER id_id
  auxhist17_inname = trim(model_config_rec%auxhist17_inname)
  RETURN
END SUBROUTINE nl_get_auxhist17_inname
SUBROUTINE nl_get_auxhist17_outname ( id_id , auxhist17_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist17_outname
  INTEGER id_id
  auxhist17_outname = trim(model_config_rec%auxhist17_outname)
  RETURN
END SUBROUTINE nl_get_auxhist17_outname
SUBROUTINE nl_get_auxhist17_interval_y ( id_id , auxhist17_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist17_interval_y
  INTEGER id_id
  auxhist17_interval_y = model_config_rec%auxhist17_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist17_interval_y
SUBROUTINE nl_get_auxhist17_interval_d ( id_id , auxhist17_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist17_interval_d
  INTEGER id_id
  auxhist17_interval_d = model_config_rec%auxhist17_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist17_interval_d
SUBROUTINE nl_get_auxhist17_interval_h ( id_id , auxhist17_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist17_interval_h
  INTEGER id_id
  auxhist17_interval_h = model_config_rec%auxhist17_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist17_interval_h
SUBROUTINE nl_get_auxhist17_interval_m ( id_id , auxhist17_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist17_interval_m
  INTEGER id_id
  auxhist17_interval_m = model_config_rec%auxhist17_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist17_interval_m
SUBROUTINE nl_get_auxhist17_interval_s ( id_id , auxhist17_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist17_interval_s
  INTEGER id_id
  auxhist17_interval_s = model_config_rec%auxhist17_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist17_interval_s
SUBROUTINE nl_get_auxhist17_interval ( id_id , auxhist17_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist17_interval
  INTEGER id_id
  auxhist17_interval = model_config_rec%auxhist17_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist17_interval
SUBROUTINE nl_get_auxhist17_begin_y ( id_id , auxhist17_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist17_begin_y
  INTEGER id_id
  auxhist17_begin_y = model_config_rec%auxhist17_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist17_begin_y
SUBROUTINE nl_get_auxhist17_begin_d ( id_id , auxhist17_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist17_begin_d
  INTEGER id_id
  auxhist17_begin_d = model_config_rec%auxhist17_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist17_begin_d
SUBROUTINE nl_get_auxhist17_begin_h ( id_id , auxhist17_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist17_begin_h
  INTEGER id_id
  auxhist17_begin_h = model_config_rec%auxhist17_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist17_begin_h
SUBROUTINE nl_get_auxhist17_begin_m ( id_id , auxhist17_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist17_begin_m
  INTEGER id_id
  auxhist17_begin_m = model_config_rec%auxhist17_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist17_begin_m
SUBROUTINE nl_get_auxhist17_begin_s ( id_id , auxhist17_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist17_begin_s
  INTEGER id_id
  auxhist17_begin_s = model_config_rec%auxhist17_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist17_begin_s
SUBROUTINE nl_get_auxhist17_begin ( id_id , auxhist17_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist17_begin
  INTEGER id_id
  auxhist17_begin = model_config_rec%auxhist17_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist17_begin
SUBROUTINE nl_get_auxhist17_end_y ( id_id , auxhist17_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist17_end_y
  INTEGER id_id
  auxhist17_end_y = model_config_rec%auxhist17_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist17_end_y
SUBROUTINE nl_get_auxhist17_end_d ( id_id , auxhist17_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist17_end_d
  INTEGER id_id
  auxhist17_end_d = model_config_rec%auxhist17_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist17_end_d
SUBROUTINE nl_get_auxhist17_end_h ( id_id , auxhist17_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist17_end_h
  INTEGER id_id
  auxhist17_end_h = model_config_rec%auxhist17_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist17_end_h
SUBROUTINE nl_get_auxhist17_end_m ( id_id , auxhist17_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist17_end_m
  INTEGER id_id
  auxhist17_end_m = model_config_rec%auxhist17_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist17_end_m
SUBROUTINE nl_get_auxhist17_end_s ( id_id , auxhist17_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist17_end_s
  INTEGER id_id
  auxhist17_end_s = model_config_rec%auxhist17_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist17_end_s
#endif
#if (NNN == 4)
SUBROUTINE nl_get_auxhist17_end ( id_id , auxhist17_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist17_end
  INTEGER id_id
  auxhist17_end = model_config_rec%auxhist17_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist17_end
SUBROUTINE nl_get_io_form_auxhist17 ( id_id , io_form_auxhist17 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxhist17
  INTEGER id_id
  io_form_auxhist17 = model_config_rec%io_form_auxhist17
  RETURN
END SUBROUTINE nl_get_io_form_auxhist17
SUBROUTINE nl_get_frames_per_auxhist17 ( id_id , frames_per_auxhist17 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxhist17
  INTEGER id_id
  frames_per_auxhist17 = model_config_rec%frames_per_auxhist17(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxhist17
SUBROUTINE nl_get_auxhist18_inname ( id_id , auxhist18_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist18_inname
  INTEGER id_id
  auxhist18_inname = trim(model_config_rec%auxhist18_inname)
  RETURN
END SUBROUTINE nl_get_auxhist18_inname
SUBROUTINE nl_get_auxhist18_outname ( id_id , auxhist18_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist18_outname
  INTEGER id_id
  auxhist18_outname = trim(model_config_rec%auxhist18_outname)
  RETURN
END SUBROUTINE nl_get_auxhist18_outname
SUBROUTINE nl_get_auxhist18_interval_y ( id_id , auxhist18_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist18_interval_y
  INTEGER id_id
  auxhist18_interval_y = model_config_rec%auxhist18_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist18_interval_y
SUBROUTINE nl_get_auxhist18_interval_d ( id_id , auxhist18_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist18_interval_d
  INTEGER id_id
  auxhist18_interval_d = model_config_rec%auxhist18_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist18_interval_d
SUBROUTINE nl_get_auxhist18_interval_h ( id_id , auxhist18_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist18_interval_h
  INTEGER id_id
  auxhist18_interval_h = model_config_rec%auxhist18_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist18_interval_h
SUBROUTINE nl_get_auxhist18_interval_m ( id_id , auxhist18_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist18_interval_m
  INTEGER id_id
  auxhist18_interval_m = model_config_rec%auxhist18_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist18_interval_m
SUBROUTINE nl_get_auxhist18_interval_s ( id_id , auxhist18_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist18_interval_s
  INTEGER id_id
  auxhist18_interval_s = model_config_rec%auxhist18_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist18_interval_s
SUBROUTINE nl_get_auxhist18_interval ( id_id , auxhist18_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist18_interval
  INTEGER id_id
  auxhist18_interval = model_config_rec%auxhist18_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist18_interval
SUBROUTINE nl_get_auxhist18_begin_y ( id_id , auxhist18_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist18_begin_y
  INTEGER id_id
  auxhist18_begin_y = model_config_rec%auxhist18_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist18_begin_y
SUBROUTINE nl_get_auxhist18_begin_d ( id_id , auxhist18_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist18_begin_d
  INTEGER id_id
  auxhist18_begin_d = model_config_rec%auxhist18_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist18_begin_d
SUBROUTINE nl_get_auxhist18_begin_h ( id_id , auxhist18_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist18_begin_h
  INTEGER id_id
  auxhist18_begin_h = model_config_rec%auxhist18_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist18_begin_h
SUBROUTINE nl_get_auxhist18_begin_m ( id_id , auxhist18_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist18_begin_m
  INTEGER id_id
  auxhist18_begin_m = model_config_rec%auxhist18_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist18_begin_m
SUBROUTINE nl_get_auxhist18_begin_s ( id_id , auxhist18_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist18_begin_s
  INTEGER id_id
  auxhist18_begin_s = model_config_rec%auxhist18_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist18_begin_s
SUBROUTINE nl_get_auxhist18_begin ( id_id , auxhist18_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist18_begin
  INTEGER id_id
  auxhist18_begin = model_config_rec%auxhist18_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist18_begin
SUBROUTINE nl_get_auxhist18_end_y ( id_id , auxhist18_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist18_end_y
  INTEGER id_id
  auxhist18_end_y = model_config_rec%auxhist18_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist18_end_y
SUBROUTINE nl_get_auxhist18_end_d ( id_id , auxhist18_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist18_end_d
  INTEGER id_id
  auxhist18_end_d = model_config_rec%auxhist18_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist18_end_d
SUBROUTINE nl_get_auxhist18_end_h ( id_id , auxhist18_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist18_end_h
  INTEGER id_id
  auxhist18_end_h = model_config_rec%auxhist18_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist18_end_h
SUBROUTINE nl_get_auxhist18_end_m ( id_id , auxhist18_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist18_end_m
  INTEGER id_id
  auxhist18_end_m = model_config_rec%auxhist18_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist18_end_m
SUBROUTINE nl_get_auxhist18_end_s ( id_id , auxhist18_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist18_end_s
  INTEGER id_id
  auxhist18_end_s = model_config_rec%auxhist18_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist18_end_s
SUBROUTINE nl_get_auxhist18_end ( id_id , auxhist18_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist18_end
  INTEGER id_id
  auxhist18_end = model_config_rec%auxhist18_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist18_end
SUBROUTINE nl_get_io_form_auxhist18 ( id_id , io_form_auxhist18 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxhist18
  INTEGER id_id
  io_form_auxhist18 = model_config_rec%io_form_auxhist18
  RETURN
END SUBROUTINE nl_get_io_form_auxhist18
SUBROUTINE nl_get_frames_per_auxhist18 ( id_id , frames_per_auxhist18 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxhist18
  INTEGER id_id
  frames_per_auxhist18 = model_config_rec%frames_per_auxhist18(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxhist18
SUBROUTINE nl_get_auxhist19_inname ( id_id , auxhist19_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist19_inname
  INTEGER id_id
  auxhist19_inname = trim(model_config_rec%auxhist19_inname)
  RETURN
END SUBROUTINE nl_get_auxhist19_inname
SUBROUTINE nl_get_auxhist19_outname ( id_id , auxhist19_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist19_outname
  INTEGER id_id
  auxhist19_outname = trim(model_config_rec%auxhist19_outname)
  RETURN
END SUBROUTINE nl_get_auxhist19_outname
SUBROUTINE nl_get_auxhist19_interval_y ( id_id , auxhist19_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist19_interval_y
  INTEGER id_id
  auxhist19_interval_y = model_config_rec%auxhist19_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist19_interval_y
SUBROUTINE nl_get_auxhist19_interval_d ( id_id , auxhist19_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist19_interval_d
  INTEGER id_id
  auxhist19_interval_d = model_config_rec%auxhist19_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist19_interval_d
SUBROUTINE nl_get_auxhist19_interval_h ( id_id , auxhist19_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist19_interval_h
  INTEGER id_id
  auxhist19_interval_h = model_config_rec%auxhist19_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist19_interval_h
SUBROUTINE nl_get_auxhist19_interval_m ( id_id , auxhist19_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist19_interval_m
  INTEGER id_id
  auxhist19_interval_m = model_config_rec%auxhist19_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist19_interval_m
SUBROUTINE nl_get_auxhist19_interval_s ( id_id , auxhist19_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist19_interval_s
  INTEGER id_id
  auxhist19_interval_s = model_config_rec%auxhist19_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist19_interval_s
SUBROUTINE nl_get_auxhist19_interval ( id_id , auxhist19_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist19_interval
  INTEGER id_id
  auxhist19_interval = model_config_rec%auxhist19_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist19_interval
SUBROUTINE nl_get_auxhist19_begin_y ( id_id , auxhist19_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist19_begin_y
  INTEGER id_id
  auxhist19_begin_y = model_config_rec%auxhist19_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist19_begin_y
SUBROUTINE nl_get_auxhist19_begin_d ( id_id , auxhist19_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist19_begin_d
  INTEGER id_id
  auxhist19_begin_d = model_config_rec%auxhist19_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist19_begin_d
SUBROUTINE nl_get_auxhist19_begin_h ( id_id , auxhist19_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist19_begin_h
  INTEGER id_id
  auxhist19_begin_h = model_config_rec%auxhist19_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist19_begin_h
SUBROUTINE nl_get_auxhist19_begin_m ( id_id , auxhist19_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist19_begin_m
  INTEGER id_id
  auxhist19_begin_m = model_config_rec%auxhist19_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist19_begin_m
SUBROUTINE nl_get_auxhist19_begin_s ( id_id , auxhist19_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist19_begin_s
  INTEGER id_id
  auxhist19_begin_s = model_config_rec%auxhist19_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist19_begin_s
SUBROUTINE nl_get_auxhist19_begin ( id_id , auxhist19_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist19_begin
  INTEGER id_id
  auxhist19_begin = model_config_rec%auxhist19_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist19_begin
SUBROUTINE nl_get_auxhist19_end_y ( id_id , auxhist19_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist19_end_y
  INTEGER id_id
  auxhist19_end_y = model_config_rec%auxhist19_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist19_end_y
SUBROUTINE nl_get_auxhist19_end_d ( id_id , auxhist19_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist19_end_d
  INTEGER id_id
  auxhist19_end_d = model_config_rec%auxhist19_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist19_end_d
SUBROUTINE nl_get_auxhist19_end_h ( id_id , auxhist19_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist19_end_h
  INTEGER id_id
  auxhist19_end_h = model_config_rec%auxhist19_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist19_end_h
SUBROUTINE nl_get_auxhist19_end_m ( id_id , auxhist19_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist19_end_m
  INTEGER id_id
  auxhist19_end_m = model_config_rec%auxhist19_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist19_end_m
SUBROUTINE nl_get_auxhist19_end_s ( id_id , auxhist19_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist19_end_s
  INTEGER id_id
  auxhist19_end_s = model_config_rec%auxhist19_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist19_end_s
SUBROUTINE nl_get_auxhist19_end ( id_id , auxhist19_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist19_end
  INTEGER id_id
  auxhist19_end = model_config_rec%auxhist19_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist19_end
SUBROUTINE nl_get_io_form_auxhist19 ( id_id , io_form_auxhist19 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxhist19
  INTEGER id_id
  io_form_auxhist19 = model_config_rec%io_form_auxhist19
  RETURN
END SUBROUTINE nl_get_io_form_auxhist19
SUBROUTINE nl_get_frames_per_auxhist19 ( id_id , frames_per_auxhist19 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxhist19
  INTEGER id_id
  frames_per_auxhist19 = model_config_rec%frames_per_auxhist19(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxhist19
SUBROUTINE nl_get_auxhist20_inname ( id_id , auxhist20_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist20_inname
  INTEGER id_id
  auxhist20_inname = trim(model_config_rec%auxhist20_inname)
  RETURN
END SUBROUTINE nl_get_auxhist20_inname
SUBROUTINE nl_get_auxhist20_outname ( id_id , auxhist20_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist20_outname
  INTEGER id_id
  auxhist20_outname = trim(model_config_rec%auxhist20_outname)
  RETURN
END SUBROUTINE nl_get_auxhist20_outname
SUBROUTINE nl_get_auxhist20_interval_y ( id_id , auxhist20_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist20_interval_y
  INTEGER id_id
  auxhist20_interval_y = model_config_rec%auxhist20_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist20_interval_y
SUBROUTINE nl_get_auxhist20_interval_d ( id_id , auxhist20_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist20_interval_d
  INTEGER id_id
  auxhist20_interval_d = model_config_rec%auxhist20_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist20_interval_d
SUBROUTINE nl_get_auxhist20_interval_h ( id_id , auxhist20_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist20_interval_h
  INTEGER id_id
  auxhist20_interval_h = model_config_rec%auxhist20_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist20_interval_h
SUBROUTINE nl_get_auxhist20_interval_m ( id_id , auxhist20_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist20_interval_m
  INTEGER id_id
  auxhist20_interval_m = model_config_rec%auxhist20_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist20_interval_m
SUBROUTINE nl_get_auxhist20_interval_s ( id_id , auxhist20_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist20_interval_s
  INTEGER id_id
  auxhist20_interval_s = model_config_rec%auxhist20_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist20_interval_s
SUBROUTINE nl_get_auxhist20_interval ( id_id , auxhist20_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist20_interval
  INTEGER id_id
  auxhist20_interval = model_config_rec%auxhist20_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist20_interval
SUBROUTINE nl_get_auxhist20_begin_y ( id_id , auxhist20_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist20_begin_y
  INTEGER id_id
  auxhist20_begin_y = model_config_rec%auxhist20_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist20_begin_y
SUBROUTINE nl_get_auxhist20_begin_d ( id_id , auxhist20_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist20_begin_d
  INTEGER id_id
  auxhist20_begin_d = model_config_rec%auxhist20_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist20_begin_d
SUBROUTINE nl_get_auxhist20_begin_h ( id_id , auxhist20_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist20_begin_h
  INTEGER id_id
  auxhist20_begin_h = model_config_rec%auxhist20_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist20_begin_h
SUBROUTINE nl_get_auxhist20_begin_m ( id_id , auxhist20_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist20_begin_m
  INTEGER id_id
  auxhist20_begin_m = model_config_rec%auxhist20_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist20_begin_m
SUBROUTINE nl_get_auxhist20_begin_s ( id_id , auxhist20_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist20_begin_s
  INTEGER id_id
  auxhist20_begin_s = model_config_rec%auxhist20_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist20_begin_s
SUBROUTINE nl_get_auxhist20_begin ( id_id , auxhist20_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist20_begin
  INTEGER id_id
  auxhist20_begin = model_config_rec%auxhist20_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist20_begin
SUBROUTINE nl_get_auxhist20_end_y ( id_id , auxhist20_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist20_end_y
  INTEGER id_id
  auxhist20_end_y = model_config_rec%auxhist20_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist20_end_y
SUBROUTINE nl_get_auxhist20_end_d ( id_id , auxhist20_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist20_end_d
  INTEGER id_id
  auxhist20_end_d = model_config_rec%auxhist20_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist20_end_d
SUBROUTINE nl_get_auxhist20_end_h ( id_id , auxhist20_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist20_end_h
  INTEGER id_id
  auxhist20_end_h = model_config_rec%auxhist20_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist20_end_h
SUBROUTINE nl_get_auxhist20_end_m ( id_id , auxhist20_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist20_end_m
  INTEGER id_id
  auxhist20_end_m = model_config_rec%auxhist20_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist20_end_m
SUBROUTINE nl_get_auxhist20_end_s ( id_id , auxhist20_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist20_end_s
  INTEGER id_id
  auxhist20_end_s = model_config_rec%auxhist20_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist20_end_s
SUBROUTINE nl_get_auxhist20_end ( id_id , auxhist20_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist20_end
  INTEGER id_id
  auxhist20_end = model_config_rec%auxhist20_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist20_end
SUBROUTINE nl_get_io_form_auxhist20 ( id_id , io_form_auxhist20 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxhist20
  INTEGER id_id
  io_form_auxhist20 = model_config_rec%io_form_auxhist20
  RETURN
END SUBROUTINE nl_get_io_form_auxhist20
SUBROUTINE nl_get_frames_per_auxhist20 ( id_id , frames_per_auxhist20 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxhist20
  INTEGER id_id
  frames_per_auxhist20 = model_config_rec%frames_per_auxhist20(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxhist20
SUBROUTINE nl_get_auxhist21_inname ( id_id , auxhist21_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist21_inname
  INTEGER id_id
  auxhist21_inname = trim(model_config_rec%auxhist21_inname)
  RETURN
END SUBROUTINE nl_get_auxhist21_inname
SUBROUTINE nl_get_auxhist21_outname ( id_id , auxhist21_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist21_outname
  INTEGER id_id
  auxhist21_outname = trim(model_config_rec%auxhist21_outname)
  RETURN
END SUBROUTINE nl_get_auxhist21_outname
SUBROUTINE nl_get_auxhist21_interval_y ( id_id , auxhist21_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist21_interval_y
  INTEGER id_id
  auxhist21_interval_y = model_config_rec%auxhist21_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist21_interval_y
SUBROUTINE nl_get_auxhist21_interval_d ( id_id , auxhist21_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist21_interval_d
  INTEGER id_id
  auxhist21_interval_d = model_config_rec%auxhist21_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist21_interval_d
SUBROUTINE nl_get_auxhist21_interval_h ( id_id , auxhist21_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist21_interval_h
  INTEGER id_id
  auxhist21_interval_h = model_config_rec%auxhist21_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist21_interval_h
SUBROUTINE nl_get_auxhist21_interval_m ( id_id , auxhist21_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist21_interval_m
  INTEGER id_id
  auxhist21_interval_m = model_config_rec%auxhist21_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist21_interval_m
SUBROUTINE nl_get_auxhist21_interval_s ( id_id , auxhist21_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist21_interval_s
  INTEGER id_id
  auxhist21_interval_s = model_config_rec%auxhist21_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist21_interval_s
SUBROUTINE nl_get_auxhist21_interval ( id_id , auxhist21_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist21_interval
  INTEGER id_id
  auxhist21_interval = model_config_rec%auxhist21_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist21_interval
SUBROUTINE nl_get_auxhist21_begin_y ( id_id , auxhist21_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist21_begin_y
  INTEGER id_id
  auxhist21_begin_y = model_config_rec%auxhist21_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist21_begin_y
SUBROUTINE nl_get_auxhist21_begin_d ( id_id , auxhist21_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist21_begin_d
  INTEGER id_id
  auxhist21_begin_d = model_config_rec%auxhist21_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist21_begin_d
SUBROUTINE nl_get_auxhist21_begin_h ( id_id , auxhist21_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist21_begin_h
  INTEGER id_id
  auxhist21_begin_h = model_config_rec%auxhist21_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist21_begin_h
SUBROUTINE nl_get_auxhist21_begin_m ( id_id , auxhist21_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist21_begin_m
  INTEGER id_id
  auxhist21_begin_m = model_config_rec%auxhist21_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist21_begin_m
SUBROUTINE nl_get_auxhist21_begin_s ( id_id , auxhist21_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist21_begin_s
  INTEGER id_id
  auxhist21_begin_s = model_config_rec%auxhist21_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist21_begin_s
SUBROUTINE nl_get_auxhist21_begin ( id_id , auxhist21_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist21_begin
  INTEGER id_id
  auxhist21_begin = model_config_rec%auxhist21_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist21_begin
SUBROUTINE nl_get_auxhist21_end_y ( id_id , auxhist21_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist21_end_y
  INTEGER id_id
  auxhist21_end_y = model_config_rec%auxhist21_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist21_end_y
SUBROUTINE nl_get_auxhist21_end_d ( id_id , auxhist21_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist21_end_d
  INTEGER id_id
  auxhist21_end_d = model_config_rec%auxhist21_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist21_end_d
SUBROUTINE nl_get_auxhist21_end_h ( id_id , auxhist21_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist21_end_h
  INTEGER id_id
  auxhist21_end_h = model_config_rec%auxhist21_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist21_end_h
SUBROUTINE nl_get_auxhist21_end_m ( id_id , auxhist21_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist21_end_m
  INTEGER id_id
  auxhist21_end_m = model_config_rec%auxhist21_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist21_end_m
SUBROUTINE nl_get_auxhist21_end_s ( id_id , auxhist21_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist21_end_s
  INTEGER id_id
  auxhist21_end_s = model_config_rec%auxhist21_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist21_end_s
SUBROUTINE nl_get_auxhist21_end ( id_id , auxhist21_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist21_end
  INTEGER id_id
  auxhist21_end = model_config_rec%auxhist21_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist21_end
SUBROUTINE nl_get_io_form_auxhist21 ( id_id , io_form_auxhist21 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxhist21
  INTEGER id_id
  io_form_auxhist21 = model_config_rec%io_form_auxhist21
  RETURN
END SUBROUTINE nl_get_io_form_auxhist21
SUBROUTINE nl_get_frames_per_auxhist21 ( id_id , frames_per_auxhist21 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxhist21
  INTEGER id_id
  frames_per_auxhist21 = model_config_rec%frames_per_auxhist21(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxhist21
SUBROUTINE nl_get_auxhist22_inname ( id_id , auxhist22_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist22_inname
  INTEGER id_id
  auxhist22_inname = trim(model_config_rec%auxhist22_inname)
  RETURN
END SUBROUTINE nl_get_auxhist22_inname
SUBROUTINE nl_get_auxhist22_outname ( id_id , auxhist22_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist22_outname
  INTEGER id_id
  auxhist22_outname = trim(model_config_rec%auxhist22_outname)
  RETURN
END SUBROUTINE nl_get_auxhist22_outname
SUBROUTINE nl_get_auxhist22_interval_y ( id_id , auxhist22_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist22_interval_y
  INTEGER id_id
  auxhist22_interval_y = model_config_rec%auxhist22_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist22_interval_y
SUBROUTINE nl_get_auxhist22_interval_d ( id_id , auxhist22_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist22_interval_d
  INTEGER id_id
  auxhist22_interval_d = model_config_rec%auxhist22_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist22_interval_d
SUBROUTINE nl_get_auxhist22_interval_h ( id_id , auxhist22_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist22_interval_h
  INTEGER id_id
  auxhist22_interval_h = model_config_rec%auxhist22_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist22_interval_h
SUBROUTINE nl_get_auxhist22_interval_m ( id_id , auxhist22_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist22_interval_m
  INTEGER id_id
  auxhist22_interval_m = model_config_rec%auxhist22_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist22_interval_m
SUBROUTINE nl_get_auxhist22_interval_s ( id_id , auxhist22_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist22_interval_s
  INTEGER id_id
  auxhist22_interval_s = model_config_rec%auxhist22_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist22_interval_s
SUBROUTINE nl_get_auxhist22_interval ( id_id , auxhist22_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist22_interval
  INTEGER id_id
  auxhist22_interval = model_config_rec%auxhist22_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist22_interval
SUBROUTINE nl_get_auxhist22_begin_y ( id_id , auxhist22_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist22_begin_y
  INTEGER id_id
  auxhist22_begin_y = model_config_rec%auxhist22_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist22_begin_y
SUBROUTINE nl_get_auxhist22_begin_d ( id_id , auxhist22_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist22_begin_d
  INTEGER id_id
  auxhist22_begin_d = model_config_rec%auxhist22_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist22_begin_d
SUBROUTINE nl_get_auxhist22_begin_h ( id_id , auxhist22_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist22_begin_h
  INTEGER id_id
  auxhist22_begin_h = model_config_rec%auxhist22_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist22_begin_h
SUBROUTINE nl_get_auxhist22_begin_m ( id_id , auxhist22_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist22_begin_m
  INTEGER id_id
  auxhist22_begin_m = model_config_rec%auxhist22_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist22_begin_m
SUBROUTINE nl_get_auxhist22_begin_s ( id_id , auxhist22_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist22_begin_s
  INTEGER id_id
  auxhist22_begin_s = model_config_rec%auxhist22_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist22_begin_s
SUBROUTINE nl_get_auxhist22_begin ( id_id , auxhist22_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist22_begin
  INTEGER id_id
  auxhist22_begin = model_config_rec%auxhist22_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist22_begin
SUBROUTINE nl_get_auxhist22_end_y ( id_id , auxhist22_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist22_end_y
  INTEGER id_id
  auxhist22_end_y = model_config_rec%auxhist22_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist22_end_y
SUBROUTINE nl_get_auxhist22_end_d ( id_id , auxhist22_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist22_end_d
  INTEGER id_id
  auxhist22_end_d = model_config_rec%auxhist22_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist22_end_d
SUBROUTINE nl_get_auxhist22_end_h ( id_id , auxhist22_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist22_end_h
  INTEGER id_id
  auxhist22_end_h = model_config_rec%auxhist22_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist22_end_h
SUBROUTINE nl_get_auxhist22_end_m ( id_id , auxhist22_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist22_end_m
  INTEGER id_id
  auxhist22_end_m = model_config_rec%auxhist22_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist22_end_m
SUBROUTINE nl_get_auxhist22_end_s ( id_id , auxhist22_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist22_end_s
  INTEGER id_id
  auxhist22_end_s = model_config_rec%auxhist22_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist22_end_s
SUBROUTINE nl_get_auxhist22_end ( id_id , auxhist22_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist22_end
  INTEGER id_id
  auxhist22_end = model_config_rec%auxhist22_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist22_end
SUBROUTINE nl_get_io_form_auxhist22 ( id_id , io_form_auxhist22 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxhist22
  INTEGER id_id
  io_form_auxhist22 = model_config_rec%io_form_auxhist22
  RETURN
END SUBROUTINE nl_get_io_form_auxhist22
SUBROUTINE nl_get_frames_per_auxhist22 ( id_id , frames_per_auxhist22 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxhist22
  INTEGER id_id
  frames_per_auxhist22 = model_config_rec%frames_per_auxhist22(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxhist22
SUBROUTINE nl_get_auxhist23_inname ( id_id , auxhist23_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist23_inname
  INTEGER id_id
  auxhist23_inname = trim(model_config_rec%auxhist23_inname)
  RETURN
END SUBROUTINE nl_get_auxhist23_inname
SUBROUTINE nl_get_auxhist23_outname ( id_id , auxhist23_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist23_outname
  INTEGER id_id
  auxhist23_outname = trim(model_config_rec%auxhist23_outname)
  RETURN
END SUBROUTINE nl_get_auxhist23_outname
SUBROUTINE nl_get_auxhist23_interval_y ( id_id , auxhist23_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist23_interval_y
  INTEGER id_id
  auxhist23_interval_y = model_config_rec%auxhist23_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist23_interval_y
SUBROUTINE nl_get_auxhist23_interval_d ( id_id , auxhist23_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist23_interval_d
  INTEGER id_id
  auxhist23_interval_d = model_config_rec%auxhist23_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist23_interval_d
SUBROUTINE nl_get_auxhist23_interval_h ( id_id , auxhist23_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist23_interval_h
  INTEGER id_id
  auxhist23_interval_h = model_config_rec%auxhist23_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist23_interval_h
SUBROUTINE nl_get_auxhist23_interval_m ( id_id , auxhist23_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist23_interval_m
  INTEGER id_id
  auxhist23_interval_m = model_config_rec%auxhist23_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist23_interval_m
SUBROUTINE nl_get_auxhist23_interval_s ( id_id , auxhist23_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist23_interval_s
  INTEGER id_id
  auxhist23_interval_s = model_config_rec%auxhist23_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist23_interval_s
SUBROUTINE nl_get_auxhist23_interval ( id_id , auxhist23_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist23_interval
  INTEGER id_id
  auxhist23_interval = model_config_rec%auxhist23_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist23_interval
SUBROUTINE nl_get_auxhist23_begin_y ( id_id , auxhist23_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist23_begin_y
  INTEGER id_id
  auxhist23_begin_y = model_config_rec%auxhist23_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist23_begin_y
SUBROUTINE nl_get_auxhist23_begin_d ( id_id , auxhist23_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist23_begin_d
  INTEGER id_id
  auxhist23_begin_d = model_config_rec%auxhist23_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist23_begin_d
SUBROUTINE nl_get_auxhist23_begin_h ( id_id , auxhist23_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist23_begin_h
  INTEGER id_id
  auxhist23_begin_h = model_config_rec%auxhist23_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist23_begin_h
SUBROUTINE nl_get_auxhist23_begin_m ( id_id , auxhist23_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist23_begin_m
  INTEGER id_id
  auxhist23_begin_m = model_config_rec%auxhist23_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist23_begin_m
SUBROUTINE nl_get_auxhist23_begin_s ( id_id , auxhist23_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist23_begin_s
  INTEGER id_id
  auxhist23_begin_s = model_config_rec%auxhist23_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist23_begin_s
SUBROUTINE nl_get_auxhist23_begin ( id_id , auxhist23_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist23_begin
  INTEGER id_id
  auxhist23_begin = model_config_rec%auxhist23_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist23_begin
SUBROUTINE nl_get_auxhist23_end_y ( id_id , auxhist23_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist23_end_y
  INTEGER id_id
  auxhist23_end_y = model_config_rec%auxhist23_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist23_end_y
SUBROUTINE nl_get_auxhist23_end_d ( id_id , auxhist23_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist23_end_d
  INTEGER id_id
  auxhist23_end_d = model_config_rec%auxhist23_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist23_end_d
SUBROUTINE nl_get_auxhist23_end_h ( id_id , auxhist23_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist23_end_h
  INTEGER id_id
  auxhist23_end_h = model_config_rec%auxhist23_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist23_end_h
SUBROUTINE nl_get_auxhist23_end_m ( id_id , auxhist23_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist23_end_m
  INTEGER id_id
  auxhist23_end_m = model_config_rec%auxhist23_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist23_end_m
SUBROUTINE nl_get_auxhist23_end_s ( id_id , auxhist23_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist23_end_s
  INTEGER id_id
  auxhist23_end_s = model_config_rec%auxhist23_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist23_end_s
SUBROUTINE nl_get_auxhist23_end ( id_id , auxhist23_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist23_end
  INTEGER id_id
  auxhist23_end = model_config_rec%auxhist23_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist23_end
SUBROUTINE nl_get_io_form_auxhist23 ( id_id , io_form_auxhist23 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxhist23
  INTEGER id_id
  io_form_auxhist23 = model_config_rec%io_form_auxhist23
  RETURN
END SUBROUTINE nl_get_io_form_auxhist23
SUBROUTINE nl_get_frames_per_auxhist23 ( id_id , frames_per_auxhist23 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxhist23
  INTEGER id_id
  frames_per_auxhist23 = model_config_rec%frames_per_auxhist23(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxhist23
SUBROUTINE nl_get_auxhist24_inname ( id_id , auxhist24_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist24_inname
  INTEGER id_id
  auxhist24_inname = trim(model_config_rec%auxhist24_inname)
  RETURN
END SUBROUTINE nl_get_auxhist24_inname
SUBROUTINE nl_get_auxhist24_outname ( id_id , auxhist24_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxhist24_outname
  INTEGER id_id
  auxhist24_outname = trim(model_config_rec%auxhist24_outname)
  RETURN
END SUBROUTINE nl_get_auxhist24_outname
SUBROUTINE nl_get_auxhist24_interval_y ( id_id , auxhist24_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist24_interval_y
  INTEGER id_id
  auxhist24_interval_y = model_config_rec%auxhist24_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist24_interval_y
SUBROUTINE nl_get_auxhist24_interval_d ( id_id , auxhist24_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist24_interval_d
  INTEGER id_id
  auxhist24_interval_d = model_config_rec%auxhist24_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist24_interval_d
SUBROUTINE nl_get_auxhist24_interval_h ( id_id , auxhist24_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist24_interval_h
  INTEGER id_id
  auxhist24_interval_h = model_config_rec%auxhist24_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist24_interval_h
SUBROUTINE nl_get_auxhist24_interval_m ( id_id , auxhist24_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist24_interval_m
  INTEGER id_id
  auxhist24_interval_m = model_config_rec%auxhist24_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist24_interval_m
SUBROUTINE nl_get_auxhist24_interval_s ( id_id , auxhist24_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist24_interval_s
  INTEGER id_id
  auxhist24_interval_s = model_config_rec%auxhist24_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist24_interval_s
SUBROUTINE nl_get_auxhist24_interval ( id_id , auxhist24_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist24_interval
  INTEGER id_id
  auxhist24_interval = model_config_rec%auxhist24_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist24_interval
SUBROUTINE nl_get_auxhist24_begin_y ( id_id , auxhist24_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist24_begin_y
  INTEGER id_id
  auxhist24_begin_y = model_config_rec%auxhist24_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist24_begin_y
SUBROUTINE nl_get_auxhist24_begin_d ( id_id , auxhist24_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist24_begin_d
  INTEGER id_id
  auxhist24_begin_d = model_config_rec%auxhist24_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist24_begin_d
SUBROUTINE nl_get_auxhist24_begin_h ( id_id , auxhist24_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist24_begin_h
  INTEGER id_id
  auxhist24_begin_h = model_config_rec%auxhist24_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist24_begin_h
SUBROUTINE nl_get_auxhist24_begin_m ( id_id , auxhist24_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist24_begin_m
  INTEGER id_id
  auxhist24_begin_m = model_config_rec%auxhist24_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist24_begin_m
SUBROUTINE nl_get_auxhist24_begin_s ( id_id , auxhist24_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist24_begin_s
  INTEGER id_id
  auxhist24_begin_s = model_config_rec%auxhist24_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist24_begin_s
SUBROUTINE nl_get_auxhist24_begin ( id_id , auxhist24_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist24_begin
  INTEGER id_id
  auxhist24_begin = model_config_rec%auxhist24_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist24_begin
SUBROUTINE nl_get_auxhist24_end_y ( id_id , auxhist24_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist24_end_y
  INTEGER id_id
  auxhist24_end_y = model_config_rec%auxhist24_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist24_end_y
SUBROUTINE nl_get_auxhist24_end_d ( id_id , auxhist24_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist24_end_d
  INTEGER id_id
  auxhist24_end_d = model_config_rec%auxhist24_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist24_end_d
SUBROUTINE nl_get_auxhist24_end_h ( id_id , auxhist24_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist24_end_h
  INTEGER id_id
  auxhist24_end_h = model_config_rec%auxhist24_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist24_end_h
SUBROUTINE nl_get_auxhist24_end_m ( id_id , auxhist24_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist24_end_m
  INTEGER id_id
  auxhist24_end_m = model_config_rec%auxhist24_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist24_end_m
SUBROUTINE nl_get_auxhist24_end_s ( id_id , auxhist24_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist24_end_s
  INTEGER id_id
  auxhist24_end_s = model_config_rec%auxhist24_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist24_end_s
SUBROUTINE nl_get_auxhist24_end ( id_id , auxhist24_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxhist24_end
  INTEGER id_id
  auxhist24_end = model_config_rec%auxhist24_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxhist24_end
SUBROUTINE nl_get_io_form_auxhist24 ( id_id , io_form_auxhist24 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxhist24
  INTEGER id_id
  io_form_auxhist24 = model_config_rec%io_form_auxhist24
  RETURN
END SUBROUTINE nl_get_io_form_auxhist24
SUBROUTINE nl_get_frames_per_auxhist24 ( id_id , frames_per_auxhist24 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxhist24
  INTEGER id_id
  frames_per_auxhist24 = model_config_rec%frames_per_auxhist24(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxhist24
SUBROUTINE nl_get_auxinput1_outname ( id_id , auxinput1_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput1_outname
  INTEGER id_id
  auxinput1_outname = trim(model_config_rec%auxinput1_outname)
  RETURN
END SUBROUTINE nl_get_auxinput1_outname
SUBROUTINE nl_get_auxinput1_interval_y ( id_id , auxinput1_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput1_interval_y
  INTEGER id_id
  auxinput1_interval_y = model_config_rec%auxinput1_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput1_interval_y
SUBROUTINE nl_get_auxinput1_interval_d ( id_id , auxinput1_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput1_interval_d
  INTEGER id_id
  auxinput1_interval_d = model_config_rec%auxinput1_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput1_interval_d
SUBROUTINE nl_get_auxinput1_interval_h ( id_id , auxinput1_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput1_interval_h
  INTEGER id_id
  auxinput1_interval_h = model_config_rec%auxinput1_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput1_interval_h
SUBROUTINE nl_get_auxinput1_interval_m ( id_id , auxinput1_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput1_interval_m
  INTEGER id_id
  auxinput1_interval_m = model_config_rec%auxinput1_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput1_interval_m
SUBROUTINE nl_get_auxinput1_interval_s ( id_id , auxinput1_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput1_interval_s
  INTEGER id_id
  auxinput1_interval_s = model_config_rec%auxinput1_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput1_interval_s
SUBROUTINE nl_get_auxinput1_interval ( id_id , auxinput1_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput1_interval
  INTEGER id_id
  auxinput1_interval = model_config_rec%auxinput1_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput1_interval
SUBROUTINE nl_get_auxinput1_begin_y ( id_id , auxinput1_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput1_begin_y
  INTEGER id_id
  auxinput1_begin_y = model_config_rec%auxinput1_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput1_begin_y
SUBROUTINE nl_get_auxinput1_begin_d ( id_id , auxinput1_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput1_begin_d
  INTEGER id_id
  auxinput1_begin_d = model_config_rec%auxinput1_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput1_begin_d
SUBROUTINE nl_get_auxinput1_begin_h ( id_id , auxinput1_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput1_begin_h
  INTEGER id_id
  auxinput1_begin_h = model_config_rec%auxinput1_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput1_begin_h
SUBROUTINE nl_get_auxinput1_begin_m ( id_id , auxinput1_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput1_begin_m
  INTEGER id_id
  auxinput1_begin_m = model_config_rec%auxinput1_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput1_begin_m
SUBROUTINE nl_get_auxinput1_begin_s ( id_id , auxinput1_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput1_begin_s
  INTEGER id_id
  auxinput1_begin_s = model_config_rec%auxinput1_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput1_begin_s
SUBROUTINE nl_get_auxinput1_begin ( id_id , auxinput1_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput1_begin
  INTEGER id_id
  auxinput1_begin = model_config_rec%auxinput1_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput1_begin
SUBROUTINE nl_get_auxinput1_end_y ( id_id , auxinput1_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput1_end_y
  INTEGER id_id
  auxinput1_end_y = model_config_rec%auxinput1_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput1_end_y
SUBROUTINE nl_get_auxinput1_end_d ( id_id , auxinput1_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput1_end_d
  INTEGER id_id
  auxinput1_end_d = model_config_rec%auxinput1_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput1_end_d
SUBROUTINE nl_get_auxinput1_end_h ( id_id , auxinput1_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput1_end_h
  INTEGER id_id
  auxinput1_end_h = model_config_rec%auxinput1_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput1_end_h
SUBROUTINE nl_get_auxinput1_end_m ( id_id , auxinput1_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput1_end_m
  INTEGER id_id
  auxinput1_end_m = model_config_rec%auxinput1_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput1_end_m
SUBROUTINE nl_get_auxinput1_end_s ( id_id , auxinput1_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput1_end_s
  INTEGER id_id
  auxinput1_end_s = model_config_rec%auxinput1_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput1_end_s
SUBROUTINE nl_get_auxinput1_end ( id_id , auxinput1_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput1_end
  INTEGER id_id
  auxinput1_end = model_config_rec%auxinput1_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput1_end
SUBROUTINE nl_get_frames_per_auxinput1 ( id_id , frames_per_auxinput1 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxinput1
  INTEGER id_id
  frames_per_auxinput1 = model_config_rec%frames_per_auxinput1(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxinput1
SUBROUTINE nl_get_auxinput2_inname ( id_id , auxinput2_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput2_inname
  INTEGER id_id
  auxinput2_inname = trim(model_config_rec%auxinput2_inname)
  RETURN
END SUBROUTINE nl_get_auxinput2_inname
SUBROUTINE nl_get_auxinput2_outname ( id_id , auxinput2_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput2_outname
  INTEGER id_id
  auxinput2_outname = trim(model_config_rec%auxinput2_outname)
  RETURN
END SUBROUTINE nl_get_auxinput2_outname
SUBROUTINE nl_get_auxinput2_interval_y ( id_id , auxinput2_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput2_interval_y
  INTEGER id_id
  auxinput2_interval_y = model_config_rec%auxinput2_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput2_interval_y
SUBROUTINE nl_get_auxinput2_interval_d ( id_id , auxinput2_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput2_interval_d
  INTEGER id_id
  auxinput2_interval_d = model_config_rec%auxinput2_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput2_interval_d
SUBROUTINE nl_get_auxinput2_interval_h ( id_id , auxinput2_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput2_interval_h
  INTEGER id_id
  auxinput2_interval_h = model_config_rec%auxinput2_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput2_interval_h
SUBROUTINE nl_get_auxinput2_interval_m ( id_id , auxinput2_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput2_interval_m
  INTEGER id_id
  auxinput2_interval_m = model_config_rec%auxinput2_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput2_interval_m
SUBROUTINE nl_get_auxinput2_interval_s ( id_id , auxinput2_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput2_interval_s
  INTEGER id_id
  auxinput2_interval_s = model_config_rec%auxinput2_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput2_interval_s
SUBROUTINE nl_get_auxinput2_interval ( id_id , auxinput2_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput2_interval
  INTEGER id_id
  auxinput2_interval = model_config_rec%auxinput2_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput2_interval
SUBROUTINE nl_get_auxinput2_begin_y ( id_id , auxinput2_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput2_begin_y
  INTEGER id_id
  auxinput2_begin_y = model_config_rec%auxinput2_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput2_begin_y
SUBROUTINE nl_get_auxinput2_begin_d ( id_id , auxinput2_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput2_begin_d
  INTEGER id_id
  auxinput2_begin_d = model_config_rec%auxinput2_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput2_begin_d
SUBROUTINE nl_get_auxinput2_begin_h ( id_id , auxinput2_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput2_begin_h
  INTEGER id_id
  auxinput2_begin_h = model_config_rec%auxinput2_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput2_begin_h
SUBROUTINE nl_get_auxinput2_begin_m ( id_id , auxinput2_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput2_begin_m
  INTEGER id_id
  auxinput2_begin_m = model_config_rec%auxinput2_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput2_begin_m
SUBROUTINE nl_get_auxinput2_begin_s ( id_id , auxinput2_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput2_begin_s
  INTEGER id_id
  auxinput2_begin_s = model_config_rec%auxinput2_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput2_begin_s
SUBROUTINE nl_get_auxinput2_begin ( id_id , auxinput2_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput2_begin
  INTEGER id_id
  auxinput2_begin = model_config_rec%auxinput2_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput2_begin
SUBROUTINE nl_get_auxinput2_end_y ( id_id , auxinput2_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput2_end_y
  INTEGER id_id
  auxinput2_end_y = model_config_rec%auxinput2_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput2_end_y
SUBROUTINE nl_get_auxinput2_end_d ( id_id , auxinput2_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput2_end_d
  INTEGER id_id
  auxinput2_end_d = model_config_rec%auxinput2_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput2_end_d
SUBROUTINE nl_get_auxinput2_end_h ( id_id , auxinput2_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput2_end_h
  INTEGER id_id
  auxinput2_end_h = model_config_rec%auxinput2_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput2_end_h
SUBROUTINE nl_get_auxinput2_end_m ( id_id , auxinput2_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput2_end_m
  INTEGER id_id
  auxinput2_end_m = model_config_rec%auxinput2_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput2_end_m
SUBROUTINE nl_get_auxinput2_end_s ( id_id , auxinput2_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput2_end_s
  INTEGER id_id
  auxinput2_end_s = model_config_rec%auxinput2_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput2_end_s
SUBROUTINE nl_get_auxinput2_end ( id_id , auxinput2_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput2_end
  INTEGER id_id
  auxinput2_end = model_config_rec%auxinput2_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput2_end
SUBROUTINE nl_get_io_form_auxinput2 ( id_id , io_form_auxinput2 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxinput2
  INTEGER id_id
  io_form_auxinput2 = model_config_rec%io_form_auxinput2
  RETURN
END SUBROUTINE nl_get_io_form_auxinput2
SUBROUTINE nl_get_frames_per_auxinput2 ( id_id , frames_per_auxinput2 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxinput2
  INTEGER id_id
  frames_per_auxinput2 = model_config_rec%frames_per_auxinput2(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxinput2
SUBROUTINE nl_get_auxinput3_inname ( id_id , auxinput3_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput3_inname
  INTEGER id_id
  auxinput3_inname = trim(model_config_rec%auxinput3_inname)
  RETURN
END SUBROUTINE nl_get_auxinput3_inname
SUBROUTINE nl_get_auxinput3_outname ( id_id , auxinput3_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput3_outname
  INTEGER id_id
  auxinput3_outname = trim(model_config_rec%auxinput3_outname)
  RETURN
END SUBROUTINE nl_get_auxinput3_outname
SUBROUTINE nl_get_auxinput3_interval_y ( id_id , auxinput3_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput3_interval_y
  INTEGER id_id
  auxinput3_interval_y = model_config_rec%auxinput3_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput3_interval_y
SUBROUTINE nl_get_auxinput3_interval_d ( id_id , auxinput3_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput3_interval_d
  INTEGER id_id
  auxinput3_interval_d = model_config_rec%auxinput3_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput3_interval_d
SUBROUTINE nl_get_auxinput3_interval_h ( id_id , auxinput3_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput3_interval_h
  INTEGER id_id
  auxinput3_interval_h = model_config_rec%auxinput3_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput3_interval_h
SUBROUTINE nl_get_auxinput3_interval_m ( id_id , auxinput3_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput3_interval_m
  INTEGER id_id
  auxinput3_interval_m = model_config_rec%auxinput3_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput3_interval_m
SUBROUTINE nl_get_auxinput3_interval_s ( id_id , auxinput3_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput3_interval_s
  INTEGER id_id
  auxinput3_interval_s = model_config_rec%auxinput3_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput3_interval_s
SUBROUTINE nl_get_auxinput3_interval ( id_id , auxinput3_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput3_interval
  INTEGER id_id
  auxinput3_interval = model_config_rec%auxinput3_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput3_interval
SUBROUTINE nl_get_auxinput3_begin_y ( id_id , auxinput3_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput3_begin_y
  INTEGER id_id
  auxinput3_begin_y = model_config_rec%auxinput3_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput3_begin_y
SUBROUTINE nl_get_auxinput3_begin_d ( id_id , auxinput3_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput3_begin_d
  INTEGER id_id
  auxinput3_begin_d = model_config_rec%auxinput3_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput3_begin_d
SUBROUTINE nl_get_auxinput3_begin_h ( id_id , auxinput3_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput3_begin_h
  INTEGER id_id
  auxinput3_begin_h = model_config_rec%auxinput3_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput3_begin_h
SUBROUTINE nl_get_auxinput3_begin_m ( id_id , auxinput3_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput3_begin_m
  INTEGER id_id
  auxinput3_begin_m = model_config_rec%auxinput3_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput3_begin_m
SUBROUTINE nl_get_auxinput3_begin_s ( id_id , auxinput3_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput3_begin_s
  INTEGER id_id
  auxinput3_begin_s = model_config_rec%auxinput3_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput3_begin_s
SUBROUTINE nl_get_auxinput3_begin ( id_id , auxinput3_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput3_begin
  INTEGER id_id
  auxinput3_begin = model_config_rec%auxinput3_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput3_begin
SUBROUTINE nl_get_auxinput3_end_y ( id_id , auxinput3_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput3_end_y
  INTEGER id_id
  auxinput3_end_y = model_config_rec%auxinput3_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput3_end_y
SUBROUTINE nl_get_auxinput3_end_d ( id_id , auxinput3_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput3_end_d
  INTEGER id_id
  auxinput3_end_d = model_config_rec%auxinput3_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput3_end_d
SUBROUTINE nl_get_auxinput3_end_h ( id_id , auxinput3_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput3_end_h
  INTEGER id_id
  auxinput3_end_h = model_config_rec%auxinput3_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput3_end_h
SUBROUTINE nl_get_auxinput3_end_m ( id_id , auxinput3_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput3_end_m
  INTEGER id_id
  auxinput3_end_m = model_config_rec%auxinput3_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput3_end_m
SUBROUTINE nl_get_auxinput3_end_s ( id_id , auxinput3_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput3_end_s
  INTEGER id_id
  auxinput3_end_s = model_config_rec%auxinput3_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput3_end_s
SUBROUTINE nl_get_auxinput3_end ( id_id , auxinput3_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput3_end
  INTEGER id_id
  auxinput3_end = model_config_rec%auxinput3_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput3_end
SUBROUTINE nl_get_io_form_auxinput3 ( id_id , io_form_auxinput3 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxinput3
  INTEGER id_id
  io_form_auxinput3 = model_config_rec%io_form_auxinput3
  RETURN
END SUBROUTINE nl_get_io_form_auxinput3
SUBROUTINE nl_get_frames_per_auxinput3 ( id_id , frames_per_auxinput3 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxinput3
  INTEGER id_id
  frames_per_auxinput3 = model_config_rec%frames_per_auxinput3(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxinput3
SUBROUTINE nl_get_auxinput4_inname ( id_id , auxinput4_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput4_inname
  INTEGER id_id
  auxinput4_inname = trim(model_config_rec%auxinput4_inname)
  RETURN
END SUBROUTINE nl_get_auxinput4_inname
SUBROUTINE nl_get_auxinput4_outname ( id_id , auxinput4_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput4_outname
  INTEGER id_id
  auxinput4_outname = trim(model_config_rec%auxinput4_outname)
  RETURN
END SUBROUTINE nl_get_auxinput4_outname
SUBROUTINE nl_get_auxinput4_interval_y ( id_id , auxinput4_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput4_interval_y
  INTEGER id_id
  auxinput4_interval_y = model_config_rec%auxinput4_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput4_interval_y
SUBROUTINE nl_get_auxinput4_interval_d ( id_id , auxinput4_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput4_interval_d
  INTEGER id_id
  auxinput4_interval_d = model_config_rec%auxinput4_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput4_interval_d
SUBROUTINE nl_get_auxinput4_interval_h ( id_id , auxinput4_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput4_interval_h
  INTEGER id_id
  auxinput4_interval_h = model_config_rec%auxinput4_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput4_interval_h
SUBROUTINE nl_get_auxinput4_interval_m ( id_id , auxinput4_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput4_interval_m
  INTEGER id_id
  auxinput4_interval_m = model_config_rec%auxinput4_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput4_interval_m
SUBROUTINE nl_get_auxinput4_interval_s ( id_id , auxinput4_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput4_interval_s
  INTEGER id_id
  auxinput4_interval_s = model_config_rec%auxinput4_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput4_interval_s
SUBROUTINE nl_get_auxinput4_interval ( id_id , auxinput4_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput4_interval
  INTEGER id_id
  auxinput4_interval = model_config_rec%auxinput4_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput4_interval
SUBROUTINE nl_get_auxinput4_begin_y ( id_id , auxinput4_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput4_begin_y
  INTEGER id_id
  auxinput4_begin_y = model_config_rec%auxinput4_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput4_begin_y
SUBROUTINE nl_get_auxinput4_begin_d ( id_id , auxinput4_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput4_begin_d
  INTEGER id_id
  auxinput4_begin_d = model_config_rec%auxinput4_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput4_begin_d
SUBROUTINE nl_get_auxinput4_begin_h ( id_id , auxinput4_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput4_begin_h
  INTEGER id_id
  auxinput4_begin_h = model_config_rec%auxinput4_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput4_begin_h
SUBROUTINE nl_get_auxinput4_begin_m ( id_id , auxinput4_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput4_begin_m
  INTEGER id_id
  auxinput4_begin_m = model_config_rec%auxinput4_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput4_begin_m
SUBROUTINE nl_get_auxinput4_begin_s ( id_id , auxinput4_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput4_begin_s
  INTEGER id_id
  auxinput4_begin_s = model_config_rec%auxinput4_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput4_begin_s
SUBROUTINE nl_get_auxinput4_begin ( id_id , auxinput4_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput4_begin
  INTEGER id_id
  auxinput4_begin = model_config_rec%auxinput4_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput4_begin
SUBROUTINE nl_get_auxinput4_end_y ( id_id , auxinput4_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput4_end_y
  INTEGER id_id
  auxinput4_end_y = model_config_rec%auxinput4_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput4_end_y
SUBROUTINE nl_get_auxinput4_end_d ( id_id , auxinput4_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput4_end_d
  INTEGER id_id
  auxinput4_end_d = model_config_rec%auxinput4_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput4_end_d
SUBROUTINE nl_get_auxinput4_end_h ( id_id , auxinput4_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput4_end_h
  INTEGER id_id
  auxinput4_end_h = model_config_rec%auxinput4_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput4_end_h
SUBROUTINE nl_get_auxinput4_end_m ( id_id , auxinput4_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput4_end_m
  INTEGER id_id
  auxinput4_end_m = model_config_rec%auxinput4_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput4_end_m
SUBROUTINE nl_get_auxinput4_end_s ( id_id , auxinput4_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput4_end_s
  INTEGER id_id
  auxinput4_end_s = model_config_rec%auxinput4_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput4_end_s
SUBROUTINE nl_get_auxinput4_end ( id_id , auxinput4_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput4_end
  INTEGER id_id
  auxinput4_end = model_config_rec%auxinput4_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput4_end
SUBROUTINE nl_get_io_form_auxinput4 ( id_id , io_form_auxinput4 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxinput4
  INTEGER id_id
  io_form_auxinput4 = model_config_rec%io_form_auxinput4
  RETURN
END SUBROUTINE nl_get_io_form_auxinput4
SUBROUTINE nl_get_frames_per_auxinput4 ( id_id , frames_per_auxinput4 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxinput4
  INTEGER id_id
  frames_per_auxinput4 = model_config_rec%frames_per_auxinput4(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxinput4
SUBROUTINE nl_get_auxinput5_inname ( id_id , auxinput5_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput5_inname
  INTEGER id_id
  auxinput5_inname = trim(model_config_rec%auxinput5_inname)
  RETURN
END SUBROUTINE nl_get_auxinput5_inname
SUBROUTINE nl_get_auxinput5_outname ( id_id , auxinput5_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput5_outname
  INTEGER id_id
  auxinput5_outname = trim(model_config_rec%auxinput5_outname)
  RETURN
END SUBROUTINE nl_get_auxinput5_outname
SUBROUTINE nl_get_auxinput5_interval_y ( id_id , auxinput5_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput5_interval_y
  INTEGER id_id
  auxinput5_interval_y = model_config_rec%auxinput5_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput5_interval_y
SUBROUTINE nl_get_auxinput5_interval_d ( id_id , auxinput5_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput5_interval_d
  INTEGER id_id
  auxinput5_interval_d = model_config_rec%auxinput5_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput5_interval_d
SUBROUTINE nl_get_auxinput5_interval_h ( id_id , auxinput5_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput5_interval_h
  INTEGER id_id
  auxinput5_interval_h = model_config_rec%auxinput5_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput5_interval_h
SUBROUTINE nl_get_auxinput5_interval_m ( id_id , auxinput5_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput5_interval_m
  INTEGER id_id
  auxinput5_interval_m = model_config_rec%auxinput5_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput5_interval_m
SUBROUTINE nl_get_auxinput5_interval_s ( id_id , auxinput5_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput5_interval_s
  INTEGER id_id
  auxinput5_interval_s = model_config_rec%auxinput5_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput5_interval_s
SUBROUTINE nl_get_auxinput5_interval ( id_id , auxinput5_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput5_interval
  INTEGER id_id
  auxinput5_interval = model_config_rec%auxinput5_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput5_interval
SUBROUTINE nl_get_auxinput5_begin_y ( id_id , auxinput5_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput5_begin_y
  INTEGER id_id
  auxinput5_begin_y = model_config_rec%auxinput5_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput5_begin_y
SUBROUTINE nl_get_auxinput5_begin_d ( id_id , auxinput5_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput5_begin_d
  INTEGER id_id
  auxinput5_begin_d = model_config_rec%auxinput5_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput5_begin_d
SUBROUTINE nl_get_auxinput5_begin_h ( id_id , auxinput5_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput5_begin_h
  INTEGER id_id
  auxinput5_begin_h = model_config_rec%auxinput5_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput5_begin_h
SUBROUTINE nl_get_auxinput5_begin_m ( id_id , auxinput5_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput5_begin_m
  INTEGER id_id
  auxinput5_begin_m = model_config_rec%auxinput5_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput5_begin_m
SUBROUTINE nl_get_auxinput5_begin_s ( id_id , auxinput5_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput5_begin_s
  INTEGER id_id
  auxinput5_begin_s = model_config_rec%auxinput5_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput5_begin_s
SUBROUTINE nl_get_auxinput5_begin ( id_id , auxinput5_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput5_begin
  INTEGER id_id
  auxinput5_begin = model_config_rec%auxinput5_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput5_begin
SUBROUTINE nl_get_auxinput5_end_y ( id_id , auxinput5_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput5_end_y
  INTEGER id_id
  auxinput5_end_y = model_config_rec%auxinput5_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput5_end_y
SUBROUTINE nl_get_auxinput5_end_d ( id_id , auxinput5_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput5_end_d
  INTEGER id_id
  auxinput5_end_d = model_config_rec%auxinput5_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput5_end_d
SUBROUTINE nl_get_auxinput5_end_h ( id_id , auxinput5_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput5_end_h
  INTEGER id_id
  auxinput5_end_h = model_config_rec%auxinput5_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput5_end_h
SUBROUTINE nl_get_auxinput5_end_m ( id_id , auxinput5_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput5_end_m
  INTEGER id_id
  auxinput5_end_m = model_config_rec%auxinput5_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput5_end_m
SUBROUTINE nl_get_auxinput5_end_s ( id_id , auxinput5_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput5_end_s
  INTEGER id_id
  auxinput5_end_s = model_config_rec%auxinput5_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput5_end_s
SUBROUTINE nl_get_auxinput5_end ( id_id , auxinput5_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput5_end
  INTEGER id_id
  auxinput5_end = model_config_rec%auxinput5_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput5_end
#endif
#if (NNN == 5)
SUBROUTINE nl_get_io_form_auxinput5 ( id_id , io_form_auxinput5 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxinput5
  INTEGER id_id
  io_form_auxinput5 = model_config_rec%io_form_auxinput5
  RETURN
END SUBROUTINE nl_get_io_form_auxinput5
SUBROUTINE nl_get_frames_per_auxinput5 ( id_id , frames_per_auxinput5 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxinput5
  INTEGER id_id
  frames_per_auxinput5 = model_config_rec%frames_per_auxinput5(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxinput5
SUBROUTINE nl_get_auxinput6_inname ( id_id , auxinput6_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput6_inname
  INTEGER id_id
  auxinput6_inname = trim(model_config_rec%auxinput6_inname)
  RETURN
END SUBROUTINE nl_get_auxinput6_inname
SUBROUTINE nl_get_auxinput6_outname ( id_id , auxinput6_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput6_outname
  INTEGER id_id
  auxinput6_outname = trim(model_config_rec%auxinput6_outname)
  RETURN
END SUBROUTINE nl_get_auxinput6_outname
SUBROUTINE nl_get_auxinput6_interval_y ( id_id , auxinput6_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput6_interval_y
  INTEGER id_id
  auxinput6_interval_y = model_config_rec%auxinput6_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput6_interval_y
SUBROUTINE nl_get_auxinput6_interval_d ( id_id , auxinput6_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput6_interval_d
  INTEGER id_id
  auxinput6_interval_d = model_config_rec%auxinput6_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput6_interval_d
SUBROUTINE nl_get_auxinput6_interval_h ( id_id , auxinput6_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput6_interval_h
  INTEGER id_id
  auxinput6_interval_h = model_config_rec%auxinput6_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput6_interval_h
SUBROUTINE nl_get_auxinput6_interval_m ( id_id , auxinput6_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput6_interval_m
  INTEGER id_id
  auxinput6_interval_m = model_config_rec%auxinput6_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput6_interval_m
SUBROUTINE nl_get_auxinput6_interval_s ( id_id , auxinput6_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput6_interval_s
  INTEGER id_id
  auxinput6_interval_s = model_config_rec%auxinput6_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput6_interval_s
SUBROUTINE nl_get_auxinput6_interval ( id_id , auxinput6_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput6_interval
  INTEGER id_id
  auxinput6_interval = model_config_rec%auxinput6_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput6_interval
SUBROUTINE nl_get_auxinput6_begin_y ( id_id , auxinput6_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput6_begin_y
  INTEGER id_id
  auxinput6_begin_y = model_config_rec%auxinput6_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput6_begin_y
SUBROUTINE nl_get_auxinput6_begin_d ( id_id , auxinput6_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput6_begin_d
  INTEGER id_id
  auxinput6_begin_d = model_config_rec%auxinput6_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput6_begin_d
SUBROUTINE nl_get_auxinput6_begin_h ( id_id , auxinput6_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput6_begin_h
  INTEGER id_id
  auxinput6_begin_h = model_config_rec%auxinput6_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput6_begin_h
SUBROUTINE nl_get_auxinput6_begin_m ( id_id , auxinput6_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput6_begin_m
  INTEGER id_id
  auxinput6_begin_m = model_config_rec%auxinput6_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput6_begin_m
SUBROUTINE nl_get_auxinput6_begin_s ( id_id , auxinput6_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput6_begin_s
  INTEGER id_id
  auxinput6_begin_s = model_config_rec%auxinput6_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput6_begin_s
SUBROUTINE nl_get_auxinput6_begin ( id_id , auxinput6_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput6_begin
  INTEGER id_id
  auxinput6_begin = model_config_rec%auxinput6_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput6_begin
SUBROUTINE nl_get_auxinput6_end_y ( id_id , auxinput6_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput6_end_y
  INTEGER id_id
  auxinput6_end_y = model_config_rec%auxinput6_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput6_end_y
SUBROUTINE nl_get_auxinput6_end_d ( id_id , auxinput6_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput6_end_d
  INTEGER id_id
  auxinput6_end_d = model_config_rec%auxinput6_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput6_end_d
SUBROUTINE nl_get_auxinput6_end_h ( id_id , auxinput6_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput6_end_h
  INTEGER id_id
  auxinput6_end_h = model_config_rec%auxinput6_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput6_end_h
SUBROUTINE nl_get_auxinput6_end_m ( id_id , auxinput6_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput6_end_m
  INTEGER id_id
  auxinput6_end_m = model_config_rec%auxinput6_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput6_end_m
SUBROUTINE nl_get_auxinput6_end_s ( id_id , auxinput6_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput6_end_s
  INTEGER id_id
  auxinput6_end_s = model_config_rec%auxinput6_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput6_end_s
SUBROUTINE nl_get_auxinput6_end ( id_id , auxinput6_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput6_end
  INTEGER id_id
  auxinput6_end = model_config_rec%auxinput6_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput6_end
SUBROUTINE nl_get_io_form_auxinput6 ( id_id , io_form_auxinput6 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxinput6
  INTEGER id_id
  io_form_auxinput6 = model_config_rec%io_form_auxinput6
  RETURN
END SUBROUTINE nl_get_io_form_auxinput6
SUBROUTINE nl_get_frames_per_auxinput6 ( id_id , frames_per_auxinput6 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxinput6
  INTEGER id_id
  frames_per_auxinput6 = model_config_rec%frames_per_auxinput6(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxinput6
SUBROUTINE nl_get_auxinput7_inname ( id_id , auxinput7_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput7_inname
  INTEGER id_id
  auxinput7_inname = trim(model_config_rec%auxinput7_inname)
  RETURN
END SUBROUTINE nl_get_auxinput7_inname
SUBROUTINE nl_get_auxinput7_outname ( id_id , auxinput7_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput7_outname
  INTEGER id_id
  auxinput7_outname = trim(model_config_rec%auxinput7_outname)
  RETURN
END SUBROUTINE nl_get_auxinput7_outname
SUBROUTINE nl_get_auxinput7_interval_y ( id_id , auxinput7_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput7_interval_y
  INTEGER id_id
  auxinput7_interval_y = model_config_rec%auxinput7_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput7_interval_y
SUBROUTINE nl_get_auxinput7_interval_d ( id_id , auxinput7_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput7_interval_d
  INTEGER id_id
  auxinput7_interval_d = model_config_rec%auxinput7_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput7_interval_d
SUBROUTINE nl_get_auxinput7_interval_h ( id_id , auxinput7_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput7_interval_h
  INTEGER id_id
  auxinput7_interval_h = model_config_rec%auxinput7_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput7_interval_h
SUBROUTINE nl_get_auxinput7_interval_m ( id_id , auxinput7_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput7_interval_m
  INTEGER id_id
  auxinput7_interval_m = model_config_rec%auxinput7_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput7_interval_m
SUBROUTINE nl_get_auxinput7_interval_s ( id_id , auxinput7_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput7_interval_s
  INTEGER id_id
  auxinput7_interval_s = model_config_rec%auxinput7_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput7_interval_s
SUBROUTINE nl_get_auxinput7_interval ( id_id , auxinput7_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput7_interval
  INTEGER id_id
  auxinput7_interval = model_config_rec%auxinput7_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput7_interval
SUBROUTINE nl_get_auxinput7_begin_y ( id_id , auxinput7_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput7_begin_y
  INTEGER id_id
  auxinput7_begin_y = model_config_rec%auxinput7_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput7_begin_y
SUBROUTINE nl_get_auxinput7_begin_d ( id_id , auxinput7_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput7_begin_d
  INTEGER id_id
  auxinput7_begin_d = model_config_rec%auxinput7_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput7_begin_d
SUBROUTINE nl_get_auxinput7_begin_h ( id_id , auxinput7_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput7_begin_h
  INTEGER id_id
  auxinput7_begin_h = model_config_rec%auxinput7_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput7_begin_h
SUBROUTINE nl_get_auxinput7_begin_m ( id_id , auxinput7_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput7_begin_m
  INTEGER id_id
  auxinput7_begin_m = model_config_rec%auxinput7_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput7_begin_m
SUBROUTINE nl_get_auxinput7_begin_s ( id_id , auxinput7_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput7_begin_s
  INTEGER id_id
  auxinput7_begin_s = model_config_rec%auxinput7_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput7_begin_s
SUBROUTINE nl_get_auxinput7_begin ( id_id , auxinput7_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput7_begin
  INTEGER id_id
  auxinput7_begin = model_config_rec%auxinput7_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput7_begin
SUBROUTINE nl_get_auxinput7_end_y ( id_id , auxinput7_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput7_end_y
  INTEGER id_id
  auxinput7_end_y = model_config_rec%auxinput7_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput7_end_y
SUBROUTINE nl_get_auxinput7_end_d ( id_id , auxinput7_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput7_end_d
  INTEGER id_id
  auxinput7_end_d = model_config_rec%auxinput7_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput7_end_d
SUBROUTINE nl_get_auxinput7_end_h ( id_id , auxinput7_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput7_end_h
  INTEGER id_id
  auxinput7_end_h = model_config_rec%auxinput7_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput7_end_h
SUBROUTINE nl_get_auxinput7_end_m ( id_id , auxinput7_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput7_end_m
  INTEGER id_id
  auxinput7_end_m = model_config_rec%auxinput7_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput7_end_m
SUBROUTINE nl_get_auxinput7_end_s ( id_id , auxinput7_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput7_end_s
  INTEGER id_id
  auxinput7_end_s = model_config_rec%auxinput7_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput7_end_s
SUBROUTINE nl_get_auxinput7_end ( id_id , auxinput7_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput7_end
  INTEGER id_id
  auxinput7_end = model_config_rec%auxinput7_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput7_end
SUBROUTINE nl_get_io_form_auxinput7 ( id_id , io_form_auxinput7 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxinput7
  INTEGER id_id
  io_form_auxinput7 = model_config_rec%io_form_auxinput7
  RETURN
END SUBROUTINE nl_get_io_form_auxinput7
SUBROUTINE nl_get_frames_per_auxinput7 ( id_id , frames_per_auxinput7 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxinput7
  INTEGER id_id
  frames_per_auxinput7 = model_config_rec%frames_per_auxinput7(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxinput7
SUBROUTINE nl_get_auxinput8_inname ( id_id , auxinput8_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput8_inname
  INTEGER id_id
  auxinput8_inname = trim(model_config_rec%auxinput8_inname)
  RETURN
END SUBROUTINE nl_get_auxinput8_inname
SUBROUTINE nl_get_auxinput8_outname ( id_id , auxinput8_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput8_outname
  INTEGER id_id
  auxinput8_outname = trim(model_config_rec%auxinput8_outname)
  RETURN
END SUBROUTINE nl_get_auxinput8_outname
SUBROUTINE nl_get_auxinput8_interval_y ( id_id , auxinput8_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput8_interval_y
  INTEGER id_id
  auxinput8_interval_y = model_config_rec%auxinput8_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput8_interval_y
SUBROUTINE nl_get_auxinput8_interval_d ( id_id , auxinput8_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput8_interval_d
  INTEGER id_id
  auxinput8_interval_d = model_config_rec%auxinput8_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput8_interval_d
SUBROUTINE nl_get_auxinput8_interval_h ( id_id , auxinput8_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput8_interval_h
  INTEGER id_id
  auxinput8_interval_h = model_config_rec%auxinput8_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput8_interval_h
SUBROUTINE nl_get_auxinput8_interval_m ( id_id , auxinput8_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput8_interval_m
  INTEGER id_id
  auxinput8_interval_m = model_config_rec%auxinput8_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput8_interval_m
SUBROUTINE nl_get_auxinput8_interval_s ( id_id , auxinput8_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput8_interval_s
  INTEGER id_id
  auxinput8_interval_s = model_config_rec%auxinput8_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput8_interval_s
SUBROUTINE nl_get_auxinput8_interval ( id_id , auxinput8_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput8_interval
  INTEGER id_id
  auxinput8_interval = model_config_rec%auxinput8_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput8_interval
SUBROUTINE nl_get_auxinput8_begin_y ( id_id , auxinput8_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput8_begin_y
  INTEGER id_id
  auxinput8_begin_y = model_config_rec%auxinput8_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput8_begin_y
SUBROUTINE nl_get_auxinput8_begin_d ( id_id , auxinput8_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput8_begin_d
  INTEGER id_id
  auxinput8_begin_d = model_config_rec%auxinput8_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput8_begin_d
SUBROUTINE nl_get_auxinput8_begin_h ( id_id , auxinput8_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput8_begin_h
  INTEGER id_id
  auxinput8_begin_h = model_config_rec%auxinput8_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput8_begin_h
SUBROUTINE nl_get_auxinput8_begin_m ( id_id , auxinput8_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput8_begin_m
  INTEGER id_id
  auxinput8_begin_m = model_config_rec%auxinput8_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput8_begin_m
SUBROUTINE nl_get_auxinput8_begin_s ( id_id , auxinput8_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput8_begin_s
  INTEGER id_id
  auxinput8_begin_s = model_config_rec%auxinput8_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput8_begin_s
SUBROUTINE nl_get_auxinput8_begin ( id_id , auxinput8_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput8_begin
  INTEGER id_id
  auxinput8_begin = model_config_rec%auxinput8_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput8_begin
SUBROUTINE nl_get_auxinput8_end_y ( id_id , auxinput8_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput8_end_y
  INTEGER id_id
  auxinput8_end_y = model_config_rec%auxinput8_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput8_end_y
SUBROUTINE nl_get_auxinput8_end_d ( id_id , auxinput8_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput8_end_d
  INTEGER id_id
  auxinput8_end_d = model_config_rec%auxinput8_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput8_end_d
SUBROUTINE nl_get_auxinput8_end_h ( id_id , auxinput8_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput8_end_h
  INTEGER id_id
  auxinput8_end_h = model_config_rec%auxinput8_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput8_end_h
SUBROUTINE nl_get_auxinput8_end_m ( id_id , auxinput8_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput8_end_m
  INTEGER id_id
  auxinput8_end_m = model_config_rec%auxinput8_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput8_end_m
SUBROUTINE nl_get_auxinput8_end_s ( id_id , auxinput8_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput8_end_s
  INTEGER id_id
  auxinput8_end_s = model_config_rec%auxinput8_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput8_end_s
SUBROUTINE nl_get_auxinput8_end ( id_id , auxinput8_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput8_end
  INTEGER id_id
  auxinput8_end = model_config_rec%auxinput8_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput8_end
SUBROUTINE nl_get_io_form_auxinput8 ( id_id , io_form_auxinput8 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxinput8
  INTEGER id_id
  io_form_auxinput8 = model_config_rec%io_form_auxinput8
  RETURN
END SUBROUTINE nl_get_io_form_auxinput8
SUBROUTINE nl_get_frames_per_auxinput8 ( id_id , frames_per_auxinput8 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxinput8
  INTEGER id_id
  frames_per_auxinput8 = model_config_rec%frames_per_auxinput8(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxinput8
SUBROUTINE nl_get_auxinput9_inname ( id_id , auxinput9_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput9_inname
  INTEGER id_id
  auxinput9_inname = trim(model_config_rec%auxinput9_inname)
  RETURN
END SUBROUTINE nl_get_auxinput9_inname
SUBROUTINE nl_get_auxinput9_outname ( id_id , auxinput9_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput9_outname
  INTEGER id_id
  auxinput9_outname = trim(model_config_rec%auxinput9_outname)
  RETURN
END SUBROUTINE nl_get_auxinput9_outname
SUBROUTINE nl_get_auxinput9_interval_y ( id_id , auxinput9_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput9_interval_y
  INTEGER id_id
  auxinput9_interval_y = model_config_rec%auxinput9_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput9_interval_y
SUBROUTINE nl_get_auxinput9_interval_d ( id_id , auxinput9_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput9_interval_d
  INTEGER id_id
  auxinput9_interval_d = model_config_rec%auxinput9_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput9_interval_d
SUBROUTINE nl_get_auxinput9_interval_h ( id_id , auxinput9_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput9_interval_h
  INTEGER id_id
  auxinput9_interval_h = model_config_rec%auxinput9_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput9_interval_h
SUBROUTINE nl_get_auxinput9_interval_m ( id_id , auxinput9_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput9_interval_m
  INTEGER id_id
  auxinput9_interval_m = model_config_rec%auxinput9_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput9_interval_m
SUBROUTINE nl_get_auxinput9_interval_s ( id_id , auxinput9_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput9_interval_s
  INTEGER id_id
  auxinput9_interval_s = model_config_rec%auxinput9_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput9_interval_s
SUBROUTINE nl_get_auxinput9_interval ( id_id , auxinput9_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput9_interval
  INTEGER id_id
  auxinput9_interval = model_config_rec%auxinput9_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput9_interval
SUBROUTINE nl_get_auxinput9_begin_y ( id_id , auxinput9_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput9_begin_y
  INTEGER id_id
  auxinput9_begin_y = model_config_rec%auxinput9_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput9_begin_y
SUBROUTINE nl_get_auxinput9_begin_d ( id_id , auxinput9_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput9_begin_d
  INTEGER id_id
  auxinput9_begin_d = model_config_rec%auxinput9_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput9_begin_d
SUBROUTINE nl_get_auxinput9_begin_h ( id_id , auxinput9_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput9_begin_h
  INTEGER id_id
  auxinput9_begin_h = model_config_rec%auxinput9_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput9_begin_h
SUBROUTINE nl_get_auxinput9_begin_m ( id_id , auxinput9_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput9_begin_m
  INTEGER id_id
  auxinput9_begin_m = model_config_rec%auxinput9_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput9_begin_m
SUBROUTINE nl_get_auxinput9_begin_s ( id_id , auxinput9_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput9_begin_s
  INTEGER id_id
  auxinput9_begin_s = model_config_rec%auxinput9_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput9_begin_s
SUBROUTINE nl_get_auxinput9_begin ( id_id , auxinput9_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput9_begin
  INTEGER id_id
  auxinput9_begin = model_config_rec%auxinput9_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput9_begin
SUBROUTINE nl_get_auxinput9_end_y ( id_id , auxinput9_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput9_end_y
  INTEGER id_id
  auxinput9_end_y = model_config_rec%auxinput9_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput9_end_y
SUBROUTINE nl_get_auxinput9_end_d ( id_id , auxinput9_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput9_end_d
  INTEGER id_id
  auxinput9_end_d = model_config_rec%auxinput9_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput9_end_d
SUBROUTINE nl_get_auxinput9_end_h ( id_id , auxinput9_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput9_end_h
  INTEGER id_id
  auxinput9_end_h = model_config_rec%auxinput9_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput9_end_h
SUBROUTINE nl_get_auxinput9_end_m ( id_id , auxinput9_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput9_end_m
  INTEGER id_id
  auxinput9_end_m = model_config_rec%auxinput9_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput9_end_m
SUBROUTINE nl_get_auxinput9_end_s ( id_id , auxinput9_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput9_end_s
  INTEGER id_id
  auxinput9_end_s = model_config_rec%auxinput9_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput9_end_s
SUBROUTINE nl_get_auxinput9_end ( id_id , auxinput9_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput9_end
  INTEGER id_id
  auxinput9_end = model_config_rec%auxinput9_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput9_end
SUBROUTINE nl_get_io_form_auxinput9 ( id_id , io_form_auxinput9 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxinput9
  INTEGER id_id
  io_form_auxinput9 = model_config_rec%io_form_auxinput9
  RETURN
END SUBROUTINE nl_get_io_form_auxinput9
SUBROUTINE nl_get_frames_per_auxinput9 ( id_id , frames_per_auxinput9 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxinput9
  INTEGER id_id
  frames_per_auxinput9 = model_config_rec%frames_per_auxinput9(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxinput9
SUBROUTINE nl_get_auxinput10_inname ( id_id , auxinput10_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput10_inname
  INTEGER id_id
  auxinput10_inname = trim(model_config_rec%auxinput10_inname)
  RETURN
END SUBROUTINE nl_get_auxinput10_inname
SUBROUTINE nl_get_auxinput10_outname ( id_id , auxinput10_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput10_outname
  INTEGER id_id
  auxinput10_outname = trim(model_config_rec%auxinput10_outname)
  RETURN
END SUBROUTINE nl_get_auxinput10_outname
SUBROUTINE nl_get_auxinput10_interval_y ( id_id , auxinput10_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput10_interval_y
  INTEGER id_id
  auxinput10_interval_y = model_config_rec%auxinput10_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput10_interval_y
SUBROUTINE nl_get_auxinput10_interval_d ( id_id , auxinput10_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput10_interval_d
  INTEGER id_id
  auxinput10_interval_d = model_config_rec%auxinput10_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput10_interval_d
SUBROUTINE nl_get_auxinput10_interval_h ( id_id , auxinput10_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput10_interval_h
  INTEGER id_id
  auxinput10_interval_h = model_config_rec%auxinput10_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput10_interval_h
SUBROUTINE nl_get_auxinput10_interval_m ( id_id , auxinput10_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput10_interval_m
  INTEGER id_id
  auxinput10_interval_m = model_config_rec%auxinput10_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput10_interval_m
SUBROUTINE nl_get_auxinput10_interval_s ( id_id , auxinput10_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput10_interval_s
  INTEGER id_id
  auxinput10_interval_s = model_config_rec%auxinput10_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput10_interval_s
SUBROUTINE nl_get_auxinput10_interval ( id_id , auxinput10_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput10_interval
  INTEGER id_id
  auxinput10_interval = model_config_rec%auxinput10_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput10_interval
SUBROUTINE nl_get_auxinput10_begin_y ( id_id , auxinput10_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput10_begin_y
  INTEGER id_id
  auxinput10_begin_y = model_config_rec%auxinput10_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput10_begin_y
SUBROUTINE nl_get_auxinput10_begin_d ( id_id , auxinput10_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput10_begin_d
  INTEGER id_id
  auxinput10_begin_d = model_config_rec%auxinput10_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput10_begin_d
SUBROUTINE nl_get_auxinput10_begin_h ( id_id , auxinput10_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput10_begin_h
  INTEGER id_id
  auxinput10_begin_h = model_config_rec%auxinput10_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput10_begin_h
SUBROUTINE nl_get_auxinput10_begin_m ( id_id , auxinput10_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput10_begin_m
  INTEGER id_id
  auxinput10_begin_m = model_config_rec%auxinput10_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput10_begin_m
SUBROUTINE nl_get_auxinput10_begin_s ( id_id , auxinput10_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput10_begin_s
  INTEGER id_id
  auxinput10_begin_s = model_config_rec%auxinput10_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput10_begin_s
SUBROUTINE nl_get_auxinput10_begin ( id_id , auxinput10_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput10_begin
  INTEGER id_id
  auxinput10_begin = model_config_rec%auxinput10_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput10_begin
SUBROUTINE nl_get_auxinput10_end_y ( id_id , auxinput10_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput10_end_y
  INTEGER id_id
  auxinput10_end_y = model_config_rec%auxinput10_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput10_end_y
SUBROUTINE nl_get_auxinput10_end_d ( id_id , auxinput10_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput10_end_d
  INTEGER id_id
  auxinput10_end_d = model_config_rec%auxinput10_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput10_end_d
SUBROUTINE nl_get_auxinput10_end_h ( id_id , auxinput10_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput10_end_h
  INTEGER id_id
  auxinput10_end_h = model_config_rec%auxinput10_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput10_end_h
SUBROUTINE nl_get_auxinput10_end_m ( id_id , auxinput10_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput10_end_m
  INTEGER id_id
  auxinput10_end_m = model_config_rec%auxinput10_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput10_end_m
SUBROUTINE nl_get_auxinput10_end_s ( id_id , auxinput10_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput10_end_s
  INTEGER id_id
  auxinput10_end_s = model_config_rec%auxinput10_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput10_end_s
SUBROUTINE nl_get_auxinput10_end ( id_id , auxinput10_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput10_end
  INTEGER id_id
  auxinput10_end = model_config_rec%auxinput10_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput10_end
SUBROUTINE nl_get_io_form_auxinput10 ( id_id , io_form_auxinput10 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxinput10
  INTEGER id_id
  io_form_auxinput10 = model_config_rec%io_form_auxinput10
  RETURN
END SUBROUTINE nl_get_io_form_auxinput10
SUBROUTINE nl_get_frames_per_auxinput10 ( id_id , frames_per_auxinput10 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxinput10
  INTEGER id_id
  frames_per_auxinput10 = model_config_rec%frames_per_auxinput10(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxinput10
SUBROUTINE nl_get_auxinput11_inname ( id_id , auxinput11_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput11_inname
  INTEGER id_id
  auxinput11_inname = trim(model_config_rec%auxinput11_inname)
  RETURN
END SUBROUTINE nl_get_auxinput11_inname
SUBROUTINE nl_get_auxinput11_outname ( id_id , auxinput11_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput11_outname
  INTEGER id_id
  auxinput11_outname = trim(model_config_rec%auxinput11_outname)
  RETURN
END SUBROUTINE nl_get_auxinput11_outname
SUBROUTINE nl_get_auxinput11_interval_y ( id_id , auxinput11_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput11_interval_y
  INTEGER id_id
  auxinput11_interval_y = model_config_rec%auxinput11_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput11_interval_y
SUBROUTINE nl_get_auxinput11_interval_d ( id_id , auxinput11_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput11_interval_d
  INTEGER id_id
  auxinput11_interval_d = model_config_rec%auxinput11_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput11_interval_d
SUBROUTINE nl_get_auxinput11_interval_h ( id_id , auxinput11_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput11_interval_h
  INTEGER id_id
  auxinput11_interval_h = model_config_rec%auxinput11_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput11_interval_h
SUBROUTINE nl_get_auxinput11_interval_m ( id_id , auxinput11_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput11_interval_m
  INTEGER id_id
  auxinput11_interval_m = model_config_rec%auxinput11_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput11_interval_m
SUBROUTINE nl_get_auxinput11_interval_s ( id_id , auxinput11_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput11_interval_s
  INTEGER id_id
  auxinput11_interval_s = model_config_rec%auxinput11_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput11_interval_s
SUBROUTINE nl_get_auxinput11_interval ( id_id , auxinput11_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput11_interval
  INTEGER id_id
  auxinput11_interval = model_config_rec%auxinput11_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput11_interval
SUBROUTINE nl_get_auxinput11_begin_y ( id_id , auxinput11_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput11_begin_y
  INTEGER id_id
  auxinput11_begin_y = model_config_rec%auxinput11_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput11_begin_y
SUBROUTINE nl_get_auxinput11_begin_d ( id_id , auxinput11_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput11_begin_d
  INTEGER id_id
  auxinput11_begin_d = model_config_rec%auxinput11_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput11_begin_d
SUBROUTINE nl_get_auxinput11_begin_h ( id_id , auxinput11_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput11_begin_h
  INTEGER id_id
  auxinput11_begin_h = model_config_rec%auxinput11_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput11_begin_h
SUBROUTINE nl_get_auxinput11_begin_m ( id_id , auxinput11_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput11_begin_m
  INTEGER id_id
  auxinput11_begin_m = model_config_rec%auxinput11_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput11_begin_m
SUBROUTINE nl_get_auxinput11_begin_s ( id_id , auxinput11_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput11_begin_s
  INTEGER id_id
  auxinput11_begin_s = model_config_rec%auxinput11_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput11_begin_s
SUBROUTINE nl_get_auxinput11_begin ( id_id , auxinput11_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput11_begin
  INTEGER id_id
  auxinput11_begin = model_config_rec%auxinput11_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput11_begin
SUBROUTINE nl_get_auxinput11_end_y ( id_id , auxinput11_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput11_end_y
  INTEGER id_id
  auxinput11_end_y = model_config_rec%auxinput11_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput11_end_y
SUBROUTINE nl_get_auxinput11_end_d ( id_id , auxinput11_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput11_end_d
  INTEGER id_id
  auxinput11_end_d = model_config_rec%auxinput11_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput11_end_d
SUBROUTINE nl_get_auxinput11_end_h ( id_id , auxinput11_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput11_end_h
  INTEGER id_id
  auxinput11_end_h = model_config_rec%auxinput11_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput11_end_h
SUBROUTINE nl_get_auxinput11_end_m ( id_id , auxinput11_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput11_end_m
  INTEGER id_id
  auxinput11_end_m = model_config_rec%auxinput11_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput11_end_m
SUBROUTINE nl_get_auxinput11_end_s ( id_id , auxinput11_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput11_end_s
  INTEGER id_id
  auxinput11_end_s = model_config_rec%auxinput11_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput11_end_s
SUBROUTINE nl_get_auxinput11_end ( id_id , auxinput11_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput11_end
  INTEGER id_id
  auxinput11_end = model_config_rec%auxinput11_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput11_end
SUBROUTINE nl_get_io_form_auxinput11 ( id_id , io_form_auxinput11 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxinput11
  INTEGER id_id
  io_form_auxinput11 = model_config_rec%io_form_auxinput11
  RETURN
END SUBROUTINE nl_get_io_form_auxinput11
SUBROUTINE nl_get_frames_per_auxinput11 ( id_id , frames_per_auxinput11 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxinput11
  INTEGER id_id
  frames_per_auxinput11 = model_config_rec%frames_per_auxinput11(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxinput11
SUBROUTINE nl_get_auxinput12_inname ( id_id , auxinput12_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput12_inname
  INTEGER id_id
  auxinput12_inname = trim(model_config_rec%auxinput12_inname)
  RETURN
END SUBROUTINE nl_get_auxinput12_inname
SUBROUTINE nl_get_auxinput12_outname ( id_id , auxinput12_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput12_outname
  INTEGER id_id
  auxinput12_outname = trim(model_config_rec%auxinput12_outname)
  RETURN
END SUBROUTINE nl_get_auxinput12_outname
SUBROUTINE nl_get_auxinput12_interval_y ( id_id , auxinput12_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput12_interval_y
  INTEGER id_id
  auxinput12_interval_y = model_config_rec%auxinput12_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput12_interval_y
SUBROUTINE nl_get_auxinput12_interval_d ( id_id , auxinput12_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput12_interval_d
  INTEGER id_id
  auxinput12_interval_d = model_config_rec%auxinput12_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput12_interval_d
SUBROUTINE nl_get_auxinput12_interval_h ( id_id , auxinput12_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput12_interval_h
  INTEGER id_id
  auxinput12_interval_h = model_config_rec%auxinput12_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput12_interval_h
SUBROUTINE nl_get_auxinput12_interval_m ( id_id , auxinput12_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput12_interval_m
  INTEGER id_id
  auxinput12_interval_m = model_config_rec%auxinput12_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput12_interval_m
SUBROUTINE nl_get_auxinput12_interval_s ( id_id , auxinput12_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput12_interval_s
  INTEGER id_id
  auxinput12_interval_s = model_config_rec%auxinput12_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput12_interval_s
SUBROUTINE nl_get_auxinput12_interval ( id_id , auxinput12_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput12_interval
  INTEGER id_id
  auxinput12_interval = model_config_rec%auxinput12_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput12_interval
SUBROUTINE nl_get_auxinput12_begin_y ( id_id , auxinput12_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput12_begin_y
  INTEGER id_id
  auxinput12_begin_y = model_config_rec%auxinput12_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput12_begin_y
SUBROUTINE nl_get_auxinput12_begin_d ( id_id , auxinput12_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput12_begin_d
  INTEGER id_id
  auxinput12_begin_d = model_config_rec%auxinput12_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput12_begin_d
SUBROUTINE nl_get_auxinput12_begin_h ( id_id , auxinput12_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput12_begin_h
  INTEGER id_id
  auxinput12_begin_h = model_config_rec%auxinput12_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput12_begin_h
SUBROUTINE nl_get_auxinput12_begin_m ( id_id , auxinput12_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput12_begin_m
  INTEGER id_id
  auxinput12_begin_m = model_config_rec%auxinput12_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput12_begin_m
SUBROUTINE nl_get_auxinput12_begin_s ( id_id , auxinput12_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput12_begin_s
  INTEGER id_id
  auxinput12_begin_s = model_config_rec%auxinput12_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput12_begin_s
SUBROUTINE nl_get_auxinput12_begin ( id_id , auxinput12_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput12_begin
  INTEGER id_id
  auxinput12_begin = model_config_rec%auxinput12_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput12_begin
SUBROUTINE nl_get_auxinput12_end_y ( id_id , auxinput12_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput12_end_y
  INTEGER id_id
  auxinput12_end_y = model_config_rec%auxinput12_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput12_end_y
SUBROUTINE nl_get_auxinput12_end_d ( id_id , auxinput12_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput12_end_d
  INTEGER id_id
  auxinput12_end_d = model_config_rec%auxinput12_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput12_end_d
SUBROUTINE nl_get_auxinput12_end_h ( id_id , auxinput12_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput12_end_h
  INTEGER id_id
  auxinput12_end_h = model_config_rec%auxinput12_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput12_end_h
SUBROUTINE nl_get_auxinput12_end_m ( id_id , auxinput12_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput12_end_m
  INTEGER id_id
  auxinput12_end_m = model_config_rec%auxinput12_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput12_end_m
SUBROUTINE nl_get_auxinput12_end_s ( id_id , auxinput12_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput12_end_s
  INTEGER id_id
  auxinput12_end_s = model_config_rec%auxinput12_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput12_end_s
SUBROUTINE nl_get_auxinput12_end ( id_id , auxinput12_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput12_end
  INTEGER id_id
  auxinput12_end = model_config_rec%auxinput12_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput12_end
SUBROUTINE nl_get_io_form_auxinput12 ( id_id , io_form_auxinput12 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxinput12
  INTEGER id_id
  io_form_auxinput12 = model_config_rec%io_form_auxinput12
  RETURN
END SUBROUTINE nl_get_io_form_auxinput12
SUBROUTINE nl_get_frames_per_auxinput12 ( id_id , frames_per_auxinput12 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxinput12
  INTEGER id_id
  frames_per_auxinput12 = model_config_rec%frames_per_auxinput12(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxinput12
SUBROUTINE nl_get_auxinput13_inname ( id_id , auxinput13_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput13_inname
  INTEGER id_id
  auxinput13_inname = trim(model_config_rec%auxinput13_inname)
  RETURN
END SUBROUTINE nl_get_auxinput13_inname
SUBROUTINE nl_get_auxinput13_outname ( id_id , auxinput13_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput13_outname
  INTEGER id_id
  auxinput13_outname = trim(model_config_rec%auxinput13_outname)
  RETURN
END SUBROUTINE nl_get_auxinput13_outname
SUBROUTINE nl_get_auxinput13_interval_y ( id_id , auxinput13_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput13_interval_y
  INTEGER id_id
  auxinput13_interval_y = model_config_rec%auxinput13_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput13_interval_y
SUBROUTINE nl_get_auxinput13_interval_d ( id_id , auxinput13_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput13_interval_d
  INTEGER id_id
  auxinput13_interval_d = model_config_rec%auxinput13_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput13_interval_d
SUBROUTINE nl_get_auxinput13_interval_h ( id_id , auxinput13_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput13_interval_h
  INTEGER id_id
  auxinput13_interval_h = model_config_rec%auxinput13_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput13_interval_h
SUBROUTINE nl_get_auxinput13_interval_m ( id_id , auxinput13_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput13_interval_m
  INTEGER id_id
  auxinput13_interval_m = model_config_rec%auxinput13_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput13_interval_m
SUBROUTINE nl_get_auxinput13_interval_s ( id_id , auxinput13_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput13_interval_s
  INTEGER id_id
  auxinput13_interval_s = model_config_rec%auxinput13_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput13_interval_s
SUBROUTINE nl_get_auxinput13_interval ( id_id , auxinput13_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput13_interval
  INTEGER id_id
  auxinput13_interval = model_config_rec%auxinput13_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput13_interval
SUBROUTINE nl_get_auxinput13_begin_y ( id_id , auxinput13_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput13_begin_y
  INTEGER id_id
  auxinput13_begin_y = model_config_rec%auxinput13_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput13_begin_y
SUBROUTINE nl_get_auxinput13_begin_d ( id_id , auxinput13_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput13_begin_d
  INTEGER id_id
  auxinput13_begin_d = model_config_rec%auxinput13_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput13_begin_d
SUBROUTINE nl_get_auxinput13_begin_h ( id_id , auxinput13_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput13_begin_h
  INTEGER id_id
  auxinput13_begin_h = model_config_rec%auxinput13_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput13_begin_h
SUBROUTINE nl_get_auxinput13_begin_m ( id_id , auxinput13_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput13_begin_m
  INTEGER id_id
  auxinput13_begin_m = model_config_rec%auxinput13_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput13_begin_m
SUBROUTINE nl_get_auxinput13_begin_s ( id_id , auxinput13_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput13_begin_s
  INTEGER id_id
  auxinput13_begin_s = model_config_rec%auxinput13_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput13_begin_s
SUBROUTINE nl_get_auxinput13_begin ( id_id , auxinput13_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput13_begin
  INTEGER id_id
  auxinput13_begin = model_config_rec%auxinput13_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput13_begin
SUBROUTINE nl_get_auxinput13_end_y ( id_id , auxinput13_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput13_end_y
  INTEGER id_id
  auxinput13_end_y = model_config_rec%auxinput13_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput13_end_y
SUBROUTINE nl_get_auxinput13_end_d ( id_id , auxinput13_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput13_end_d
  INTEGER id_id
  auxinput13_end_d = model_config_rec%auxinput13_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput13_end_d
SUBROUTINE nl_get_auxinput13_end_h ( id_id , auxinput13_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput13_end_h
  INTEGER id_id
  auxinput13_end_h = model_config_rec%auxinput13_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput13_end_h
SUBROUTINE nl_get_auxinput13_end_m ( id_id , auxinput13_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput13_end_m
  INTEGER id_id
  auxinput13_end_m = model_config_rec%auxinput13_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput13_end_m
SUBROUTINE nl_get_auxinput13_end_s ( id_id , auxinput13_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput13_end_s
  INTEGER id_id
  auxinput13_end_s = model_config_rec%auxinput13_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput13_end_s
SUBROUTINE nl_get_auxinput13_end ( id_id , auxinput13_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput13_end
  INTEGER id_id
  auxinput13_end = model_config_rec%auxinput13_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput13_end
SUBROUTINE nl_get_io_form_auxinput13 ( id_id , io_form_auxinput13 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxinput13
  INTEGER id_id
  io_form_auxinput13 = model_config_rec%io_form_auxinput13
  RETURN
END SUBROUTINE nl_get_io_form_auxinput13
SUBROUTINE nl_get_frames_per_auxinput13 ( id_id , frames_per_auxinput13 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxinput13
  INTEGER id_id
  frames_per_auxinput13 = model_config_rec%frames_per_auxinput13(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxinput13
SUBROUTINE nl_get_auxinput14_inname ( id_id , auxinput14_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput14_inname
  INTEGER id_id
  auxinput14_inname = trim(model_config_rec%auxinput14_inname)
  RETURN
END SUBROUTINE nl_get_auxinput14_inname
SUBROUTINE nl_get_auxinput14_outname ( id_id , auxinput14_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput14_outname
  INTEGER id_id
  auxinput14_outname = trim(model_config_rec%auxinput14_outname)
  RETURN
END SUBROUTINE nl_get_auxinput14_outname
SUBROUTINE nl_get_auxinput14_interval_y ( id_id , auxinput14_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput14_interval_y
  INTEGER id_id
  auxinput14_interval_y = model_config_rec%auxinput14_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput14_interval_y
SUBROUTINE nl_get_auxinput14_interval_d ( id_id , auxinput14_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput14_interval_d
  INTEGER id_id
  auxinput14_interval_d = model_config_rec%auxinput14_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput14_interval_d
SUBROUTINE nl_get_auxinput14_interval_h ( id_id , auxinput14_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput14_interval_h
  INTEGER id_id
  auxinput14_interval_h = model_config_rec%auxinput14_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput14_interval_h
SUBROUTINE nl_get_auxinput14_interval_m ( id_id , auxinput14_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput14_interval_m
  INTEGER id_id
  auxinput14_interval_m = model_config_rec%auxinput14_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput14_interval_m
SUBROUTINE nl_get_auxinput14_interval_s ( id_id , auxinput14_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput14_interval_s
  INTEGER id_id
  auxinput14_interval_s = model_config_rec%auxinput14_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput14_interval_s
SUBROUTINE nl_get_auxinput14_interval ( id_id , auxinput14_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput14_interval
  INTEGER id_id
  auxinput14_interval = model_config_rec%auxinput14_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput14_interval
SUBROUTINE nl_get_auxinput14_begin_y ( id_id , auxinput14_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput14_begin_y
  INTEGER id_id
  auxinput14_begin_y = model_config_rec%auxinput14_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput14_begin_y
SUBROUTINE nl_get_auxinput14_begin_d ( id_id , auxinput14_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput14_begin_d
  INTEGER id_id
  auxinput14_begin_d = model_config_rec%auxinput14_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput14_begin_d
SUBROUTINE nl_get_auxinput14_begin_h ( id_id , auxinput14_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput14_begin_h
  INTEGER id_id
  auxinput14_begin_h = model_config_rec%auxinput14_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput14_begin_h
SUBROUTINE nl_get_auxinput14_begin_m ( id_id , auxinput14_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput14_begin_m
  INTEGER id_id
  auxinput14_begin_m = model_config_rec%auxinput14_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput14_begin_m
SUBROUTINE nl_get_auxinput14_begin_s ( id_id , auxinput14_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput14_begin_s
  INTEGER id_id
  auxinput14_begin_s = model_config_rec%auxinput14_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput14_begin_s
SUBROUTINE nl_get_auxinput14_begin ( id_id , auxinput14_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput14_begin
  INTEGER id_id
  auxinput14_begin = model_config_rec%auxinput14_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput14_begin
SUBROUTINE nl_get_auxinput14_end_y ( id_id , auxinput14_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput14_end_y
  INTEGER id_id
  auxinput14_end_y = model_config_rec%auxinput14_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput14_end_y
SUBROUTINE nl_get_auxinput14_end_d ( id_id , auxinput14_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput14_end_d
  INTEGER id_id
  auxinput14_end_d = model_config_rec%auxinput14_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput14_end_d
SUBROUTINE nl_get_auxinput14_end_h ( id_id , auxinput14_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput14_end_h
  INTEGER id_id
  auxinput14_end_h = model_config_rec%auxinput14_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput14_end_h
SUBROUTINE nl_get_auxinput14_end_m ( id_id , auxinput14_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput14_end_m
  INTEGER id_id
  auxinput14_end_m = model_config_rec%auxinput14_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput14_end_m
SUBROUTINE nl_get_auxinput14_end_s ( id_id , auxinput14_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput14_end_s
  INTEGER id_id
  auxinput14_end_s = model_config_rec%auxinput14_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput14_end_s
SUBROUTINE nl_get_auxinput14_end ( id_id , auxinput14_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput14_end
  INTEGER id_id
  auxinput14_end = model_config_rec%auxinput14_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput14_end
SUBROUTINE nl_get_io_form_auxinput14 ( id_id , io_form_auxinput14 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxinput14
  INTEGER id_id
  io_form_auxinput14 = model_config_rec%io_form_auxinput14
  RETURN
END SUBROUTINE nl_get_io_form_auxinput14
SUBROUTINE nl_get_frames_per_auxinput14 ( id_id , frames_per_auxinput14 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxinput14
  INTEGER id_id
  frames_per_auxinput14 = model_config_rec%frames_per_auxinput14(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxinput14
SUBROUTINE nl_get_auxinput15_inname ( id_id , auxinput15_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput15_inname
  INTEGER id_id
  auxinput15_inname = trim(model_config_rec%auxinput15_inname)
  RETURN
END SUBROUTINE nl_get_auxinput15_inname
SUBROUTINE nl_get_auxinput15_outname ( id_id , auxinput15_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput15_outname
  INTEGER id_id
  auxinput15_outname = trim(model_config_rec%auxinput15_outname)
  RETURN
END SUBROUTINE nl_get_auxinput15_outname
SUBROUTINE nl_get_auxinput15_interval_y ( id_id , auxinput15_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput15_interval_y
  INTEGER id_id
  auxinput15_interval_y = model_config_rec%auxinput15_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput15_interval_y
SUBROUTINE nl_get_auxinput15_interval_d ( id_id , auxinput15_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput15_interval_d
  INTEGER id_id
  auxinput15_interval_d = model_config_rec%auxinput15_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput15_interval_d
SUBROUTINE nl_get_auxinput15_interval_h ( id_id , auxinput15_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput15_interval_h
  INTEGER id_id
  auxinput15_interval_h = model_config_rec%auxinput15_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput15_interval_h
SUBROUTINE nl_get_auxinput15_interval_m ( id_id , auxinput15_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput15_interval_m
  INTEGER id_id
  auxinput15_interval_m = model_config_rec%auxinput15_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput15_interval_m
SUBROUTINE nl_get_auxinput15_interval_s ( id_id , auxinput15_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput15_interval_s
  INTEGER id_id
  auxinput15_interval_s = model_config_rec%auxinput15_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput15_interval_s
SUBROUTINE nl_get_auxinput15_interval ( id_id , auxinput15_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput15_interval
  INTEGER id_id
  auxinput15_interval = model_config_rec%auxinput15_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput15_interval
SUBROUTINE nl_get_auxinput15_begin_y ( id_id , auxinput15_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput15_begin_y
  INTEGER id_id
  auxinput15_begin_y = model_config_rec%auxinput15_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput15_begin_y
SUBROUTINE nl_get_auxinput15_begin_d ( id_id , auxinput15_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput15_begin_d
  INTEGER id_id
  auxinput15_begin_d = model_config_rec%auxinput15_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput15_begin_d
SUBROUTINE nl_get_auxinput15_begin_h ( id_id , auxinput15_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput15_begin_h
  INTEGER id_id
  auxinput15_begin_h = model_config_rec%auxinput15_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput15_begin_h
SUBROUTINE nl_get_auxinput15_begin_m ( id_id , auxinput15_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput15_begin_m
  INTEGER id_id
  auxinput15_begin_m = model_config_rec%auxinput15_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput15_begin_m
SUBROUTINE nl_get_auxinput15_begin_s ( id_id , auxinput15_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput15_begin_s
  INTEGER id_id
  auxinput15_begin_s = model_config_rec%auxinput15_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput15_begin_s
SUBROUTINE nl_get_auxinput15_begin ( id_id , auxinput15_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput15_begin
  INTEGER id_id
  auxinput15_begin = model_config_rec%auxinput15_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput15_begin
SUBROUTINE nl_get_auxinput15_end_y ( id_id , auxinput15_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput15_end_y
  INTEGER id_id
  auxinput15_end_y = model_config_rec%auxinput15_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput15_end_y
SUBROUTINE nl_get_auxinput15_end_d ( id_id , auxinput15_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput15_end_d
  INTEGER id_id
  auxinput15_end_d = model_config_rec%auxinput15_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput15_end_d
SUBROUTINE nl_get_auxinput15_end_h ( id_id , auxinput15_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput15_end_h
  INTEGER id_id
  auxinput15_end_h = model_config_rec%auxinput15_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput15_end_h
SUBROUTINE nl_get_auxinput15_end_m ( id_id , auxinput15_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput15_end_m
  INTEGER id_id
  auxinput15_end_m = model_config_rec%auxinput15_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput15_end_m
SUBROUTINE nl_get_auxinput15_end_s ( id_id , auxinput15_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput15_end_s
  INTEGER id_id
  auxinput15_end_s = model_config_rec%auxinput15_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput15_end_s
SUBROUTINE nl_get_auxinput15_end ( id_id , auxinput15_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput15_end
  INTEGER id_id
  auxinput15_end = model_config_rec%auxinput15_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput15_end
SUBROUTINE nl_get_io_form_auxinput15 ( id_id , io_form_auxinput15 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxinput15
  INTEGER id_id
  io_form_auxinput15 = model_config_rec%io_form_auxinput15
  RETURN
END SUBROUTINE nl_get_io_form_auxinput15
SUBROUTINE nl_get_frames_per_auxinput15 ( id_id , frames_per_auxinput15 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxinput15
  INTEGER id_id
  frames_per_auxinput15 = model_config_rec%frames_per_auxinput15(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxinput15
SUBROUTINE nl_get_auxinput16_inname ( id_id , auxinput16_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput16_inname
  INTEGER id_id
  auxinput16_inname = trim(model_config_rec%auxinput16_inname)
  RETURN
END SUBROUTINE nl_get_auxinput16_inname
SUBROUTINE nl_get_auxinput16_outname ( id_id , auxinput16_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput16_outname
  INTEGER id_id
  auxinput16_outname = trim(model_config_rec%auxinput16_outname)
  RETURN
END SUBROUTINE nl_get_auxinput16_outname
SUBROUTINE nl_get_auxinput16_interval_y ( id_id , auxinput16_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput16_interval_y
  INTEGER id_id
  auxinput16_interval_y = model_config_rec%auxinput16_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput16_interval_y
SUBROUTINE nl_get_auxinput16_interval_d ( id_id , auxinput16_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput16_interval_d
  INTEGER id_id
  auxinput16_interval_d = model_config_rec%auxinput16_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput16_interval_d
SUBROUTINE nl_get_auxinput16_interval_h ( id_id , auxinput16_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput16_interval_h
  INTEGER id_id
  auxinput16_interval_h = model_config_rec%auxinput16_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput16_interval_h
SUBROUTINE nl_get_auxinput16_interval_m ( id_id , auxinput16_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput16_interval_m
  INTEGER id_id
  auxinput16_interval_m = model_config_rec%auxinput16_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput16_interval_m
SUBROUTINE nl_get_auxinput16_interval_s ( id_id , auxinput16_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput16_interval_s
  INTEGER id_id
  auxinput16_interval_s = model_config_rec%auxinput16_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput16_interval_s
SUBROUTINE nl_get_auxinput16_interval ( id_id , auxinput16_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput16_interval
  INTEGER id_id
  auxinput16_interval = model_config_rec%auxinput16_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput16_interval
SUBROUTINE nl_get_auxinput16_begin_y ( id_id , auxinput16_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput16_begin_y
  INTEGER id_id
  auxinput16_begin_y = model_config_rec%auxinput16_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput16_begin_y
SUBROUTINE nl_get_auxinput16_begin_d ( id_id , auxinput16_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput16_begin_d
  INTEGER id_id
  auxinput16_begin_d = model_config_rec%auxinput16_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput16_begin_d
SUBROUTINE nl_get_auxinput16_begin_h ( id_id , auxinput16_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput16_begin_h
  INTEGER id_id
  auxinput16_begin_h = model_config_rec%auxinput16_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput16_begin_h
SUBROUTINE nl_get_auxinput16_begin_m ( id_id , auxinput16_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput16_begin_m
  INTEGER id_id
  auxinput16_begin_m = model_config_rec%auxinput16_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput16_begin_m
SUBROUTINE nl_get_auxinput16_begin_s ( id_id , auxinput16_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput16_begin_s
  INTEGER id_id
  auxinput16_begin_s = model_config_rec%auxinput16_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput16_begin_s
SUBROUTINE nl_get_auxinput16_begin ( id_id , auxinput16_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput16_begin
  INTEGER id_id
  auxinput16_begin = model_config_rec%auxinput16_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput16_begin
SUBROUTINE nl_get_auxinput16_end_y ( id_id , auxinput16_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput16_end_y
  INTEGER id_id
  auxinput16_end_y = model_config_rec%auxinput16_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput16_end_y
SUBROUTINE nl_get_auxinput16_end_d ( id_id , auxinput16_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput16_end_d
  INTEGER id_id
  auxinput16_end_d = model_config_rec%auxinput16_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput16_end_d
SUBROUTINE nl_get_auxinput16_end_h ( id_id , auxinput16_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput16_end_h
  INTEGER id_id
  auxinput16_end_h = model_config_rec%auxinput16_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput16_end_h
SUBROUTINE nl_get_auxinput16_end_m ( id_id , auxinput16_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput16_end_m
  INTEGER id_id
  auxinput16_end_m = model_config_rec%auxinput16_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput16_end_m
SUBROUTINE nl_get_auxinput16_end_s ( id_id , auxinput16_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput16_end_s
  INTEGER id_id
  auxinput16_end_s = model_config_rec%auxinput16_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput16_end_s
SUBROUTINE nl_get_auxinput16_end ( id_id , auxinput16_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput16_end
  INTEGER id_id
  auxinput16_end = model_config_rec%auxinput16_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput16_end
SUBROUTINE nl_get_io_form_auxinput16 ( id_id , io_form_auxinput16 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxinput16
  INTEGER id_id
  io_form_auxinput16 = model_config_rec%io_form_auxinput16
  RETURN
END SUBROUTINE nl_get_io_form_auxinput16
SUBROUTINE nl_get_frames_per_auxinput16 ( id_id , frames_per_auxinput16 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxinput16
  INTEGER id_id
  frames_per_auxinput16 = model_config_rec%frames_per_auxinput16(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxinput16
SUBROUTINE nl_get_auxinput17_inname ( id_id , auxinput17_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput17_inname
  INTEGER id_id
  auxinput17_inname = trim(model_config_rec%auxinput17_inname)
  RETURN
END SUBROUTINE nl_get_auxinput17_inname
SUBROUTINE nl_get_auxinput17_outname ( id_id , auxinput17_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput17_outname
  INTEGER id_id
  auxinput17_outname = trim(model_config_rec%auxinput17_outname)
  RETURN
END SUBROUTINE nl_get_auxinput17_outname
SUBROUTINE nl_get_auxinput17_interval_y ( id_id , auxinput17_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput17_interval_y
  INTEGER id_id
  auxinput17_interval_y = model_config_rec%auxinput17_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput17_interval_y
SUBROUTINE nl_get_auxinput17_interval_d ( id_id , auxinput17_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput17_interval_d
  INTEGER id_id
  auxinput17_interval_d = model_config_rec%auxinput17_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput17_interval_d
SUBROUTINE nl_get_auxinput17_interval_h ( id_id , auxinput17_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput17_interval_h
  INTEGER id_id
  auxinput17_interval_h = model_config_rec%auxinput17_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput17_interval_h
SUBROUTINE nl_get_auxinput17_interval_m ( id_id , auxinput17_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput17_interval_m
  INTEGER id_id
  auxinput17_interval_m = model_config_rec%auxinput17_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput17_interval_m
SUBROUTINE nl_get_auxinput17_interval_s ( id_id , auxinput17_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput17_interval_s
  INTEGER id_id
  auxinput17_interval_s = model_config_rec%auxinput17_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput17_interval_s
SUBROUTINE nl_get_auxinput17_interval ( id_id , auxinput17_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput17_interval
  INTEGER id_id
  auxinput17_interval = model_config_rec%auxinput17_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput17_interval
SUBROUTINE nl_get_auxinput17_begin_y ( id_id , auxinput17_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput17_begin_y
  INTEGER id_id
  auxinput17_begin_y = model_config_rec%auxinput17_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput17_begin_y
SUBROUTINE nl_get_auxinput17_begin_d ( id_id , auxinput17_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput17_begin_d
  INTEGER id_id
  auxinput17_begin_d = model_config_rec%auxinput17_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput17_begin_d
SUBROUTINE nl_get_auxinput17_begin_h ( id_id , auxinput17_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput17_begin_h
  INTEGER id_id
  auxinput17_begin_h = model_config_rec%auxinput17_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput17_begin_h
SUBROUTINE nl_get_auxinput17_begin_m ( id_id , auxinput17_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput17_begin_m
  INTEGER id_id
  auxinput17_begin_m = model_config_rec%auxinput17_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput17_begin_m
SUBROUTINE nl_get_auxinput17_begin_s ( id_id , auxinput17_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput17_begin_s
  INTEGER id_id
  auxinput17_begin_s = model_config_rec%auxinput17_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput17_begin_s
SUBROUTINE nl_get_auxinput17_begin ( id_id , auxinput17_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput17_begin
  INTEGER id_id
  auxinput17_begin = model_config_rec%auxinput17_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput17_begin
SUBROUTINE nl_get_auxinput17_end_y ( id_id , auxinput17_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput17_end_y
  INTEGER id_id
  auxinput17_end_y = model_config_rec%auxinput17_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput17_end_y
SUBROUTINE nl_get_auxinput17_end_d ( id_id , auxinput17_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput17_end_d
  INTEGER id_id
  auxinput17_end_d = model_config_rec%auxinput17_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput17_end_d
SUBROUTINE nl_get_auxinput17_end_h ( id_id , auxinput17_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput17_end_h
  INTEGER id_id
  auxinput17_end_h = model_config_rec%auxinput17_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput17_end_h
SUBROUTINE nl_get_auxinput17_end_m ( id_id , auxinput17_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput17_end_m
  INTEGER id_id
  auxinput17_end_m = model_config_rec%auxinput17_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput17_end_m
SUBROUTINE nl_get_auxinput17_end_s ( id_id , auxinput17_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput17_end_s
  INTEGER id_id
  auxinput17_end_s = model_config_rec%auxinput17_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput17_end_s
#endif
#if (NNN == 6)
SUBROUTINE nl_get_auxinput17_end ( id_id , auxinput17_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput17_end
  INTEGER id_id
  auxinput17_end = model_config_rec%auxinput17_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput17_end
SUBROUTINE nl_get_io_form_auxinput17 ( id_id , io_form_auxinput17 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxinput17
  INTEGER id_id
  io_form_auxinput17 = model_config_rec%io_form_auxinput17
  RETURN
END SUBROUTINE nl_get_io_form_auxinput17
SUBROUTINE nl_get_frames_per_auxinput17 ( id_id , frames_per_auxinput17 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxinput17
  INTEGER id_id
  frames_per_auxinput17 = model_config_rec%frames_per_auxinput17(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxinput17
SUBROUTINE nl_get_auxinput18_inname ( id_id , auxinput18_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput18_inname
  INTEGER id_id
  auxinput18_inname = trim(model_config_rec%auxinput18_inname)
  RETURN
END SUBROUTINE nl_get_auxinput18_inname
SUBROUTINE nl_get_auxinput18_outname ( id_id , auxinput18_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput18_outname
  INTEGER id_id
  auxinput18_outname = trim(model_config_rec%auxinput18_outname)
  RETURN
END SUBROUTINE nl_get_auxinput18_outname
SUBROUTINE nl_get_auxinput18_interval_y ( id_id , auxinput18_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput18_interval_y
  INTEGER id_id
  auxinput18_interval_y = model_config_rec%auxinput18_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput18_interval_y
SUBROUTINE nl_get_auxinput18_interval_d ( id_id , auxinput18_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput18_interval_d
  INTEGER id_id
  auxinput18_interval_d = model_config_rec%auxinput18_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput18_interval_d
SUBROUTINE nl_get_auxinput18_interval_h ( id_id , auxinput18_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput18_interval_h
  INTEGER id_id
  auxinput18_interval_h = model_config_rec%auxinput18_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput18_interval_h
SUBROUTINE nl_get_auxinput18_interval_m ( id_id , auxinput18_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput18_interval_m
  INTEGER id_id
  auxinput18_interval_m = model_config_rec%auxinput18_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput18_interval_m
SUBROUTINE nl_get_auxinput18_interval_s ( id_id , auxinput18_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput18_interval_s
  INTEGER id_id
  auxinput18_interval_s = model_config_rec%auxinput18_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput18_interval_s
SUBROUTINE nl_get_auxinput18_interval ( id_id , auxinput18_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput18_interval
  INTEGER id_id
  auxinput18_interval = model_config_rec%auxinput18_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput18_interval
SUBROUTINE nl_get_auxinput18_begin_y ( id_id , auxinput18_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput18_begin_y
  INTEGER id_id
  auxinput18_begin_y = model_config_rec%auxinput18_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput18_begin_y
SUBROUTINE nl_get_auxinput18_begin_d ( id_id , auxinput18_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput18_begin_d
  INTEGER id_id
  auxinput18_begin_d = model_config_rec%auxinput18_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput18_begin_d
SUBROUTINE nl_get_auxinput18_begin_h ( id_id , auxinput18_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput18_begin_h
  INTEGER id_id
  auxinput18_begin_h = model_config_rec%auxinput18_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput18_begin_h
SUBROUTINE nl_get_auxinput18_begin_m ( id_id , auxinput18_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput18_begin_m
  INTEGER id_id
  auxinput18_begin_m = model_config_rec%auxinput18_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput18_begin_m
SUBROUTINE nl_get_auxinput18_begin_s ( id_id , auxinput18_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput18_begin_s
  INTEGER id_id
  auxinput18_begin_s = model_config_rec%auxinput18_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput18_begin_s
SUBROUTINE nl_get_auxinput18_begin ( id_id , auxinput18_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput18_begin
  INTEGER id_id
  auxinput18_begin = model_config_rec%auxinput18_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput18_begin
SUBROUTINE nl_get_auxinput18_end_y ( id_id , auxinput18_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput18_end_y
  INTEGER id_id
  auxinput18_end_y = model_config_rec%auxinput18_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput18_end_y
SUBROUTINE nl_get_auxinput18_end_d ( id_id , auxinput18_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput18_end_d
  INTEGER id_id
  auxinput18_end_d = model_config_rec%auxinput18_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput18_end_d
SUBROUTINE nl_get_auxinput18_end_h ( id_id , auxinput18_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput18_end_h
  INTEGER id_id
  auxinput18_end_h = model_config_rec%auxinput18_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput18_end_h
SUBROUTINE nl_get_auxinput18_end_m ( id_id , auxinput18_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput18_end_m
  INTEGER id_id
  auxinput18_end_m = model_config_rec%auxinput18_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput18_end_m
SUBROUTINE nl_get_auxinput18_end_s ( id_id , auxinput18_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput18_end_s
  INTEGER id_id
  auxinput18_end_s = model_config_rec%auxinput18_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput18_end_s
SUBROUTINE nl_get_auxinput18_end ( id_id , auxinput18_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput18_end
  INTEGER id_id
  auxinput18_end = model_config_rec%auxinput18_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput18_end
SUBROUTINE nl_get_io_form_auxinput18 ( id_id , io_form_auxinput18 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxinput18
  INTEGER id_id
  io_form_auxinput18 = model_config_rec%io_form_auxinput18
  RETURN
END SUBROUTINE nl_get_io_form_auxinput18
SUBROUTINE nl_get_frames_per_auxinput18 ( id_id , frames_per_auxinput18 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxinput18
  INTEGER id_id
  frames_per_auxinput18 = model_config_rec%frames_per_auxinput18(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxinput18
SUBROUTINE nl_get_auxinput19_inname ( id_id , auxinput19_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput19_inname
  INTEGER id_id
  auxinput19_inname = trim(model_config_rec%auxinput19_inname)
  RETURN
END SUBROUTINE nl_get_auxinput19_inname
SUBROUTINE nl_get_auxinput19_outname ( id_id , auxinput19_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput19_outname
  INTEGER id_id
  auxinput19_outname = trim(model_config_rec%auxinput19_outname)
  RETURN
END SUBROUTINE nl_get_auxinput19_outname
SUBROUTINE nl_get_auxinput19_interval_y ( id_id , auxinput19_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput19_interval_y
  INTEGER id_id
  auxinput19_interval_y = model_config_rec%auxinput19_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput19_interval_y
SUBROUTINE nl_get_auxinput19_interval_d ( id_id , auxinput19_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput19_interval_d
  INTEGER id_id
  auxinput19_interval_d = model_config_rec%auxinput19_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput19_interval_d
SUBROUTINE nl_get_auxinput19_interval_h ( id_id , auxinput19_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput19_interval_h
  INTEGER id_id
  auxinput19_interval_h = model_config_rec%auxinput19_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput19_interval_h
SUBROUTINE nl_get_auxinput19_interval_m ( id_id , auxinput19_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput19_interval_m
  INTEGER id_id
  auxinput19_interval_m = model_config_rec%auxinput19_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput19_interval_m
SUBROUTINE nl_get_auxinput19_interval_s ( id_id , auxinput19_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput19_interval_s
  INTEGER id_id
  auxinput19_interval_s = model_config_rec%auxinput19_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput19_interval_s
SUBROUTINE nl_get_auxinput19_interval ( id_id , auxinput19_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput19_interval
  INTEGER id_id
  auxinput19_interval = model_config_rec%auxinput19_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput19_interval
SUBROUTINE nl_get_auxinput19_begin_y ( id_id , auxinput19_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput19_begin_y
  INTEGER id_id
  auxinput19_begin_y = model_config_rec%auxinput19_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput19_begin_y
SUBROUTINE nl_get_auxinput19_begin_d ( id_id , auxinput19_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput19_begin_d
  INTEGER id_id
  auxinput19_begin_d = model_config_rec%auxinput19_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput19_begin_d
SUBROUTINE nl_get_auxinput19_begin_h ( id_id , auxinput19_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput19_begin_h
  INTEGER id_id
  auxinput19_begin_h = model_config_rec%auxinput19_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput19_begin_h
SUBROUTINE nl_get_auxinput19_begin_m ( id_id , auxinput19_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput19_begin_m
  INTEGER id_id
  auxinput19_begin_m = model_config_rec%auxinput19_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput19_begin_m
SUBROUTINE nl_get_auxinput19_begin_s ( id_id , auxinput19_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput19_begin_s
  INTEGER id_id
  auxinput19_begin_s = model_config_rec%auxinput19_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput19_begin_s
SUBROUTINE nl_get_auxinput19_begin ( id_id , auxinput19_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput19_begin
  INTEGER id_id
  auxinput19_begin = model_config_rec%auxinput19_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput19_begin
SUBROUTINE nl_get_auxinput19_end_y ( id_id , auxinput19_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput19_end_y
  INTEGER id_id
  auxinput19_end_y = model_config_rec%auxinput19_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput19_end_y
SUBROUTINE nl_get_auxinput19_end_d ( id_id , auxinput19_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput19_end_d
  INTEGER id_id
  auxinput19_end_d = model_config_rec%auxinput19_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput19_end_d
SUBROUTINE nl_get_auxinput19_end_h ( id_id , auxinput19_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput19_end_h
  INTEGER id_id
  auxinput19_end_h = model_config_rec%auxinput19_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput19_end_h
SUBROUTINE nl_get_auxinput19_end_m ( id_id , auxinput19_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput19_end_m
  INTEGER id_id
  auxinput19_end_m = model_config_rec%auxinput19_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput19_end_m
SUBROUTINE nl_get_auxinput19_end_s ( id_id , auxinput19_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput19_end_s
  INTEGER id_id
  auxinput19_end_s = model_config_rec%auxinput19_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput19_end_s
SUBROUTINE nl_get_auxinput19_end ( id_id , auxinput19_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput19_end
  INTEGER id_id
  auxinput19_end = model_config_rec%auxinput19_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput19_end
SUBROUTINE nl_get_io_form_auxinput19 ( id_id , io_form_auxinput19 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxinput19
  INTEGER id_id
  io_form_auxinput19 = model_config_rec%io_form_auxinput19
  RETURN
END SUBROUTINE nl_get_io_form_auxinput19
SUBROUTINE nl_get_frames_per_auxinput19 ( id_id , frames_per_auxinput19 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxinput19
  INTEGER id_id
  frames_per_auxinput19 = model_config_rec%frames_per_auxinput19(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxinput19
SUBROUTINE nl_get_auxinput20_inname ( id_id , auxinput20_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput20_inname
  INTEGER id_id
  auxinput20_inname = trim(model_config_rec%auxinput20_inname)
  RETURN
END SUBROUTINE nl_get_auxinput20_inname
SUBROUTINE nl_get_auxinput20_outname ( id_id , auxinput20_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput20_outname
  INTEGER id_id
  auxinput20_outname = trim(model_config_rec%auxinput20_outname)
  RETURN
END SUBROUTINE nl_get_auxinput20_outname
SUBROUTINE nl_get_auxinput20_interval_y ( id_id , auxinput20_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput20_interval_y
  INTEGER id_id
  auxinput20_interval_y = model_config_rec%auxinput20_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput20_interval_y
SUBROUTINE nl_get_auxinput20_interval_d ( id_id , auxinput20_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput20_interval_d
  INTEGER id_id
  auxinput20_interval_d = model_config_rec%auxinput20_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput20_interval_d
SUBROUTINE nl_get_auxinput20_interval_h ( id_id , auxinput20_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput20_interval_h
  INTEGER id_id
  auxinput20_interval_h = model_config_rec%auxinput20_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput20_interval_h
SUBROUTINE nl_get_auxinput20_interval_m ( id_id , auxinput20_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput20_interval_m
  INTEGER id_id
  auxinput20_interval_m = model_config_rec%auxinput20_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput20_interval_m
SUBROUTINE nl_get_auxinput20_interval_s ( id_id , auxinput20_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput20_interval_s
  INTEGER id_id
  auxinput20_interval_s = model_config_rec%auxinput20_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput20_interval_s
SUBROUTINE nl_get_auxinput20_interval ( id_id , auxinput20_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput20_interval
  INTEGER id_id
  auxinput20_interval = model_config_rec%auxinput20_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput20_interval
SUBROUTINE nl_get_auxinput20_begin_y ( id_id , auxinput20_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput20_begin_y
  INTEGER id_id
  auxinput20_begin_y = model_config_rec%auxinput20_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput20_begin_y
SUBROUTINE nl_get_auxinput20_begin_d ( id_id , auxinput20_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput20_begin_d
  INTEGER id_id
  auxinput20_begin_d = model_config_rec%auxinput20_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput20_begin_d
SUBROUTINE nl_get_auxinput20_begin_h ( id_id , auxinput20_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput20_begin_h
  INTEGER id_id
  auxinput20_begin_h = model_config_rec%auxinput20_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput20_begin_h
SUBROUTINE nl_get_auxinput20_begin_m ( id_id , auxinput20_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput20_begin_m
  INTEGER id_id
  auxinput20_begin_m = model_config_rec%auxinput20_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput20_begin_m
SUBROUTINE nl_get_auxinput20_begin_s ( id_id , auxinput20_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput20_begin_s
  INTEGER id_id
  auxinput20_begin_s = model_config_rec%auxinput20_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput20_begin_s
SUBROUTINE nl_get_auxinput20_begin ( id_id , auxinput20_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput20_begin
  INTEGER id_id
  auxinput20_begin = model_config_rec%auxinput20_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput20_begin
SUBROUTINE nl_get_auxinput20_end_y ( id_id , auxinput20_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput20_end_y
  INTEGER id_id
  auxinput20_end_y = model_config_rec%auxinput20_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput20_end_y
SUBROUTINE nl_get_auxinput20_end_d ( id_id , auxinput20_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput20_end_d
  INTEGER id_id
  auxinput20_end_d = model_config_rec%auxinput20_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput20_end_d
SUBROUTINE nl_get_auxinput20_end_h ( id_id , auxinput20_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput20_end_h
  INTEGER id_id
  auxinput20_end_h = model_config_rec%auxinput20_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput20_end_h
SUBROUTINE nl_get_auxinput20_end_m ( id_id , auxinput20_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput20_end_m
  INTEGER id_id
  auxinput20_end_m = model_config_rec%auxinput20_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput20_end_m
SUBROUTINE nl_get_auxinput20_end_s ( id_id , auxinput20_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput20_end_s
  INTEGER id_id
  auxinput20_end_s = model_config_rec%auxinput20_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput20_end_s
SUBROUTINE nl_get_auxinput20_end ( id_id , auxinput20_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput20_end
  INTEGER id_id
  auxinput20_end = model_config_rec%auxinput20_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput20_end
SUBROUTINE nl_get_io_form_auxinput20 ( id_id , io_form_auxinput20 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxinput20
  INTEGER id_id
  io_form_auxinput20 = model_config_rec%io_form_auxinput20
  RETURN
END SUBROUTINE nl_get_io_form_auxinput20
SUBROUTINE nl_get_frames_per_auxinput20 ( id_id , frames_per_auxinput20 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxinput20
  INTEGER id_id
  frames_per_auxinput20 = model_config_rec%frames_per_auxinput20(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxinput20
SUBROUTINE nl_get_auxinput21_inname ( id_id , auxinput21_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput21_inname
  INTEGER id_id
  auxinput21_inname = trim(model_config_rec%auxinput21_inname)
  RETURN
END SUBROUTINE nl_get_auxinput21_inname
SUBROUTINE nl_get_auxinput21_outname ( id_id , auxinput21_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput21_outname
  INTEGER id_id
  auxinput21_outname = trim(model_config_rec%auxinput21_outname)
  RETURN
END SUBROUTINE nl_get_auxinput21_outname
SUBROUTINE nl_get_auxinput21_interval_y ( id_id , auxinput21_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput21_interval_y
  INTEGER id_id
  auxinput21_interval_y = model_config_rec%auxinput21_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput21_interval_y
SUBROUTINE nl_get_auxinput21_interval_d ( id_id , auxinput21_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput21_interval_d
  INTEGER id_id
  auxinput21_interval_d = model_config_rec%auxinput21_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput21_interval_d
SUBROUTINE nl_get_auxinput21_interval_h ( id_id , auxinput21_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput21_interval_h
  INTEGER id_id
  auxinput21_interval_h = model_config_rec%auxinput21_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput21_interval_h
SUBROUTINE nl_get_auxinput21_interval_m ( id_id , auxinput21_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput21_interval_m
  INTEGER id_id
  auxinput21_interval_m = model_config_rec%auxinput21_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput21_interval_m
SUBROUTINE nl_get_auxinput21_interval_s ( id_id , auxinput21_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput21_interval_s
  INTEGER id_id
  auxinput21_interval_s = model_config_rec%auxinput21_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput21_interval_s
SUBROUTINE nl_get_auxinput21_interval ( id_id , auxinput21_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput21_interval
  INTEGER id_id
  auxinput21_interval = model_config_rec%auxinput21_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput21_interval
SUBROUTINE nl_get_auxinput21_begin_y ( id_id , auxinput21_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput21_begin_y
  INTEGER id_id
  auxinput21_begin_y = model_config_rec%auxinput21_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput21_begin_y
SUBROUTINE nl_get_auxinput21_begin_d ( id_id , auxinput21_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput21_begin_d
  INTEGER id_id
  auxinput21_begin_d = model_config_rec%auxinput21_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput21_begin_d
SUBROUTINE nl_get_auxinput21_begin_h ( id_id , auxinput21_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput21_begin_h
  INTEGER id_id
  auxinput21_begin_h = model_config_rec%auxinput21_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput21_begin_h
SUBROUTINE nl_get_auxinput21_begin_m ( id_id , auxinput21_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput21_begin_m
  INTEGER id_id
  auxinput21_begin_m = model_config_rec%auxinput21_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput21_begin_m
SUBROUTINE nl_get_auxinput21_begin_s ( id_id , auxinput21_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput21_begin_s
  INTEGER id_id
  auxinput21_begin_s = model_config_rec%auxinput21_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput21_begin_s
SUBROUTINE nl_get_auxinput21_begin ( id_id , auxinput21_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput21_begin
  INTEGER id_id
  auxinput21_begin = model_config_rec%auxinput21_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput21_begin
SUBROUTINE nl_get_auxinput21_end_y ( id_id , auxinput21_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput21_end_y
  INTEGER id_id
  auxinput21_end_y = model_config_rec%auxinput21_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput21_end_y
SUBROUTINE nl_get_auxinput21_end_d ( id_id , auxinput21_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput21_end_d
  INTEGER id_id
  auxinput21_end_d = model_config_rec%auxinput21_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput21_end_d
SUBROUTINE nl_get_auxinput21_end_h ( id_id , auxinput21_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput21_end_h
  INTEGER id_id
  auxinput21_end_h = model_config_rec%auxinput21_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput21_end_h
SUBROUTINE nl_get_auxinput21_end_m ( id_id , auxinput21_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput21_end_m
  INTEGER id_id
  auxinput21_end_m = model_config_rec%auxinput21_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput21_end_m
SUBROUTINE nl_get_auxinput21_end_s ( id_id , auxinput21_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput21_end_s
  INTEGER id_id
  auxinput21_end_s = model_config_rec%auxinput21_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput21_end_s
SUBROUTINE nl_get_auxinput21_end ( id_id , auxinput21_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput21_end
  INTEGER id_id
  auxinput21_end = model_config_rec%auxinput21_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput21_end
SUBROUTINE nl_get_io_form_auxinput21 ( id_id , io_form_auxinput21 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxinput21
  INTEGER id_id
  io_form_auxinput21 = model_config_rec%io_form_auxinput21
  RETURN
END SUBROUTINE nl_get_io_form_auxinput21
SUBROUTINE nl_get_frames_per_auxinput21 ( id_id , frames_per_auxinput21 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxinput21
  INTEGER id_id
  frames_per_auxinput21 = model_config_rec%frames_per_auxinput21(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxinput21
SUBROUTINE nl_get_auxinput22_inname ( id_id , auxinput22_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput22_inname
  INTEGER id_id
  auxinput22_inname = trim(model_config_rec%auxinput22_inname)
  RETURN
END SUBROUTINE nl_get_auxinput22_inname
SUBROUTINE nl_get_auxinput22_outname ( id_id , auxinput22_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput22_outname
  INTEGER id_id
  auxinput22_outname = trim(model_config_rec%auxinput22_outname)
  RETURN
END SUBROUTINE nl_get_auxinput22_outname
SUBROUTINE nl_get_auxinput22_interval_y ( id_id , auxinput22_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput22_interval_y
  INTEGER id_id
  auxinput22_interval_y = model_config_rec%auxinput22_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput22_interval_y
SUBROUTINE nl_get_auxinput22_interval_d ( id_id , auxinput22_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput22_interval_d
  INTEGER id_id
  auxinput22_interval_d = model_config_rec%auxinput22_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput22_interval_d
SUBROUTINE nl_get_auxinput22_interval_h ( id_id , auxinput22_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput22_interval_h
  INTEGER id_id
  auxinput22_interval_h = model_config_rec%auxinput22_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput22_interval_h
SUBROUTINE nl_get_auxinput22_interval_m ( id_id , auxinput22_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput22_interval_m
  INTEGER id_id
  auxinput22_interval_m = model_config_rec%auxinput22_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput22_interval_m
SUBROUTINE nl_get_auxinput22_interval_s ( id_id , auxinput22_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput22_interval_s
  INTEGER id_id
  auxinput22_interval_s = model_config_rec%auxinput22_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput22_interval_s
SUBROUTINE nl_get_auxinput22_interval ( id_id , auxinput22_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput22_interval
  INTEGER id_id
  auxinput22_interval = model_config_rec%auxinput22_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput22_interval
SUBROUTINE nl_get_auxinput22_begin_y ( id_id , auxinput22_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput22_begin_y
  INTEGER id_id
  auxinput22_begin_y = model_config_rec%auxinput22_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput22_begin_y
SUBROUTINE nl_get_auxinput22_begin_d ( id_id , auxinput22_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput22_begin_d
  INTEGER id_id
  auxinput22_begin_d = model_config_rec%auxinput22_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput22_begin_d
SUBROUTINE nl_get_auxinput22_begin_h ( id_id , auxinput22_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput22_begin_h
  INTEGER id_id
  auxinput22_begin_h = model_config_rec%auxinput22_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput22_begin_h
SUBROUTINE nl_get_auxinput22_begin_m ( id_id , auxinput22_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput22_begin_m
  INTEGER id_id
  auxinput22_begin_m = model_config_rec%auxinput22_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput22_begin_m
SUBROUTINE nl_get_auxinput22_begin_s ( id_id , auxinput22_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput22_begin_s
  INTEGER id_id
  auxinput22_begin_s = model_config_rec%auxinput22_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput22_begin_s
SUBROUTINE nl_get_auxinput22_begin ( id_id , auxinput22_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput22_begin
  INTEGER id_id
  auxinput22_begin = model_config_rec%auxinput22_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput22_begin
SUBROUTINE nl_get_auxinput22_end_y ( id_id , auxinput22_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput22_end_y
  INTEGER id_id
  auxinput22_end_y = model_config_rec%auxinput22_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput22_end_y
SUBROUTINE nl_get_auxinput22_end_d ( id_id , auxinput22_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput22_end_d
  INTEGER id_id
  auxinput22_end_d = model_config_rec%auxinput22_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput22_end_d
SUBROUTINE nl_get_auxinput22_end_h ( id_id , auxinput22_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput22_end_h
  INTEGER id_id
  auxinput22_end_h = model_config_rec%auxinput22_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput22_end_h
SUBROUTINE nl_get_auxinput22_end_m ( id_id , auxinput22_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput22_end_m
  INTEGER id_id
  auxinput22_end_m = model_config_rec%auxinput22_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput22_end_m
SUBROUTINE nl_get_auxinput22_end_s ( id_id , auxinput22_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput22_end_s
  INTEGER id_id
  auxinput22_end_s = model_config_rec%auxinput22_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput22_end_s
SUBROUTINE nl_get_auxinput22_end ( id_id , auxinput22_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput22_end
  INTEGER id_id
  auxinput22_end = model_config_rec%auxinput22_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput22_end
SUBROUTINE nl_get_io_form_auxinput22 ( id_id , io_form_auxinput22 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxinput22
  INTEGER id_id
  io_form_auxinput22 = model_config_rec%io_form_auxinput22
  RETURN
END SUBROUTINE nl_get_io_form_auxinput22
SUBROUTINE nl_get_frames_per_auxinput22 ( id_id , frames_per_auxinput22 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxinput22
  INTEGER id_id
  frames_per_auxinput22 = model_config_rec%frames_per_auxinput22(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxinput22
SUBROUTINE nl_get_auxinput23_inname ( id_id , auxinput23_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput23_inname
  INTEGER id_id
  auxinput23_inname = trim(model_config_rec%auxinput23_inname)
  RETURN
END SUBROUTINE nl_get_auxinput23_inname
SUBROUTINE nl_get_auxinput23_outname ( id_id , auxinput23_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput23_outname
  INTEGER id_id
  auxinput23_outname = trim(model_config_rec%auxinput23_outname)
  RETURN
END SUBROUTINE nl_get_auxinput23_outname
SUBROUTINE nl_get_auxinput23_interval_y ( id_id , auxinput23_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput23_interval_y
  INTEGER id_id
  auxinput23_interval_y = model_config_rec%auxinput23_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput23_interval_y
SUBROUTINE nl_get_auxinput23_interval_d ( id_id , auxinput23_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput23_interval_d
  INTEGER id_id
  auxinput23_interval_d = model_config_rec%auxinput23_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput23_interval_d
SUBROUTINE nl_get_auxinput23_interval_h ( id_id , auxinput23_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput23_interval_h
  INTEGER id_id
  auxinput23_interval_h = model_config_rec%auxinput23_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput23_interval_h
SUBROUTINE nl_get_auxinput23_interval_m ( id_id , auxinput23_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput23_interval_m
  INTEGER id_id
  auxinput23_interval_m = model_config_rec%auxinput23_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput23_interval_m
SUBROUTINE nl_get_auxinput23_interval_s ( id_id , auxinput23_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput23_interval_s
  INTEGER id_id
  auxinput23_interval_s = model_config_rec%auxinput23_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput23_interval_s
SUBROUTINE nl_get_auxinput23_interval ( id_id , auxinput23_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput23_interval
  INTEGER id_id
  auxinput23_interval = model_config_rec%auxinput23_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput23_interval
SUBROUTINE nl_get_auxinput23_begin_y ( id_id , auxinput23_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput23_begin_y
  INTEGER id_id
  auxinput23_begin_y = model_config_rec%auxinput23_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput23_begin_y
SUBROUTINE nl_get_auxinput23_begin_d ( id_id , auxinput23_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput23_begin_d
  INTEGER id_id
  auxinput23_begin_d = model_config_rec%auxinput23_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput23_begin_d
SUBROUTINE nl_get_auxinput23_begin_h ( id_id , auxinput23_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput23_begin_h
  INTEGER id_id
  auxinput23_begin_h = model_config_rec%auxinput23_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput23_begin_h
SUBROUTINE nl_get_auxinput23_begin_m ( id_id , auxinput23_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput23_begin_m
  INTEGER id_id
  auxinput23_begin_m = model_config_rec%auxinput23_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput23_begin_m
SUBROUTINE nl_get_auxinput23_begin_s ( id_id , auxinput23_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput23_begin_s
  INTEGER id_id
  auxinput23_begin_s = model_config_rec%auxinput23_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput23_begin_s
SUBROUTINE nl_get_auxinput23_begin ( id_id , auxinput23_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput23_begin
  INTEGER id_id
  auxinput23_begin = model_config_rec%auxinput23_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput23_begin
SUBROUTINE nl_get_auxinput23_end_y ( id_id , auxinput23_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput23_end_y
  INTEGER id_id
  auxinput23_end_y = model_config_rec%auxinput23_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput23_end_y
SUBROUTINE nl_get_auxinput23_end_d ( id_id , auxinput23_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput23_end_d
  INTEGER id_id
  auxinput23_end_d = model_config_rec%auxinput23_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput23_end_d
SUBROUTINE nl_get_auxinput23_end_h ( id_id , auxinput23_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput23_end_h
  INTEGER id_id
  auxinput23_end_h = model_config_rec%auxinput23_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput23_end_h
SUBROUTINE nl_get_auxinput23_end_m ( id_id , auxinput23_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput23_end_m
  INTEGER id_id
  auxinput23_end_m = model_config_rec%auxinput23_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput23_end_m
SUBROUTINE nl_get_auxinput23_end_s ( id_id , auxinput23_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput23_end_s
  INTEGER id_id
  auxinput23_end_s = model_config_rec%auxinput23_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput23_end_s
SUBROUTINE nl_get_auxinput23_end ( id_id , auxinput23_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput23_end
  INTEGER id_id
  auxinput23_end = model_config_rec%auxinput23_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput23_end
SUBROUTINE nl_get_io_form_auxinput23 ( id_id , io_form_auxinput23 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxinput23
  INTEGER id_id
  io_form_auxinput23 = model_config_rec%io_form_auxinput23
  RETURN
END SUBROUTINE nl_get_io_form_auxinput23
SUBROUTINE nl_get_frames_per_auxinput23 ( id_id , frames_per_auxinput23 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxinput23
  INTEGER id_id
  frames_per_auxinput23 = model_config_rec%frames_per_auxinput23(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxinput23
SUBROUTINE nl_get_auxinput24_inname ( id_id , auxinput24_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput24_inname
  INTEGER id_id
  auxinput24_inname = trim(model_config_rec%auxinput24_inname)
  RETURN
END SUBROUTINE nl_get_auxinput24_inname
SUBROUTINE nl_get_auxinput24_outname ( id_id , auxinput24_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: auxinput24_outname
  INTEGER id_id
  auxinput24_outname = trim(model_config_rec%auxinput24_outname)
  RETURN
END SUBROUTINE nl_get_auxinput24_outname
SUBROUTINE nl_get_auxinput24_interval_y ( id_id , auxinput24_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput24_interval_y
  INTEGER id_id
  auxinput24_interval_y = model_config_rec%auxinput24_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput24_interval_y
SUBROUTINE nl_get_auxinput24_interval_d ( id_id , auxinput24_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput24_interval_d
  INTEGER id_id
  auxinput24_interval_d = model_config_rec%auxinput24_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput24_interval_d
SUBROUTINE nl_get_auxinput24_interval_h ( id_id , auxinput24_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput24_interval_h
  INTEGER id_id
  auxinput24_interval_h = model_config_rec%auxinput24_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput24_interval_h
SUBROUTINE nl_get_auxinput24_interval_m ( id_id , auxinput24_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput24_interval_m
  INTEGER id_id
  auxinput24_interval_m = model_config_rec%auxinput24_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput24_interval_m
SUBROUTINE nl_get_auxinput24_interval_s ( id_id , auxinput24_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput24_interval_s
  INTEGER id_id
  auxinput24_interval_s = model_config_rec%auxinput24_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput24_interval_s
SUBROUTINE nl_get_auxinput24_interval ( id_id , auxinput24_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput24_interval
  INTEGER id_id
  auxinput24_interval = model_config_rec%auxinput24_interval(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput24_interval
SUBROUTINE nl_get_auxinput24_begin_y ( id_id , auxinput24_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput24_begin_y
  INTEGER id_id
  auxinput24_begin_y = model_config_rec%auxinput24_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput24_begin_y
SUBROUTINE nl_get_auxinput24_begin_d ( id_id , auxinput24_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput24_begin_d
  INTEGER id_id
  auxinput24_begin_d = model_config_rec%auxinput24_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput24_begin_d
SUBROUTINE nl_get_auxinput24_begin_h ( id_id , auxinput24_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput24_begin_h
  INTEGER id_id
  auxinput24_begin_h = model_config_rec%auxinput24_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput24_begin_h
SUBROUTINE nl_get_auxinput24_begin_m ( id_id , auxinput24_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput24_begin_m
  INTEGER id_id
  auxinput24_begin_m = model_config_rec%auxinput24_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput24_begin_m
SUBROUTINE nl_get_auxinput24_begin_s ( id_id , auxinput24_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput24_begin_s
  INTEGER id_id
  auxinput24_begin_s = model_config_rec%auxinput24_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput24_begin_s
SUBROUTINE nl_get_auxinput24_begin ( id_id , auxinput24_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput24_begin
  INTEGER id_id
  auxinput24_begin = model_config_rec%auxinput24_begin(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput24_begin
SUBROUTINE nl_get_auxinput24_end_y ( id_id , auxinput24_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput24_end_y
  INTEGER id_id
  auxinput24_end_y = model_config_rec%auxinput24_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput24_end_y
SUBROUTINE nl_get_auxinput24_end_d ( id_id , auxinput24_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput24_end_d
  INTEGER id_id
  auxinput24_end_d = model_config_rec%auxinput24_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput24_end_d
SUBROUTINE nl_get_auxinput24_end_h ( id_id , auxinput24_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput24_end_h
  INTEGER id_id
  auxinput24_end_h = model_config_rec%auxinput24_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput24_end_h
SUBROUTINE nl_get_auxinput24_end_m ( id_id , auxinput24_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput24_end_m
  INTEGER id_id
  auxinput24_end_m = model_config_rec%auxinput24_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput24_end_m
SUBROUTINE nl_get_auxinput24_end_s ( id_id , auxinput24_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput24_end_s
  INTEGER id_id
  auxinput24_end_s = model_config_rec%auxinput24_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput24_end_s
SUBROUTINE nl_get_auxinput24_end ( id_id , auxinput24_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: auxinput24_end
  INTEGER id_id
  auxinput24_end = model_config_rec%auxinput24_end(id_id)
  RETURN
END SUBROUTINE nl_get_auxinput24_end
SUBROUTINE nl_get_io_form_auxinput24 ( id_id , io_form_auxinput24 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_auxinput24
  INTEGER id_id
  io_form_auxinput24 = model_config_rec%io_form_auxinput24
  RETURN
END SUBROUTINE nl_get_io_form_auxinput24
SUBROUTINE nl_get_frames_per_auxinput24 ( id_id , frames_per_auxinput24 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_auxinput24
  INTEGER id_id
  frames_per_auxinput24 = model_config_rec%frames_per_auxinput24(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_auxinput24
SUBROUTINE nl_get_history_interval ( id_id , history_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: history_interval
  INTEGER id_id
  history_interval = model_config_rec%history_interval(id_id)
  RETURN
END SUBROUTINE nl_get_history_interval
SUBROUTINE nl_get_frames_per_outfile ( id_id , frames_per_outfile )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: frames_per_outfile
  INTEGER id_id
  frames_per_outfile = model_config_rec%frames_per_outfile(id_id)
  RETURN
END SUBROUTINE nl_get_frames_per_outfile
SUBROUTINE nl_get_restart ( id_id , restart )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: restart
  INTEGER id_id
  restart = model_config_rec%restart
  RETURN
END SUBROUTINE nl_get_restart
SUBROUTINE nl_get_restart_interval ( id_id , restart_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: restart_interval
  INTEGER id_id
  restart_interval = model_config_rec%restart_interval
  RETURN
END SUBROUTINE nl_get_restart_interval
SUBROUTINE nl_get_io_form_input ( id_id , io_form_input )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_input
  INTEGER id_id
  io_form_input = model_config_rec%io_form_input
  RETURN
END SUBROUTINE nl_get_io_form_input
SUBROUTINE nl_get_io_form_history ( id_id , io_form_history )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_history
  INTEGER id_id
  io_form_history = model_config_rec%io_form_history
  RETURN
END SUBROUTINE nl_get_io_form_history
SUBROUTINE nl_get_io_form_restart ( id_id , io_form_restart )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_restart
  INTEGER id_id
  io_form_restart = model_config_rec%io_form_restart
  RETURN
END SUBROUTINE nl_get_io_form_restart
SUBROUTINE nl_get_io_form_boundary ( id_id , io_form_boundary )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_boundary
  INTEGER id_id
  io_form_boundary = model_config_rec%io_form_boundary
  RETURN
END SUBROUTINE nl_get_io_form_boundary
SUBROUTINE nl_get_debug_level ( id_id , debug_level )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: debug_level
  INTEGER id_id
  debug_level = model_config_rec%debug_level
  RETURN
END SUBROUTINE nl_get_debug_level
SUBROUTINE nl_get_self_test_domain ( id_id , self_test_domain )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: self_test_domain
  INTEGER id_id
  self_test_domain = model_config_rec%self_test_domain
  RETURN
END SUBROUTINE nl_get_self_test_domain
SUBROUTINE nl_get_history_outname ( id_id , history_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: history_outname
  INTEGER id_id
  history_outname = trim(model_config_rec%history_outname)
  RETURN
END SUBROUTINE nl_get_history_outname
SUBROUTINE nl_get_history_inname ( id_id , history_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: history_inname
  INTEGER id_id
  history_inname = trim(model_config_rec%history_inname)
  RETURN
END SUBROUTINE nl_get_history_inname
SUBROUTINE nl_get_use_netcdf_classic ( id_id , use_netcdf_classic )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: use_netcdf_classic
  INTEGER id_id
  use_netcdf_classic = model_config_rec%use_netcdf_classic
  RETURN
END SUBROUTINE nl_get_use_netcdf_classic
SUBROUTINE nl_get_history_interval_d ( id_id , history_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: history_interval_d
  INTEGER id_id
  history_interval_d = model_config_rec%history_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_history_interval_d
SUBROUTINE nl_get_history_interval_h ( id_id , history_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: history_interval_h
  INTEGER id_id
  history_interval_h = model_config_rec%history_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_history_interval_h
SUBROUTINE nl_get_history_interval_m ( id_id , history_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: history_interval_m
  INTEGER id_id
  history_interval_m = model_config_rec%history_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_history_interval_m
SUBROUTINE nl_get_history_interval_s ( id_id , history_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: history_interval_s
  INTEGER id_id
  history_interval_s = model_config_rec%history_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_history_interval_s
SUBROUTINE nl_get_inputout_interval_d ( id_id , inputout_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: inputout_interval_d
  INTEGER id_id
  inputout_interval_d = model_config_rec%inputout_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_inputout_interval_d
SUBROUTINE nl_get_inputout_interval_h ( id_id , inputout_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: inputout_interval_h
  INTEGER id_id
  inputout_interval_h = model_config_rec%inputout_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_inputout_interval_h
SUBROUTINE nl_get_inputout_interval_m ( id_id , inputout_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: inputout_interval_m
  INTEGER id_id
  inputout_interval_m = model_config_rec%inputout_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_inputout_interval_m
SUBROUTINE nl_get_inputout_interval_s ( id_id , inputout_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: inputout_interval_s
  INTEGER id_id
  inputout_interval_s = model_config_rec%inputout_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_inputout_interval_s
SUBROUTINE nl_get_inputout_interval ( id_id , inputout_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: inputout_interval
  INTEGER id_id
  inputout_interval = model_config_rec%inputout_interval(id_id)
  RETURN
END SUBROUTINE nl_get_inputout_interval
SUBROUTINE nl_get_restart_interval_d ( id_id , restart_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: restart_interval_d
  INTEGER id_id
  restart_interval_d = model_config_rec%restart_interval_d
  RETURN
END SUBROUTINE nl_get_restart_interval_d
SUBROUTINE nl_get_restart_interval_h ( id_id , restart_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: restart_interval_h
  INTEGER id_id
  restart_interval_h = model_config_rec%restart_interval_h
  RETURN
END SUBROUTINE nl_get_restart_interval_h
SUBROUTINE nl_get_restart_interval_m ( id_id , restart_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: restart_interval_m
  INTEGER id_id
  restart_interval_m = model_config_rec%restart_interval_m
  RETURN
END SUBROUTINE nl_get_restart_interval_m
SUBROUTINE nl_get_restart_interval_s ( id_id , restart_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: restart_interval_s
  INTEGER id_id
  restart_interval_s = model_config_rec%restart_interval_s
  RETURN
END SUBROUTINE nl_get_restart_interval_s
SUBROUTINE nl_get_history_begin_y ( id_id , history_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: history_begin_y
  INTEGER id_id
  history_begin_y = model_config_rec%history_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_history_begin_y
SUBROUTINE nl_get_history_begin_d ( id_id , history_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: history_begin_d
  INTEGER id_id
  history_begin_d = model_config_rec%history_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_history_begin_d
SUBROUTINE nl_get_history_begin_h ( id_id , history_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: history_begin_h
  INTEGER id_id
  history_begin_h = model_config_rec%history_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_history_begin_h
SUBROUTINE nl_get_history_begin_m ( id_id , history_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: history_begin_m
  INTEGER id_id
  history_begin_m = model_config_rec%history_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_history_begin_m
SUBROUTINE nl_get_history_begin_s ( id_id , history_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: history_begin_s
  INTEGER id_id
  history_begin_s = model_config_rec%history_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_history_begin_s
SUBROUTINE nl_get_history_begin ( id_id , history_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: history_begin
  INTEGER id_id
  history_begin = model_config_rec%history_begin(id_id)
  RETURN
END SUBROUTINE nl_get_history_begin
SUBROUTINE nl_get_inputout_begin_y ( id_id , inputout_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: inputout_begin_y
  INTEGER id_id
  inputout_begin_y = model_config_rec%inputout_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_inputout_begin_y
SUBROUTINE nl_get_inputout_begin_d ( id_id , inputout_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: inputout_begin_d
  INTEGER id_id
  inputout_begin_d = model_config_rec%inputout_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_inputout_begin_d
SUBROUTINE nl_get_inputout_begin_h ( id_id , inputout_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: inputout_begin_h
  INTEGER id_id
  inputout_begin_h = model_config_rec%inputout_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_inputout_begin_h
SUBROUTINE nl_get_inputout_begin_m ( id_id , inputout_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: inputout_begin_m
  INTEGER id_id
  inputout_begin_m = model_config_rec%inputout_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_inputout_begin_m
SUBROUTINE nl_get_inputout_begin_s ( id_id , inputout_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: inputout_begin_s
  INTEGER id_id
  inputout_begin_s = model_config_rec%inputout_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_inputout_begin_s
SUBROUTINE nl_get_restart_begin_y ( id_id , restart_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: restart_begin_y
  INTEGER id_id
  restart_begin_y = model_config_rec%restart_begin_y
  RETURN
END SUBROUTINE nl_get_restart_begin_y
SUBROUTINE nl_get_restart_begin_d ( id_id , restart_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: restart_begin_d
  INTEGER id_id
  restart_begin_d = model_config_rec%restart_begin_d
  RETURN
END SUBROUTINE nl_get_restart_begin_d
SUBROUTINE nl_get_restart_begin_h ( id_id , restart_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: restart_begin_h
  INTEGER id_id
  restart_begin_h = model_config_rec%restart_begin_h
  RETURN
END SUBROUTINE nl_get_restart_begin_h
SUBROUTINE nl_get_restart_begin_m ( id_id , restart_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: restart_begin_m
  INTEGER id_id
  restart_begin_m = model_config_rec%restart_begin_m
  RETURN
END SUBROUTINE nl_get_restart_begin_m
SUBROUTINE nl_get_restart_begin_s ( id_id , restart_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: restart_begin_s
  INTEGER id_id
  restart_begin_s = model_config_rec%restart_begin_s
  RETURN
END SUBROUTINE nl_get_restart_begin_s
SUBROUTINE nl_get_restart_begin ( id_id , restart_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: restart_begin
  INTEGER id_id
  restart_begin = model_config_rec%restart_begin
  RETURN
END SUBROUTINE nl_get_restart_begin
SUBROUTINE nl_get_history_end_y ( id_id , history_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: history_end_y
  INTEGER id_id
  history_end_y = model_config_rec%history_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_history_end_y
SUBROUTINE nl_get_history_end_d ( id_id , history_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: history_end_d
  INTEGER id_id
  history_end_d = model_config_rec%history_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_history_end_d
SUBROUTINE nl_get_history_end_h ( id_id , history_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: history_end_h
  INTEGER id_id
  history_end_h = model_config_rec%history_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_history_end_h
SUBROUTINE nl_get_history_end_m ( id_id , history_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: history_end_m
  INTEGER id_id
  history_end_m = model_config_rec%history_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_history_end_m
SUBROUTINE nl_get_history_end_s ( id_id , history_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: history_end_s
  INTEGER id_id
  history_end_s = model_config_rec%history_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_history_end_s
SUBROUTINE nl_get_history_end ( id_id , history_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: history_end
  INTEGER id_id
  history_end = model_config_rec%history_end(id_id)
  RETURN
END SUBROUTINE nl_get_history_end
SUBROUTINE nl_get_inputout_end_y ( id_id , inputout_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: inputout_end_y
  INTEGER id_id
  inputout_end_y = model_config_rec%inputout_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_inputout_end_y
SUBROUTINE nl_get_inputout_end_d ( id_id , inputout_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: inputout_end_d
  INTEGER id_id
  inputout_end_d = model_config_rec%inputout_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_inputout_end_d
SUBROUTINE nl_get_inputout_end_h ( id_id , inputout_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: inputout_end_h
  INTEGER id_id
  inputout_end_h = model_config_rec%inputout_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_inputout_end_h
SUBROUTINE nl_get_inputout_end_m ( id_id , inputout_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: inputout_end_m
  INTEGER id_id
  inputout_end_m = model_config_rec%inputout_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_inputout_end_m
SUBROUTINE nl_get_inputout_end_s ( id_id , inputout_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: inputout_end_s
  INTEGER id_id
  inputout_end_s = model_config_rec%inputout_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_inputout_end_s
SUBROUTINE nl_get_simulation_start_year ( id_id , simulation_start_year )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: simulation_start_year
  INTEGER id_id
  simulation_start_year = model_config_rec%simulation_start_year
  RETURN
END SUBROUTINE nl_get_simulation_start_year
SUBROUTINE nl_get_simulation_start_month ( id_id , simulation_start_month )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: simulation_start_month
  INTEGER id_id
  simulation_start_month = model_config_rec%simulation_start_month
  RETURN
END SUBROUTINE nl_get_simulation_start_month
SUBROUTINE nl_get_simulation_start_day ( id_id , simulation_start_day )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: simulation_start_day
  INTEGER id_id
  simulation_start_day = model_config_rec%simulation_start_day
  RETURN
END SUBROUTINE nl_get_simulation_start_day
SUBROUTINE nl_get_simulation_start_hour ( id_id , simulation_start_hour )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: simulation_start_hour
  INTEGER id_id
  simulation_start_hour = model_config_rec%simulation_start_hour
  RETURN
END SUBROUTINE nl_get_simulation_start_hour
SUBROUTINE nl_get_simulation_start_minute ( id_id , simulation_start_minute )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: simulation_start_minute
  INTEGER id_id
  simulation_start_minute = model_config_rec%simulation_start_minute
  RETURN
END SUBROUTINE nl_get_simulation_start_minute
SUBROUTINE nl_get_simulation_start_second ( id_id , simulation_start_second )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: simulation_start_second
  INTEGER id_id
  simulation_start_second = model_config_rec%simulation_start_second
  RETURN
END SUBROUTINE nl_get_simulation_start_second
SUBROUTINE nl_get_reset_simulation_start ( id_id , reset_simulation_start )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: reset_simulation_start
  INTEGER id_id
  reset_simulation_start = model_config_rec%reset_simulation_start
  RETURN
END SUBROUTINE nl_get_reset_simulation_start
SUBROUTINE nl_get_sr_x ( id_id , sr_x )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: sr_x
  INTEGER id_id
  sr_x = model_config_rec%sr_x(id_id)
  RETURN
END SUBROUTINE nl_get_sr_x
SUBROUTINE nl_get_sr_y ( id_id , sr_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: sr_y
  INTEGER id_id
  sr_y = model_config_rec%sr_y(id_id)
  RETURN
END SUBROUTINE nl_get_sr_y
SUBROUTINE nl_get_sgfdda_inname ( id_id , sgfdda_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: sgfdda_inname
  INTEGER id_id
  sgfdda_inname = trim(model_config_rec%sgfdda_inname)
  RETURN
END SUBROUTINE nl_get_sgfdda_inname
SUBROUTINE nl_get_gfdda_inname ( id_id , gfdda_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: gfdda_inname
  INTEGER id_id
  gfdda_inname = trim(model_config_rec%gfdda_inname)
  RETURN
END SUBROUTINE nl_get_gfdda_inname
SUBROUTINE nl_get_sgfdda_interval_d ( id_id , sgfdda_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: sgfdda_interval_d
  INTEGER id_id
  sgfdda_interval_d = model_config_rec%sgfdda_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_sgfdda_interval_d
SUBROUTINE nl_get_sgfdda_interval_h ( id_id , sgfdda_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: sgfdda_interval_h
  INTEGER id_id
  sgfdda_interval_h = model_config_rec%sgfdda_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_sgfdda_interval_h
SUBROUTINE nl_get_sgfdda_interval_m ( id_id , sgfdda_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: sgfdda_interval_m
  INTEGER id_id
  sgfdda_interval_m = model_config_rec%sgfdda_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_sgfdda_interval_m
SUBROUTINE nl_get_sgfdda_interval_s ( id_id , sgfdda_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: sgfdda_interval_s
  INTEGER id_id
  sgfdda_interval_s = model_config_rec%sgfdda_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_sgfdda_interval_s
SUBROUTINE nl_get_sgfdda_interval_y ( id_id , sgfdda_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: sgfdda_interval_y
  INTEGER id_id
  sgfdda_interval_y = model_config_rec%sgfdda_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_sgfdda_interval_y
SUBROUTINE nl_get_sgfdda_interval ( id_id , sgfdda_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: sgfdda_interval
  INTEGER id_id
  sgfdda_interval = model_config_rec%sgfdda_interval(id_id)
  RETURN
END SUBROUTINE nl_get_sgfdda_interval
SUBROUTINE nl_get_gfdda_interval_d ( id_id , gfdda_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: gfdda_interval_d
  INTEGER id_id
  gfdda_interval_d = model_config_rec%gfdda_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_gfdda_interval_d
SUBROUTINE nl_get_gfdda_interval_h ( id_id , gfdda_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: gfdda_interval_h
  INTEGER id_id
  gfdda_interval_h = model_config_rec%gfdda_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_gfdda_interval_h
SUBROUTINE nl_get_gfdda_interval_m ( id_id , gfdda_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: gfdda_interval_m
  INTEGER id_id
  gfdda_interval_m = model_config_rec%gfdda_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_gfdda_interval_m
SUBROUTINE nl_get_gfdda_interval_s ( id_id , gfdda_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: gfdda_interval_s
  INTEGER id_id
  gfdda_interval_s = model_config_rec%gfdda_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_gfdda_interval_s
SUBROUTINE nl_get_gfdda_interval_y ( id_id , gfdda_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: gfdda_interval_y
  INTEGER id_id
  gfdda_interval_y = model_config_rec%gfdda_interval_y(id_id)
  RETURN
END SUBROUTINE nl_get_gfdda_interval_y
SUBROUTINE nl_get_gfdda_interval ( id_id , gfdda_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: gfdda_interval
  INTEGER id_id
  gfdda_interval = model_config_rec%gfdda_interval(id_id)
  RETURN
END SUBROUTINE nl_get_gfdda_interval
SUBROUTINE nl_get_sgfdda_begin_y ( id_id , sgfdda_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: sgfdda_begin_y
  INTEGER id_id
  sgfdda_begin_y = model_config_rec%sgfdda_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_sgfdda_begin_y
SUBROUTINE nl_get_sgfdda_begin_d ( id_id , sgfdda_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: sgfdda_begin_d
  INTEGER id_id
  sgfdda_begin_d = model_config_rec%sgfdda_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_sgfdda_begin_d
SUBROUTINE nl_get_sgfdda_begin_h ( id_id , sgfdda_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: sgfdda_begin_h
  INTEGER id_id
  sgfdda_begin_h = model_config_rec%sgfdda_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_sgfdda_begin_h
SUBROUTINE nl_get_sgfdda_begin_m ( id_id , sgfdda_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: sgfdda_begin_m
  INTEGER id_id
  sgfdda_begin_m = model_config_rec%sgfdda_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_sgfdda_begin_m
SUBROUTINE nl_get_sgfdda_begin_s ( id_id , sgfdda_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: sgfdda_begin_s
  INTEGER id_id
  sgfdda_begin_s = model_config_rec%sgfdda_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_sgfdda_begin_s
SUBROUTINE nl_get_gfdda_begin_y ( id_id , gfdda_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: gfdda_begin_y
  INTEGER id_id
  gfdda_begin_y = model_config_rec%gfdda_begin_y(id_id)
  RETURN
END SUBROUTINE nl_get_gfdda_begin_y
SUBROUTINE nl_get_gfdda_begin_d ( id_id , gfdda_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: gfdda_begin_d
  INTEGER id_id
  gfdda_begin_d = model_config_rec%gfdda_begin_d(id_id)
  RETURN
END SUBROUTINE nl_get_gfdda_begin_d
SUBROUTINE nl_get_gfdda_begin_h ( id_id , gfdda_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: gfdda_begin_h
  INTEGER id_id
  gfdda_begin_h = model_config_rec%gfdda_begin_h(id_id)
  RETURN
END SUBROUTINE nl_get_gfdda_begin_h
SUBROUTINE nl_get_gfdda_begin_m ( id_id , gfdda_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: gfdda_begin_m
  INTEGER id_id
  gfdda_begin_m = model_config_rec%gfdda_begin_m(id_id)
  RETURN
END SUBROUTINE nl_get_gfdda_begin_m
SUBROUTINE nl_get_gfdda_begin_s ( id_id , gfdda_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: gfdda_begin_s
  INTEGER id_id
  gfdda_begin_s = model_config_rec%gfdda_begin_s(id_id)
  RETURN
END SUBROUTINE nl_get_gfdda_begin_s
SUBROUTINE nl_get_sgfdda_end_y ( id_id , sgfdda_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: sgfdda_end_y
  INTEGER id_id
  sgfdda_end_y = model_config_rec%sgfdda_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_sgfdda_end_y
SUBROUTINE nl_get_sgfdda_end_d ( id_id , sgfdda_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: sgfdda_end_d
  INTEGER id_id
  sgfdda_end_d = model_config_rec%sgfdda_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_sgfdda_end_d
SUBROUTINE nl_get_sgfdda_end_h ( id_id , sgfdda_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: sgfdda_end_h
  INTEGER id_id
  sgfdda_end_h = model_config_rec%sgfdda_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_sgfdda_end_h
SUBROUTINE nl_get_sgfdda_end_m ( id_id , sgfdda_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: sgfdda_end_m
  INTEGER id_id
  sgfdda_end_m = model_config_rec%sgfdda_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_sgfdda_end_m
SUBROUTINE nl_get_sgfdda_end_s ( id_id , sgfdda_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: sgfdda_end_s
  INTEGER id_id
  sgfdda_end_s = model_config_rec%sgfdda_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_sgfdda_end_s
SUBROUTINE nl_get_gfdda_end_y ( id_id , gfdda_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: gfdda_end_y
  INTEGER id_id
  gfdda_end_y = model_config_rec%gfdda_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_gfdda_end_y
SUBROUTINE nl_get_gfdda_end_d ( id_id , gfdda_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: gfdda_end_d
  INTEGER id_id
  gfdda_end_d = model_config_rec%gfdda_end_d(id_id)
  RETURN
END SUBROUTINE nl_get_gfdda_end_d
SUBROUTINE nl_get_gfdda_end_h ( id_id , gfdda_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: gfdda_end_h
  INTEGER id_id
  gfdda_end_h = model_config_rec%gfdda_end_h(id_id)
  RETURN
END SUBROUTINE nl_get_gfdda_end_h
SUBROUTINE nl_get_gfdda_end_m ( id_id , gfdda_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: gfdda_end_m
  INTEGER id_id
  gfdda_end_m = model_config_rec%gfdda_end_m(id_id)
  RETURN
END SUBROUTINE nl_get_gfdda_end_m
SUBROUTINE nl_get_gfdda_end_s ( id_id , gfdda_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: gfdda_end_s
  INTEGER id_id
  gfdda_end_s = model_config_rec%gfdda_end_s(id_id)
  RETURN
END SUBROUTINE nl_get_gfdda_end_s
SUBROUTINE nl_get_io_form_sgfdda ( id_id , io_form_sgfdda )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_sgfdda
  INTEGER id_id
  io_form_sgfdda = model_config_rec%io_form_sgfdda
  RETURN
END SUBROUTINE nl_get_io_form_sgfdda
SUBROUTINE nl_get_io_form_gfdda ( id_id , io_form_gfdda )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: io_form_gfdda
  INTEGER id_id
  io_form_gfdda = model_config_rec%io_form_gfdda
  RETURN
END SUBROUTINE nl_get_io_form_gfdda
SUBROUTINE nl_get_iofields_filename ( id_id , iofields_filename )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(OUT) :: iofields_filename
  INTEGER id_id
  iofields_filename = model_config_rec%iofields_filename(id_id)
  RETURN
END SUBROUTINE nl_get_iofields_filename
SUBROUTINE nl_get_ignore_iofields_warning ( id_id , ignore_iofields_warning )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: ignore_iofields_warning
  INTEGER id_id
  ignore_iofields_warning = model_config_rec%ignore_iofields_warning
  RETURN
END SUBROUTINE nl_get_ignore_iofields_warning
SUBROUTINE nl_get_ncd_nofill ( id_id , ncd_nofill )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: ncd_nofill
  INTEGER id_id
  ncd_nofill = model_config_rec%ncd_nofill
  RETURN
END SUBROUTINE nl_get_ncd_nofill
SUBROUTINE nl_get_ifire ( id_id , ifire )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: ifire
  INTEGER id_id
  ifire = model_config_rec%ifire(id_id)
  RETURN
END SUBROUTINE nl_get_ifire
SUBROUTINE nl_get_fire_boundary_guard ( id_id , fire_boundary_guard )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: fire_boundary_guard
  INTEGER id_id
  fire_boundary_guard = model_config_rec%fire_boundary_guard(id_id)
  RETURN
END SUBROUTINE nl_get_fire_boundary_guard
SUBROUTINE nl_get_fire_num_ignitions ( id_id , fire_num_ignitions )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: fire_num_ignitions
  INTEGER id_id
  fire_num_ignitions = model_config_rec%fire_num_ignitions(id_id)
  RETURN
END SUBROUTINE nl_get_fire_num_ignitions
SUBROUTINE nl_get_fire_ignition_ros1 ( id_id , fire_ignition_ros1 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_ros1
  INTEGER id_id
  fire_ignition_ros1 = model_config_rec%fire_ignition_ros1(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_ros1
#endif
#if (NNN == 7)
SUBROUTINE nl_get_fire_ignition_start_lon1 ( id_id , fire_ignition_start_lon1 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_start_lon1
  INTEGER id_id
  fire_ignition_start_lon1 = model_config_rec%fire_ignition_start_lon1(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_start_lon1
SUBROUTINE nl_get_fire_ignition_start_lat1 ( id_id , fire_ignition_start_lat1 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_start_lat1
  INTEGER id_id
  fire_ignition_start_lat1 = model_config_rec%fire_ignition_start_lat1(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_start_lat1
SUBROUTINE nl_get_fire_ignition_end_lon1 ( id_id , fire_ignition_end_lon1 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_end_lon1
  INTEGER id_id
  fire_ignition_end_lon1 = model_config_rec%fire_ignition_end_lon1(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_end_lon1
SUBROUTINE nl_get_fire_ignition_end_lat1 ( id_id , fire_ignition_end_lat1 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_end_lat1
  INTEGER id_id
  fire_ignition_end_lat1 = model_config_rec%fire_ignition_end_lat1(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_end_lat1
SUBROUTINE nl_get_fire_ignition_radius1 ( id_id , fire_ignition_radius1 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_radius1
  INTEGER id_id
  fire_ignition_radius1 = model_config_rec%fire_ignition_radius1(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_radius1
SUBROUTINE nl_get_fire_ignition_start_time1 ( id_id , fire_ignition_start_time1 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_start_time1
  INTEGER id_id
  fire_ignition_start_time1 = model_config_rec%fire_ignition_start_time1(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_start_time1
SUBROUTINE nl_get_fire_ignition_end_time1 ( id_id , fire_ignition_end_time1 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_end_time1
  INTEGER id_id
  fire_ignition_end_time1 = model_config_rec%fire_ignition_end_time1(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_end_time1
SUBROUTINE nl_get_fire_ignition_ros2 ( id_id , fire_ignition_ros2 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_ros2
  INTEGER id_id
  fire_ignition_ros2 = model_config_rec%fire_ignition_ros2(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_ros2
SUBROUTINE nl_get_fire_ignition_start_lon2 ( id_id , fire_ignition_start_lon2 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_start_lon2
  INTEGER id_id
  fire_ignition_start_lon2 = model_config_rec%fire_ignition_start_lon2(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_start_lon2
SUBROUTINE nl_get_fire_ignition_start_lat2 ( id_id , fire_ignition_start_lat2 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_start_lat2
  INTEGER id_id
  fire_ignition_start_lat2 = model_config_rec%fire_ignition_start_lat2(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_start_lat2
SUBROUTINE nl_get_fire_ignition_end_lon2 ( id_id , fire_ignition_end_lon2 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_end_lon2
  INTEGER id_id
  fire_ignition_end_lon2 = model_config_rec%fire_ignition_end_lon2(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_end_lon2
SUBROUTINE nl_get_fire_ignition_end_lat2 ( id_id , fire_ignition_end_lat2 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_end_lat2
  INTEGER id_id
  fire_ignition_end_lat2 = model_config_rec%fire_ignition_end_lat2(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_end_lat2
SUBROUTINE nl_get_fire_ignition_radius2 ( id_id , fire_ignition_radius2 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_radius2
  INTEGER id_id
  fire_ignition_radius2 = model_config_rec%fire_ignition_radius2(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_radius2
SUBROUTINE nl_get_fire_ignition_start_time2 ( id_id , fire_ignition_start_time2 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_start_time2
  INTEGER id_id
  fire_ignition_start_time2 = model_config_rec%fire_ignition_start_time2(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_start_time2
SUBROUTINE nl_get_fire_ignition_end_time2 ( id_id , fire_ignition_end_time2 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_end_time2
  INTEGER id_id
  fire_ignition_end_time2 = model_config_rec%fire_ignition_end_time2(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_end_time2
SUBROUTINE nl_get_fire_ignition_ros3 ( id_id , fire_ignition_ros3 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_ros3
  INTEGER id_id
  fire_ignition_ros3 = model_config_rec%fire_ignition_ros3(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_ros3
SUBROUTINE nl_get_fire_ignition_start_lon3 ( id_id , fire_ignition_start_lon3 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_start_lon3
  INTEGER id_id
  fire_ignition_start_lon3 = model_config_rec%fire_ignition_start_lon3(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_start_lon3
SUBROUTINE nl_get_fire_ignition_start_lat3 ( id_id , fire_ignition_start_lat3 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_start_lat3
  INTEGER id_id
  fire_ignition_start_lat3 = model_config_rec%fire_ignition_start_lat3(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_start_lat3
SUBROUTINE nl_get_fire_ignition_end_lon3 ( id_id , fire_ignition_end_lon3 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_end_lon3
  INTEGER id_id
  fire_ignition_end_lon3 = model_config_rec%fire_ignition_end_lon3(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_end_lon3
SUBROUTINE nl_get_fire_ignition_end_lat3 ( id_id , fire_ignition_end_lat3 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_end_lat3
  INTEGER id_id
  fire_ignition_end_lat3 = model_config_rec%fire_ignition_end_lat3(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_end_lat3
SUBROUTINE nl_get_fire_ignition_radius3 ( id_id , fire_ignition_radius3 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_radius3
  INTEGER id_id
  fire_ignition_radius3 = model_config_rec%fire_ignition_radius3(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_radius3
SUBROUTINE nl_get_fire_ignition_start_time3 ( id_id , fire_ignition_start_time3 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_start_time3
  INTEGER id_id
  fire_ignition_start_time3 = model_config_rec%fire_ignition_start_time3(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_start_time3
SUBROUTINE nl_get_fire_ignition_end_time3 ( id_id , fire_ignition_end_time3 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_end_time3
  INTEGER id_id
  fire_ignition_end_time3 = model_config_rec%fire_ignition_end_time3(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_end_time3
SUBROUTINE nl_get_fire_ignition_ros4 ( id_id , fire_ignition_ros4 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_ros4
  INTEGER id_id
  fire_ignition_ros4 = model_config_rec%fire_ignition_ros4(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_ros4
SUBROUTINE nl_get_fire_ignition_start_lon4 ( id_id , fire_ignition_start_lon4 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_start_lon4
  INTEGER id_id
  fire_ignition_start_lon4 = model_config_rec%fire_ignition_start_lon4(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_start_lon4
SUBROUTINE nl_get_fire_ignition_start_lat4 ( id_id , fire_ignition_start_lat4 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_start_lat4
  INTEGER id_id
  fire_ignition_start_lat4 = model_config_rec%fire_ignition_start_lat4(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_start_lat4
SUBROUTINE nl_get_fire_ignition_end_lon4 ( id_id , fire_ignition_end_lon4 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_end_lon4
  INTEGER id_id
  fire_ignition_end_lon4 = model_config_rec%fire_ignition_end_lon4(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_end_lon4
SUBROUTINE nl_get_fire_ignition_end_lat4 ( id_id , fire_ignition_end_lat4 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_end_lat4
  INTEGER id_id
  fire_ignition_end_lat4 = model_config_rec%fire_ignition_end_lat4(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_end_lat4
SUBROUTINE nl_get_fire_ignition_radius4 ( id_id , fire_ignition_radius4 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_radius4
  INTEGER id_id
  fire_ignition_radius4 = model_config_rec%fire_ignition_radius4(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_radius4
SUBROUTINE nl_get_fire_ignition_start_time4 ( id_id , fire_ignition_start_time4 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_start_time4
  INTEGER id_id
  fire_ignition_start_time4 = model_config_rec%fire_ignition_start_time4(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_start_time4
SUBROUTINE nl_get_fire_ignition_end_time4 ( id_id , fire_ignition_end_time4 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_end_time4
  INTEGER id_id
  fire_ignition_end_time4 = model_config_rec%fire_ignition_end_time4(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_end_time4
SUBROUTINE nl_get_fire_ignition_ros5 ( id_id , fire_ignition_ros5 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_ros5
  INTEGER id_id
  fire_ignition_ros5 = model_config_rec%fire_ignition_ros5(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_ros5
SUBROUTINE nl_get_fire_ignition_start_lon5 ( id_id , fire_ignition_start_lon5 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_start_lon5
  INTEGER id_id
  fire_ignition_start_lon5 = model_config_rec%fire_ignition_start_lon5(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_start_lon5
SUBROUTINE nl_get_fire_ignition_start_lat5 ( id_id , fire_ignition_start_lat5 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_start_lat5
  INTEGER id_id
  fire_ignition_start_lat5 = model_config_rec%fire_ignition_start_lat5(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_start_lat5
SUBROUTINE nl_get_fire_ignition_end_lon5 ( id_id , fire_ignition_end_lon5 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_end_lon5
  INTEGER id_id
  fire_ignition_end_lon5 = model_config_rec%fire_ignition_end_lon5(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_end_lon5
SUBROUTINE nl_get_fire_ignition_end_lat5 ( id_id , fire_ignition_end_lat5 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_end_lat5
  INTEGER id_id
  fire_ignition_end_lat5 = model_config_rec%fire_ignition_end_lat5(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_end_lat5
SUBROUTINE nl_get_fire_ignition_radius5 ( id_id , fire_ignition_radius5 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_radius5
  INTEGER id_id
  fire_ignition_radius5 = model_config_rec%fire_ignition_radius5(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_radius5
SUBROUTINE nl_get_fire_ignition_start_time5 ( id_id , fire_ignition_start_time5 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_start_time5
  INTEGER id_id
  fire_ignition_start_time5 = model_config_rec%fire_ignition_start_time5(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_start_time5
SUBROUTINE nl_get_fire_ignition_end_time5 ( id_id , fire_ignition_end_time5 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_end_time5
  INTEGER id_id
  fire_ignition_end_time5 = model_config_rec%fire_ignition_end_time5(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_end_time5
SUBROUTINE nl_get_fire_ignition_start_x1 ( id_id , fire_ignition_start_x1 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_start_x1
  INTEGER id_id
  fire_ignition_start_x1 = model_config_rec%fire_ignition_start_x1(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_start_x1
SUBROUTINE nl_get_fire_ignition_start_y1 ( id_id , fire_ignition_start_y1 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_start_y1
  INTEGER id_id
  fire_ignition_start_y1 = model_config_rec%fire_ignition_start_y1(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_start_y1
SUBROUTINE nl_get_fire_ignition_end_x1 ( id_id , fire_ignition_end_x1 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_end_x1
  INTEGER id_id
  fire_ignition_end_x1 = model_config_rec%fire_ignition_end_x1(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_end_x1
SUBROUTINE nl_get_fire_ignition_end_y1 ( id_id , fire_ignition_end_y1 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_end_y1
  INTEGER id_id
  fire_ignition_end_y1 = model_config_rec%fire_ignition_end_y1(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_end_y1
SUBROUTINE nl_get_fire_ignition_start_x2 ( id_id , fire_ignition_start_x2 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_start_x2
  INTEGER id_id
  fire_ignition_start_x2 = model_config_rec%fire_ignition_start_x2(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_start_x2
SUBROUTINE nl_get_fire_ignition_start_y2 ( id_id , fire_ignition_start_y2 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_start_y2
  INTEGER id_id
  fire_ignition_start_y2 = model_config_rec%fire_ignition_start_y2(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_start_y2
SUBROUTINE nl_get_fire_ignition_end_x2 ( id_id , fire_ignition_end_x2 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_end_x2
  INTEGER id_id
  fire_ignition_end_x2 = model_config_rec%fire_ignition_end_x2(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_end_x2
SUBROUTINE nl_get_fire_ignition_end_y2 ( id_id , fire_ignition_end_y2 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_end_y2
  INTEGER id_id
  fire_ignition_end_y2 = model_config_rec%fire_ignition_end_y2(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_end_y2
SUBROUTINE nl_get_fire_ignition_start_x3 ( id_id , fire_ignition_start_x3 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_start_x3
  INTEGER id_id
  fire_ignition_start_x3 = model_config_rec%fire_ignition_start_x3(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_start_x3
SUBROUTINE nl_get_fire_ignition_start_y3 ( id_id , fire_ignition_start_y3 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_start_y3
  INTEGER id_id
  fire_ignition_start_y3 = model_config_rec%fire_ignition_start_y3(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_start_y3
SUBROUTINE nl_get_fire_ignition_end_x3 ( id_id , fire_ignition_end_x3 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_end_x3
  INTEGER id_id
  fire_ignition_end_x3 = model_config_rec%fire_ignition_end_x3(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_end_x3
SUBROUTINE nl_get_fire_ignition_end_y3 ( id_id , fire_ignition_end_y3 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_end_y3
  INTEGER id_id
  fire_ignition_end_y3 = model_config_rec%fire_ignition_end_y3(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_end_y3
SUBROUTINE nl_get_fire_ignition_start_x4 ( id_id , fire_ignition_start_x4 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_start_x4
  INTEGER id_id
  fire_ignition_start_x4 = model_config_rec%fire_ignition_start_x4(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_start_x4
SUBROUTINE nl_get_fire_ignition_start_y4 ( id_id , fire_ignition_start_y4 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_start_y4
  INTEGER id_id
  fire_ignition_start_y4 = model_config_rec%fire_ignition_start_y4(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_start_y4
SUBROUTINE nl_get_fire_ignition_end_x4 ( id_id , fire_ignition_end_x4 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_end_x4
  INTEGER id_id
  fire_ignition_end_x4 = model_config_rec%fire_ignition_end_x4(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_end_x4
SUBROUTINE nl_get_fire_ignition_end_y4 ( id_id , fire_ignition_end_y4 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_end_y4
  INTEGER id_id
  fire_ignition_end_y4 = model_config_rec%fire_ignition_end_y4(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_end_y4
SUBROUTINE nl_get_fire_ignition_start_x5 ( id_id , fire_ignition_start_x5 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_start_x5
  INTEGER id_id
  fire_ignition_start_x5 = model_config_rec%fire_ignition_start_x5(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_start_x5
SUBROUTINE nl_get_fire_ignition_start_y5 ( id_id , fire_ignition_start_y5 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_start_y5
  INTEGER id_id
  fire_ignition_start_y5 = model_config_rec%fire_ignition_start_y5(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_start_y5
SUBROUTINE nl_get_fire_ignition_end_x5 ( id_id , fire_ignition_end_x5 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_end_x5
  INTEGER id_id
  fire_ignition_end_x5 = model_config_rec%fire_ignition_end_x5(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_end_x5
SUBROUTINE nl_get_fire_ignition_end_y5 ( id_id , fire_ignition_end_y5 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ignition_end_y5
  INTEGER id_id
  fire_ignition_end_y5 = model_config_rec%fire_ignition_end_y5(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ignition_end_y5
SUBROUTINE nl_get_fire_lat_init ( id_id , fire_lat_init )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_lat_init
  INTEGER id_id
  fire_lat_init = model_config_rec%fire_lat_init(id_id)
  RETURN
END SUBROUTINE nl_get_fire_lat_init
SUBROUTINE nl_get_fire_lon_init ( id_id , fire_lon_init )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_lon_init
  INTEGER id_id
  fire_lon_init = model_config_rec%fire_lon_init(id_id)
  RETURN
END SUBROUTINE nl_get_fire_lon_init
SUBROUTINE nl_get_fire_ign_time ( id_id , fire_ign_time )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ign_time
  INTEGER id_id
  fire_ign_time = model_config_rec%fire_ign_time(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ign_time
SUBROUTINE nl_get_fire_shape ( id_id , fire_shape )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: fire_shape
  INTEGER id_id
  fire_shape = model_config_rec%fire_shape(id_id)
  RETURN
END SUBROUTINE nl_get_fire_shape
SUBROUTINE nl_get_fire_sprd_mdl ( id_id , fire_sprd_mdl )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: fire_sprd_mdl
  INTEGER id_id
  fire_sprd_mdl = model_config_rec%fire_sprd_mdl(id_id)
  RETURN
END SUBROUTINE nl_get_fire_sprd_mdl
SUBROUTINE nl_get_fire_crwn_hgt ( id_id , fire_crwn_hgt )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_crwn_hgt
  INTEGER id_id
  fire_crwn_hgt = model_config_rec%fire_crwn_hgt(id_id)
  RETURN
END SUBROUTINE nl_get_fire_crwn_hgt
SUBROUTINE nl_get_fire_ext_grnd ( id_id , fire_ext_grnd )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ext_grnd
  INTEGER id_id
  fire_ext_grnd = model_config_rec%fire_ext_grnd(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ext_grnd
SUBROUTINE nl_get_fire_ext_crwn ( id_id , fire_ext_crwn )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_ext_crwn
  INTEGER id_id
  fire_ext_crwn = model_config_rec%fire_ext_crwn(id_id)
  RETURN
END SUBROUTINE nl_get_fire_ext_crwn
SUBROUTINE nl_get_fire_wind_height ( id_id , fire_wind_height )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_wind_height
  INTEGER id_id
  fire_wind_height = model_config_rec%fire_wind_height(id_id)
  RETURN
END SUBROUTINE nl_get_fire_wind_height
SUBROUTINE nl_get_fire_fuel_read ( id_id , fire_fuel_read )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: fire_fuel_read
  INTEGER id_id
  fire_fuel_read = model_config_rec%fire_fuel_read(id_id)
  RETURN
END SUBROUTINE nl_get_fire_fuel_read
SUBROUTINE nl_get_fire_fuel_cat ( id_id , fire_fuel_cat )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: fire_fuel_cat
  INTEGER id_id
  fire_fuel_cat = model_config_rec%fire_fuel_cat(id_id)
  RETURN
END SUBROUTINE nl_get_fire_fuel_cat
SUBROUTINE nl_get_fire_print_msg ( id_id , fire_print_msg )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: fire_print_msg
  INTEGER id_id
  fire_print_msg = model_config_rec%fire_print_msg(id_id)
  RETURN
END SUBROUTINE nl_get_fire_print_msg
SUBROUTINE nl_get_fire_print_file ( id_id , fire_print_file )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: fire_print_file
  INTEGER id_id
  fire_print_file = model_config_rec%fire_print_file(id_id)
  RETURN
END SUBROUTINE nl_get_fire_print_file
SUBROUTINE nl_get_fire_fuel_left_method ( id_id , fire_fuel_left_method )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: fire_fuel_left_method
  INTEGER id_id
  fire_fuel_left_method = model_config_rec%fire_fuel_left_method(id_id)
  RETURN
END SUBROUTINE nl_get_fire_fuel_left_method
SUBROUTINE nl_get_fire_fuel_left_irl ( id_id , fire_fuel_left_irl )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: fire_fuel_left_irl
  INTEGER id_id
  fire_fuel_left_irl = model_config_rec%fire_fuel_left_irl(id_id)
  RETURN
END SUBROUTINE nl_get_fire_fuel_left_irl
SUBROUTINE nl_get_fire_fuel_left_jrl ( id_id , fire_fuel_left_jrl )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: fire_fuel_left_jrl
  INTEGER id_id
  fire_fuel_left_jrl = model_config_rec%fire_fuel_left_jrl(id_id)
  RETURN
END SUBROUTINE nl_get_fire_fuel_left_jrl
SUBROUTINE nl_get_fire_grows_only ( id_id , fire_grows_only )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: fire_grows_only
  INTEGER id_id
  fire_grows_only = model_config_rec%fire_grows_only(id_id)
  RETURN
END SUBROUTINE nl_get_fire_grows_only
SUBROUTINE nl_get_fire_upwinding ( id_id , fire_upwinding )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: fire_upwinding
  INTEGER id_id
  fire_upwinding = model_config_rec%fire_upwinding(id_id)
  RETURN
END SUBROUTINE nl_get_fire_upwinding
SUBROUTINE nl_get_fire_upwind_split ( id_id , fire_upwind_split )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: fire_upwind_split
  INTEGER id_id
  fire_upwind_split = model_config_rec%fire_upwind_split(id_id)
  RETURN
END SUBROUTINE nl_get_fire_upwind_split
SUBROUTINE nl_get_fire_viscosity ( id_id , fire_viscosity )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_viscosity
  INTEGER id_id
  fire_viscosity = model_config_rec%fire_viscosity(id_id)
  RETURN
END SUBROUTINE nl_get_fire_viscosity
SUBROUTINE nl_get_fire_lfn_ext_up ( id_id , fire_lfn_ext_up )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_lfn_ext_up
  INTEGER id_id
  fire_lfn_ext_up = model_config_rec%fire_lfn_ext_up(id_id)
  RETURN
END SUBROUTINE nl_get_fire_lfn_ext_up
SUBROUTINE nl_get_fire_topo_from_atm ( id_id , fire_topo_from_atm )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: fire_topo_from_atm
  INTEGER id_id
  fire_topo_from_atm = model_config_rec%fire_topo_from_atm(id_id)
  RETURN
END SUBROUTINE nl_get_fire_topo_from_atm
SUBROUTINE nl_get_fire_advection ( id_id , fire_advection )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: fire_advection
  INTEGER id_id
  fire_advection = model_config_rec%fire_advection(id_id)
  RETURN
END SUBROUTINE nl_get_fire_advection
SUBROUTINE nl_get_fire_test_steps ( id_id , fire_test_steps )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: fire_test_steps
  INTEGER id_id
  fire_test_steps = model_config_rec%fire_test_steps(id_id)
  RETURN
END SUBROUTINE nl_get_fire_test_steps
SUBROUTINE nl_get_fire_const_time ( id_id , fire_const_time )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_const_time
  INTEGER id_id
  fire_const_time = model_config_rec%fire_const_time(id_id)
  RETURN
END SUBROUTINE nl_get_fire_const_time
SUBROUTINE nl_get_fire_const_grnhfx ( id_id , fire_const_grnhfx )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_const_grnhfx
  INTEGER id_id
  fire_const_grnhfx = model_config_rec%fire_const_grnhfx(id_id)
  RETURN
END SUBROUTINE nl_get_fire_const_grnhfx
SUBROUTINE nl_get_fire_const_grnqfx ( id_id , fire_const_grnqfx )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_const_grnqfx
  INTEGER id_id
  fire_const_grnqfx = model_config_rec%fire_const_grnqfx(id_id)
  RETURN
END SUBROUTINE nl_get_fire_const_grnqfx
SUBROUTINE nl_get_fire_atm_feedback ( id_id , fire_atm_feedback )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_atm_feedback
  INTEGER id_id
  fire_atm_feedback = model_config_rec%fire_atm_feedback(id_id)
  RETURN
END SUBROUTINE nl_get_fire_atm_feedback
SUBROUTINE nl_get_fire_mountain_type ( id_id , fire_mountain_type )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: fire_mountain_type
  INTEGER id_id
  fire_mountain_type = model_config_rec%fire_mountain_type(id_id)
  RETURN
END SUBROUTINE nl_get_fire_mountain_type
SUBROUTINE nl_get_fire_mountain_height ( id_id , fire_mountain_height )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_mountain_height
  INTEGER id_id
  fire_mountain_height = model_config_rec%fire_mountain_height(id_id)
  RETURN
END SUBROUTINE nl_get_fire_mountain_height
SUBROUTINE nl_get_fire_mountain_start_x ( id_id , fire_mountain_start_x )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_mountain_start_x
  INTEGER id_id
  fire_mountain_start_x = model_config_rec%fire_mountain_start_x(id_id)
  RETURN
END SUBROUTINE nl_get_fire_mountain_start_x
SUBROUTINE nl_get_fire_mountain_start_y ( id_id , fire_mountain_start_y )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_mountain_start_y
  INTEGER id_id
  fire_mountain_start_y = model_config_rec%fire_mountain_start_y(id_id)
  RETURN
END SUBROUTINE nl_get_fire_mountain_start_y
SUBROUTINE nl_get_fire_mountain_end_x ( id_id , fire_mountain_end_x )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_mountain_end_x
  INTEGER id_id
  fire_mountain_end_x = model_config_rec%fire_mountain_end_x(id_id)
  RETURN
END SUBROUTINE nl_get_fire_mountain_end_x
SUBROUTINE nl_get_fire_mountain_end_y ( id_id , fire_mountain_end_y )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_mountain_end_y
  INTEGER id_id
  fire_mountain_end_y = model_config_rec%fire_mountain_end_y(id_id)
  RETURN
END SUBROUTINE nl_get_fire_mountain_end_y
SUBROUTINE nl_get_delt_perturbation ( id_id , delt_perturbation )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: delt_perturbation
  INTEGER id_id
  delt_perturbation = model_config_rec%delt_perturbation(id_id)
  RETURN
END SUBROUTINE nl_get_delt_perturbation
SUBROUTINE nl_get_xrad_perturbation ( id_id , xrad_perturbation )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: xrad_perturbation
  INTEGER id_id
  xrad_perturbation = model_config_rec%xrad_perturbation(id_id)
  RETURN
END SUBROUTINE nl_get_xrad_perturbation
SUBROUTINE nl_get_yrad_perturbation ( id_id , yrad_perturbation )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: yrad_perturbation
  INTEGER id_id
  yrad_perturbation = model_config_rec%yrad_perturbation(id_id)
  RETURN
END SUBROUTINE nl_get_yrad_perturbation
SUBROUTINE nl_get_zrad_perturbation ( id_id , zrad_perturbation )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: zrad_perturbation
  INTEGER id_id
  zrad_perturbation = model_config_rec%zrad_perturbation(id_id)
  RETURN
END SUBROUTINE nl_get_zrad_perturbation
SUBROUTINE nl_get_hght_perturbation ( id_id , hght_perturbation )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: hght_perturbation
  INTEGER id_id
  hght_perturbation = model_config_rec%hght_perturbation(id_id)
  RETURN
END SUBROUTINE nl_get_hght_perturbation
SUBROUTINE nl_get_stretch_grd ( id_id , stretch_grd )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: stretch_grd
  INTEGER id_id
  stretch_grd = model_config_rec%stretch_grd(id_id)
  RETURN
END SUBROUTINE nl_get_stretch_grd
SUBROUTINE nl_get_stretch_hyp ( id_id , stretch_hyp )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: stretch_hyp
  INTEGER id_id
  stretch_hyp = model_config_rec%stretch_hyp(id_id)
  RETURN
END SUBROUTINE nl_get_stretch_hyp
SUBROUTINE nl_get_z_grd_scale ( id_id , z_grd_scale )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: z_grd_scale
  INTEGER id_id
  z_grd_scale = model_config_rec%z_grd_scale(id_id)
  RETURN
END SUBROUTINE nl_get_z_grd_scale
SUBROUTINE nl_get_sfc_full_init ( id_id , sfc_full_init )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: sfc_full_init
  INTEGER id_id
  sfc_full_init = model_config_rec%sfc_full_init(id_id)
  RETURN
END SUBROUTINE nl_get_sfc_full_init
SUBROUTINE nl_get_sfc_lu_index ( id_id , sfc_lu_index )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: sfc_lu_index
  INTEGER id_id
  sfc_lu_index = model_config_rec%sfc_lu_index(id_id)
  RETURN
END SUBROUTINE nl_get_sfc_lu_index
SUBROUTINE nl_get_sfc_tsk ( id_id , sfc_tsk )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: sfc_tsk
  INTEGER id_id
  sfc_tsk = model_config_rec%sfc_tsk(id_id)
  RETURN
END SUBROUTINE nl_get_sfc_tsk
SUBROUTINE nl_get_sfc_tmn ( id_id , sfc_tmn )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: sfc_tmn
  INTEGER id_id
  sfc_tmn = model_config_rec%sfc_tmn(id_id)
  RETURN
END SUBROUTINE nl_get_sfc_tmn
SUBROUTINE nl_get_fire_read_lu ( id_id , fire_read_lu )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: fire_read_lu
  INTEGER id_id
  fire_read_lu = model_config_rec%fire_read_lu(id_id)
  RETURN
END SUBROUTINE nl_get_fire_read_lu
SUBROUTINE nl_get_fire_read_tsk ( id_id , fire_read_tsk )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: fire_read_tsk
  INTEGER id_id
  fire_read_tsk = model_config_rec%fire_read_tsk(id_id)
  RETURN
END SUBROUTINE nl_get_fire_read_tsk
SUBROUTINE nl_get_fire_read_tmn ( id_id , fire_read_tmn )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: fire_read_tmn
  INTEGER id_id
  fire_read_tmn = model_config_rec%fire_read_tmn(id_id)
  RETURN
END SUBROUTINE nl_get_fire_read_tmn
SUBROUTINE nl_get_fire_read_atm_ht ( id_id , fire_read_atm_ht )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: fire_read_atm_ht
  INTEGER id_id
  fire_read_atm_ht = model_config_rec%fire_read_atm_ht(id_id)
  RETURN
END SUBROUTINE nl_get_fire_read_atm_ht
SUBROUTINE nl_get_fire_read_fire_ht ( id_id , fire_read_fire_ht )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: fire_read_fire_ht
  INTEGER id_id
  fire_read_fire_ht = model_config_rec%fire_read_fire_ht(id_id)
  RETURN
END SUBROUTINE nl_get_fire_read_fire_ht
SUBROUTINE nl_get_fire_read_atm_grad ( id_id , fire_read_atm_grad )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: fire_read_atm_grad
  INTEGER id_id
  fire_read_atm_grad = model_config_rec%fire_read_atm_grad(id_id)
  RETURN
END SUBROUTINE nl_get_fire_read_atm_grad
SUBROUTINE nl_get_fire_read_fire_grad ( id_id , fire_read_fire_grad )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: fire_read_fire_grad
  INTEGER id_id
  fire_read_fire_grad = model_config_rec%fire_read_fire_grad(id_id)
  RETURN
END SUBROUTINE nl_get_fire_read_fire_grad
SUBROUTINE nl_get_sfc_vegfra ( id_id , sfc_vegfra )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: sfc_vegfra
  INTEGER id_id
  sfc_vegfra = model_config_rec%sfc_vegfra(id_id)
  RETURN
END SUBROUTINE nl_get_sfc_vegfra
SUBROUTINE nl_get_sfc_canwat ( id_id , sfc_canwat )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: sfc_canwat
  INTEGER id_id
  sfc_canwat = model_config_rec%sfc_canwat(id_id)
  RETURN
END SUBROUTINE nl_get_sfc_canwat
SUBROUTINE nl_get_sfc_ivgtyp ( id_id , sfc_ivgtyp )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: sfc_ivgtyp
  INTEGER id_id
  sfc_ivgtyp = model_config_rec%sfc_ivgtyp(id_id)
  RETURN
END SUBROUTINE nl_get_sfc_ivgtyp
SUBROUTINE nl_get_sfc_isltyp ( id_id , sfc_isltyp )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: sfc_isltyp
  INTEGER id_id
  sfc_isltyp = model_config_rec%sfc_isltyp(id_id)
  RETURN
END SUBROUTINE nl_get_sfc_isltyp
SUBROUTINE nl_get_fire_lsm_reinit ( id_id , fire_lsm_reinit )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: fire_lsm_reinit
  INTEGER id_id
  fire_lsm_reinit = model_config_rec%fire_lsm_reinit(id_id)
  RETURN
END SUBROUTINE nl_get_fire_lsm_reinit
SUBROUTINE nl_get_fire_lsm_reinit_iter ( id_id , fire_lsm_reinit_iter )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: fire_lsm_reinit_iter
  INTEGER id_id
  fire_lsm_reinit_iter = model_config_rec%fire_lsm_reinit_iter(id_id)
  RETURN
END SUBROUTINE nl_get_fire_lsm_reinit_iter
SUBROUTINE nl_get_fire_upwinding_reinit ( id_id , fire_upwinding_reinit )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: fire_upwinding_reinit
  INTEGER id_id
  fire_upwinding_reinit = model_config_rec%fire_upwinding_reinit(id_id)
  RETURN
END SUBROUTINE nl_get_fire_upwinding_reinit
SUBROUTINE nl_get_fire_is_real_perim ( id_id , fire_is_real_perim )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: fire_is_real_perim
  INTEGER id_id
  fire_is_real_perim = model_config_rec%fire_is_real_perim(id_id)
  RETURN
END SUBROUTINE nl_get_fire_is_real_perim
SUBROUTINE nl_get_fire_lsm_band_ngp ( id_id , fire_lsm_band_ngp )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: fire_lsm_band_ngp
  INTEGER id_id
  fire_lsm_band_ngp = model_config_rec%fire_lsm_band_ngp(id_id)
  RETURN
END SUBROUTINE nl_get_fire_lsm_band_ngp
SUBROUTINE nl_get_fire_lsm_zcoupling ( id_id , fire_lsm_zcoupling )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: fire_lsm_zcoupling
  INTEGER id_id
  fire_lsm_zcoupling = model_config_rec%fire_lsm_zcoupling(id_id)
  RETURN
END SUBROUTINE nl_get_fire_lsm_zcoupling
SUBROUTINE nl_get_fire_lsm_zcoupling_ref ( id_id , fire_lsm_zcoupling_ref )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_lsm_zcoupling_ref
  INTEGER id_id
  fire_lsm_zcoupling_ref = model_config_rec%fire_lsm_zcoupling_ref(id_id)
  RETURN
END SUBROUTINE nl_get_fire_lsm_zcoupling_ref
SUBROUTINE nl_get_fire_tracer_smoke ( id_id , fire_tracer_smoke )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_tracer_smoke
  INTEGER id_id
  fire_tracer_smoke = model_config_rec%fire_tracer_smoke(id_id)
  RETURN
END SUBROUTINE nl_get_fire_tracer_smoke
SUBROUTINE nl_get_fire_viscosity_bg ( id_id , fire_viscosity_bg )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_viscosity_bg
  INTEGER id_id
  fire_viscosity_bg = model_config_rec%fire_viscosity_bg(id_id)
  RETURN
END SUBROUTINE nl_get_fire_viscosity_bg
SUBROUTINE nl_get_fire_viscosity_band ( id_id , fire_viscosity_band )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_viscosity_band
  INTEGER id_id
  fire_viscosity_band = model_config_rec%fire_viscosity_band(id_id)
  RETURN
END SUBROUTINE nl_get_fire_viscosity_band
SUBROUTINE nl_get_fire_viscosity_ngp ( id_id , fire_viscosity_ngp )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: fire_viscosity_ngp
  INTEGER id_id
  fire_viscosity_ngp = model_config_rec%fire_viscosity_ngp(id_id)
  RETURN
END SUBROUTINE nl_get_fire_viscosity_ngp
SUBROUTINE nl_get_fire_slope_factor ( id_id , fire_slope_factor )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: fire_slope_factor
  INTEGER id_id
  fire_slope_factor = model_config_rec%fire_slope_factor(id_id)
  RETURN
END SUBROUTINE nl_get_fire_slope_factor
SUBROUTINE nl_get_do_avgflx_em ( id_id , do_avgflx_em )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: do_avgflx_em
  INTEGER id_id
  do_avgflx_em = model_config_rec%do_avgflx_em(id_id)
  RETURN
END SUBROUTINE nl_get_do_avgflx_em
SUBROUTINE nl_get_do_avgflx_cugd ( id_id , do_avgflx_cugd )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: do_avgflx_cugd
  INTEGER id_id
  do_avgflx_cugd = model_config_rec%do_avgflx_cugd(id_id)
  RETURN
END SUBROUTINE nl_get_do_avgflx_cugd
SUBROUTINE nl_get_nens ( id_id , nens )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: nens
  INTEGER id_id
  nens = model_config_rec%nens
  RETURN
END SUBROUTINE nl_get_nens
SUBROUTINE nl_get_skebs ( id_id , skebs )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: skebs
  INTEGER id_id
  skebs = model_config_rec%skebs(id_id)
  RETURN
END SUBROUTINE nl_get_skebs
SUBROUTINE nl_get_stoch_force_opt ( id_id , stoch_force_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: stoch_force_opt
  INTEGER id_id
  stoch_force_opt = model_config_rec%stoch_force_opt(id_id)
  RETURN
END SUBROUTINE nl_get_stoch_force_opt
SUBROUTINE nl_get_skebs_vertstruc ( id_id , skebs_vertstruc )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: skebs_vertstruc
  INTEGER id_id
  skebs_vertstruc = model_config_rec%skebs_vertstruc
  RETURN
END SUBROUTINE nl_get_skebs_vertstruc
SUBROUTINE nl_get_stoch_vertstruc_opt ( id_id , stoch_vertstruc_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: stoch_vertstruc_opt
  INTEGER id_id
  stoch_vertstruc_opt = model_config_rec%stoch_vertstruc_opt(id_id)
  RETURN
END SUBROUTINE nl_get_stoch_vertstruc_opt
SUBROUTINE nl_get_tot_backscat_psi ( id_id , tot_backscat_psi )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: tot_backscat_psi
  INTEGER id_id
  tot_backscat_psi = model_config_rec%tot_backscat_psi(id_id)
  RETURN
END SUBROUTINE nl_get_tot_backscat_psi
SUBROUTINE nl_get_tot_backscat_t ( id_id , tot_backscat_t )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: tot_backscat_t
  INTEGER id_id
  tot_backscat_t = model_config_rec%tot_backscat_t(id_id)
  RETURN
END SUBROUTINE nl_get_tot_backscat_t
SUBROUTINE nl_get_ztau_psi ( id_id , ztau_psi )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: ztau_psi
  INTEGER id_id
  ztau_psi = model_config_rec%ztau_psi
  RETURN
END SUBROUTINE nl_get_ztau_psi
SUBROUTINE nl_get_ztau_t ( id_id , ztau_t )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: ztau_t
  INTEGER id_id
  ztau_t = model_config_rec%ztau_t
  RETURN
END SUBROUTINE nl_get_ztau_t
SUBROUTINE nl_get_rexponent_psi ( id_id , rexponent_psi )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: rexponent_psi
  INTEGER id_id
  rexponent_psi = model_config_rec%rexponent_psi
  RETURN
END SUBROUTINE nl_get_rexponent_psi
SUBROUTINE nl_get_rexponent_t ( id_id , rexponent_t )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: rexponent_t
  INTEGER id_id
  rexponent_t = model_config_rec%rexponent_t
  RETURN
END SUBROUTINE nl_get_rexponent_t
SUBROUTINE nl_get_zsigma2_eps ( id_id , zsigma2_eps )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: zsigma2_eps
  INTEGER id_id
  zsigma2_eps = model_config_rec%zsigma2_eps
  RETURN
END SUBROUTINE nl_get_zsigma2_eps
SUBROUTINE nl_get_zsigma2_eta ( id_id , zsigma2_eta )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: zsigma2_eta
  INTEGER id_id
  zsigma2_eta = model_config_rec%zsigma2_eta
  RETURN
END SUBROUTINE nl_get_zsigma2_eta
SUBROUTINE nl_get_kminforc ( id_id , kminforc )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: kminforc
  INTEGER id_id
  kminforc = model_config_rec%kminforc
  RETURN
END SUBROUTINE nl_get_kminforc
SUBROUTINE nl_get_lminforc ( id_id , lminforc )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: lminforc
  INTEGER id_id
  lminforc = model_config_rec%lminforc
  RETURN
END SUBROUTINE nl_get_lminforc
SUBROUTINE nl_get_kminforct ( id_id , kminforct )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: kminforct
  INTEGER id_id
  kminforct = model_config_rec%kminforct
  RETURN
END SUBROUTINE nl_get_kminforct
SUBROUTINE nl_get_lminforct ( id_id , lminforct )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: lminforct
  INTEGER id_id
  lminforct = model_config_rec%lminforct
  RETURN
END SUBROUTINE nl_get_lminforct
SUBROUTINE nl_get_kmaxforc ( id_id , kmaxforc )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: kmaxforc
  INTEGER id_id
  kmaxforc = model_config_rec%kmaxforc
  RETURN
END SUBROUTINE nl_get_kmaxforc
SUBROUTINE nl_get_lmaxforc ( id_id , lmaxforc )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: lmaxforc
  INTEGER id_id
  lmaxforc = model_config_rec%lmaxforc
  RETURN
END SUBROUTINE nl_get_lmaxforc
SUBROUTINE nl_get_kmaxforct ( id_id , kmaxforct )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: kmaxforct
  INTEGER id_id
  kmaxforct = model_config_rec%kmaxforct
  RETURN
END SUBROUTINE nl_get_kmaxforct
SUBROUTINE nl_get_lmaxforct ( id_id , lmaxforct )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: lmaxforct
  INTEGER id_id
  lmaxforct = model_config_rec%lmaxforct
  RETURN
END SUBROUTINE nl_get_lmaxforct
SUBROUTINE nl_get_iseed_skebs ( id_id , iseed_skebs )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: iseed_skebs
  INTEGER id_id
  iseed_skebs = model_config_rec%iseed_skebs
  RETURN
END SUBROUTINE nl_get_iseed_skebs
SUBROUTINE nl_get_kmaxforch ( id_id , kmaxforch )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: kmaxforch
  INTEGER id_id
  kmaxforch = model_config_rec%kmaxforch
  RETURN
END SUBROUTINE nl_get_kmaxforch
SUBROUTINE nl_get_lmaxforch ( id_id , lmaxforch )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: lmaxforch
  INTEGER id_id
  lmaxforch = model_config_rec%lmaxforch
  RETURN
END SUBROUTINE nl_get_lmaxforch
SUBROUTINE nl_get_kmaxforcth ( id_id , kmaxforcth )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: kmaxforcth
  INTEGER id_id
  kmaxforcth = model_config_rec%kmaxforcth
  RETURN
END SUBROUTINE nl_get_kmaxforcth
SUBROUTINE nl_get_lmaxforcth ( id_id , lmaxforcth )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: lmaxforcth
  INTEGER id_id
  lmaxforcth = model_config_rec%lmaxforcth
  RETURN
END SUBROUTINE nl_get_lmaxforcth
SUBROUTINE nl_get_sppt ( id_id , sppt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: sppt
  INTEGER id_id
  sppt = model_config_rec%sppt(id_id)
  RETURN
END SUBROUTINE nl_get_sppt
SUBROUTINE nl_get_gridpt_stddev_sppt ( id_id , gridpt_stddev_sppt )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: gridpt_stddev_sppt
  INTEGER id_id
  gridpt_stddev_sppt = model_config_rec%gridpt_stddev_sppt(id_id)
  RETURN
END SUBROUTINE nl_get_gridpt_stddev_sppt
SUBROUTINE nl_get_stddev_cutoff_sppt ( id_id , stddev_cutoff_sppt )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: stddev_cutoff_sppt
  INTEGER id_id
  stddev_cutoff_sppt = model_config_rec%stddev_cutoff_sppt(id_id)
  RETURN
END SUBROUTINE nl_get_stddev_cutoff_sppt
SUBROUTINE nl_get_lengthscale_sppt ( id_id , lengthscale_sppt )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: lengthscale_sppt
  INTEGER id_id
  lengthscale_sppt = model_config_rec%lengthscale_sppt(id_id)
  RETURN
END SUBROUTINE nl_get_lengthscale_sppt
SUBROUTINE nl_get_timescale_sppt ( id_id , timescale_sppt )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: timescale_sppt
  INTEGER id_id
  timescale_sppt = model_config_rec%timescale_sppt(id_id)
  RETURN
END SUBROUTINE nl_get_timescale_sppt
SUBROUTINE nl_get_sppt_vertstruc ( id_id , sppt_vertstruc )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: sppt_vertstruc
  INTEGER id_id
  sppt_vertstruc = model_config_rec%sppt_vertstruc
  RETURN
END SUBROUTINE nl_get_sppt_vertstruc
SUBROUTINE nl_get_iseed_sppt ( id_id , iseed_sppt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: iseed_sppt
  INTEGER id_id
  iseed_sppt = model_config_rec%iseed_sppt
  RETURN
END SUBROUTINE nl_get_iseed_sppt
SUBROUTINE nl_get_rand_perturb ( id_id , rand_perturb )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: rand_perturb
  INTEGER id_id
  rand_perturb = model_config_rec%rand_perturb(id_id)
  RETURN
END SUBROUTINE nl_get_rand_perturb
SUBROUTINE nl_get_gridpt_stddev_rand_pert ( id_id , gridpt_stddev_rand_pert )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: gridpt_stddev_rand_pert
  INTEGER id_id
  gridpt_stddev_rand_pert = model_config_rec%gridpt_stddev_rand_pert(id_id)
  RETURN
END SUBROUTINE nl_get_gridpt_stddev_rand_pert
SUBROUTINE nl_get_stddev_cutoff_rand_pert ( id_id , stddev_cutoff_rand_pert )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: stddev_cutoff_rand_pert
  INTEGER id_id
  stddev_cutoff_rand_pert = model_config_rec%stddev_cutoff_rand_pert(id_id)
  RETURN
END SUBROUTINE nl_get_stddev_cutoff_rand_pert
SUBROUTINE nl_get_lengthscale_rand_pert ( id_id , lengthscale_rand_pert )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: lengthscale_rand_pert
  INTEGER id_id
  lengthscale_rand_pert = model_config_rec%lengthscale_rand_pert(id_id)
  RETURN
END SUBROUTINE nl_get_lengthscale_rand_pert
SUBROUTINE nl_get_timescale_rand_pert ( id_id , timescale_rand_pert )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: timescale_rand_pert
  INTEGER id_id
  timescale_rand_pert = model_config_rec%timescale_rand_pert(id_id)
  RETURN
END SUBROUTINE nl_get_timescale_rand_pert
SUBROUTINE nl_get_rand_pert_vertstruc ( id_id , rand_pert_vertstruc )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: rand_pert_vertstruc
  INTEGER id_id
  rand_pert_vertstruc = model_config_rec%rand_pert_vertstruc
  RETURN
END SUBROUTINE nl_get_rand_pert_vertstruc
SUBROUTINE nl_get_iseed_rand_pert ( id_id , iseed_rand_pert )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: iseed_rand_pert
  INTEGER id_id
  iseed_rand_pert = model_config_rec%iseed_rand_pert
  RETURN
END SUBROUTINE nl_get_iseed_rand_pert
SUBROUTINE nl_get_spp ( id_id , spp )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: spp
  INTEGER id_id
  spp = model_config_rec%spp(id_id)
  RETURN
END SUBROUTINE nl_get_spp
SUBROUTINE nl_get_hrrr_cycling ( id_id , hrrr_cycling )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(OUT) :: hrrr_cycling
  INTEGER id_id
  hrrr_cycling = model_config_rec%hrrr_cycling
  RETURN
END SUBROUTINE nl_get_hrrr_cycling
SUBROUTINE nl_get_spp_conv ( id_id , spp_conv )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: spp_conv
  INTEGER id_id
  spp_conv = model_config_rec%spp_conv(id_id)
  RETURN
END SUBROUTINE nl_get_spp_conv
SUBROUTINE nl_get_gridpt_stddev_spp_conv ( id_id , gridpt_stddev_spp_conv )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: gridpt_stddev_spp_conv
  INTEGER id_id
  gridpt_stddev_spp_conv = model_config_rec%gridpt_stddev_spp_conv(id_id)
  RETURN
END SUBROUTINE nl_get_gridpt_stddev_spp_conv
SUBROUTINE nl_get_stddev_cutoff_spp_conv ( id_id , stddev_cutoff_spp_conv )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: stddev_cutoff_spp_conv
  INTEGER id_id
  stddev_cutoff_spp_conv = model_config_rec%stddev_cutoff_spp_conv(id_id)
  RETURN
END SUBROUTINE nl_get_stddev_cutoff_spp_conv
SUBROUTINE nl_get_lengthscale_spp_conv ( id_id , lengthscale_spp_conv )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: lengthscale_spp_conv
  INTEGER id_id
  lengthscale_spp_conv = model_config_rec%lengthscale_spp_conv(id_id)
  RETURN
END SUBROUTINE nl_get_lengthscale_spp_conv
SUBROUTINE nl_get_timescale_spp_conv ( id_id , timescale_spp_conv )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: timescale_spp_conv
  INTEGER id_id
  timescale_spp_conv = model_config_rec%timescale_spp_conv(id_id)
  RETURN
END SUBROUTINE nl_get_timescale_spp_conv
SUBROUTINE nl_get_vertstruc_spp_conv ( id_id , vertstruc_spp_conv )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: vertstruc_spp_conv
  INTEGER id_id
  vertstruc_spp_conv = model_config_rec%vertstruc_spp_conv
  RETURN
END SUBROUTINE nl_get_vertstruc_spp_conv
SUBROUTINE nl_get_iseed_spp_conv ( id_id , iseed_spp_conv )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: iseed_spp_conv
  INTEGER id_id
  iseed_spp_conv = model_config_rec%iseed_spp_conv
  RETURN
END SUBROUTINE nl_get_iseed_spp_conv
SUBROUTINE nl_get_spp_pbl ( id_id , spp_pbl )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: spp_pbl
  INTEGER id_id
  spp_pbl = model_config_rec%spp_pbl(id_id)
  RETURN
END SUBROUTINE nl_get_spp_pbl
SUBROUTINE nl_get_gridpt_stddev_spp_pbl ( id_id , gridpt_stddev_spp_pbl )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: gridpt_stddev_spp_pbl
  INTEGER id_id
  gridpt_stddev_spp_pbl = model_config_rec%gridpt_stddev_spp_pbl(id_id)
  RETURN
END SUBROUTINE nl_get_gridpt_stddev_spp_pbl
SUBROUTINE nl_get_stddev_cutoff_spp_pbl ( id_id , stddev_cutoff_spp_pbl )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: stddev_cutoff_spp_pbl
  INTEGER id_id
  stddev_cutoff_spp_pbl = model_config_rec%stddev_cutoff_spp_pbl(id_id)
  RETURN
END SUBROUTINE nl_get_stddev_cutoff_spp_pbl
SUBROUTINE nl_get_lengthscale_spp_pbl ( id_id , lengthscale_spp_pbl )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: lengthscale_spp_pbl
  INTEGER id_id
  lengthscale_spp_pbl = model_config_rec%lengthscale_spp_pbl(id_id)
  RETURN
END SUBROUTINE nl_get_lengthscale_spp_pbl
SUBROUTINE nl_get_timescale_spp_pbl ( id_id , timescale_spp_pbl )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: timescale_spp_pbl
  INTEGER id_id
  timescale_spp_pbl = model_config_rec%timescale_spp_pbl(id_id)
  RETURN
END SUBROUTINE nl_get_timescale_spp_pbl
SUBROUTINE nl_get_vertstruc_spp_pbl ( id_id , vertstruc_spp_pbl )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: vertstruc_spp_pbl
  INTEGER id_id
  vertstruc_spp_pbl = model_config_rec%vertstruc_spp_pbl
  RETURN
END SUBROUTINE nl_get_vertstruc_spp_pbl
SUBROUTINE nl_get_iseed_spp_pbl ( id_id , iseed_spp_pbl )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: iseed_spp_pbl
  INTEGER id_id
  iseed_spp_pbl = model_config_rec%iseed_spp_pbl
  RETURN
END SUBROUTINE nl_get_iseed_spp_pbl
SUBROUTINE nl_get_spp_lsm ( id_id , spp_lsm )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: spp_lsm
  INTEGER id_id
  spp_lsm = model_config_rec%spp_lsm(id_id)
  RETURN
END SUBROUTINE nl_get_spp_lsm
SUBROUTINE nl_get_gridpt_stddev_spp_lsm ( id_id , gridpt_stddev_spp_lsm )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: gridpt_stddev_spp_lsm
  INTEGER id_id
  gridpt_stddev_spp_lsm = model_config_rec%gridpt_stddev_spp_lsm(id_id)
  RETURN
END SUBROUTINE nl_get_gridpt_stddev_spp_lsm
SUBROUTINE nl_get_stddev_cutoff_spp_lsm ( id_id , stddev_cutoff_spp_lsm )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: stddev_cutoff_spp_lsm
  INTEGER id_id
  stddev_cutoff_spp_lsm = model_config_rec%stddev_cutoff_spp_lsm(id_id)
  RETURN
END SUBROUTINE nl_get_stddev_cutoff_spp_lsm
SUBROUTINE nl_get_lengthscale_spp_lsm ( id_id , lengthscale_spp_lsm )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: lengthscale_spp_lsm
  INTEGER id_id
  lengthscale_spp_lsm = model_config_rec%lengthscale_spp_lsm(id_id)
  RETURN
END SUBROUTINE nl_get_lengthscale_spp_lsm
SUBROUTINE nl_get_timescale_spp_lsm ( id_id , timescale_spp_lsm )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: timescale_spp_lsm
  INTEGER id_id
  timescale_spp_lsm = model_config_rec%timescale_spp_lsm(id_id)
  RETURN
END SUBROUTINE nl_get_timescale_spp_lsm
SUBROUTINE nl_get_vertstruc_spp_lsm ( id_id , vertstruc_spp_lsm )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: vertstruc_spp_lsm
  INTEGER id_id
  vertstruc_spp_lsm = model_config_rec%vertstruc_spp_lsm
  RETURN
END SUBROUTINE nl_get_vertstruc_spp_lsm
SUBROUTINE nl_get_iseed_spp_lsm ( id_id , iseed_spp_lsm )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: iseed_spp_lsm
  INTEGER id_id
  iseed_spp_lsm = model_config_rec%iseed_spp_lsm
  RETURN
END SUBROUTINE nl_get_iseed_spp_lsm
SUBROUTINE nl_get_skebs_on ( id_id , skebs_on )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: skebs_on
  INTEGER id_id
  skebs_on = model_config_rec%skebs_on
  RETURN
END SUBROUTINE nl_get_skebs_on
SUBROUTINE nl_get_sppt_on ( id_id , sppt_on )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: sppt_on
  INTEGER id_id
  sppt_on = model_config_rec%sppt_on
  RETURN
END SUBROUTINE nl_get_sppt_on
SUBROUTINE nl_get_spp_on ( id_id , spp_on )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: spp_on
  INTEGER id_id
  spp_on = model_config_rec%spp_on
  RETURN
END SUBROUTINE nl_get_spp_on
SUBROUTINE nl_get_rand_perturb_on ( id_id , rand_perturb_on )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: rand_perturb_on
  INTEGER id_id
  rand_perturb_on = model_config_rec%rand_perturb_on
  RETURN
END SUBROUTINE nl_get_rand_perturb_on
SUBROUTINE nl_get_num_stoch_levels ( id_id , num_stoch_levels )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: num_stoch_levels
  INTEGER id_id
  num_stoch_levels = model_config_rec%num_stoch_levels
  RETURN
END SUBROUTINE nl_get_num_stoch_levels
SUBROUTINE nl_get_sfs_opt ( id_id , sfs_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: sfs_opt
  INTEGER id_id
  sfs_opt = model_config_rec%sfs_opt(id_id)
  RETURN
END SUBROUTINE nl_get_sfs_opt
SUBROUTINE nl_get_m_opt ( id_id , m_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: m_opt
  INTEGER id_id
  m_opt = model_config_rec%m_opt(id_id)
  RETURN
END SUBROUTINE nl_get_m_opt
SUBROUTINE nl_get_lakedepth_default ( id_id , lakedepth_default )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: lakedepth_default
  INTEGER id_id
  lakedepth_default = model_config_rec%lakedepth_default(id_id)
  RETURN
END SUBROUTINE nl_get_lakedepth_default
SUBROUTINE nl_get_lake_min_elev ( id_id , lake_min_elev )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: lake_min_elev
  INTEGER id_id
  lake_min_elev = model_config_rec%lake_min_elev(id_id)
  RETURN
END SUBROUTINE nl_get_lake_min_elev
SUBROUTINE nl_get_use_lakedepth ( id_id , use_lakedepth )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: use_lakedepth
  INTEGER id_id
  use_lakedepth = model_config_rec%use_lakedepth(id_id)
  RETURN
END SUBROUTINE nl_get_use_lakedepth
SUBROUTINE nl_get_p_lev_diags ( id_id , p_lev_diags )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: p_lev_diags
  INTEGER id_id
  p_lev_diags = model_config_rec%p_lev_diags
  RETURN
END SUBROUTINE nl_get_p_lev_diags
SUBROUTINE nl_get_p_lev_diags_dfi ( id_id , p_lev_diags_dfi )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: p_lev_diags_dfi
  INTEGER id_id
  p_lev_diags_dfi = model_config_rec%p_lev_diags_dfi
  RETURN
END SUBROUTINE nl_get_p_lev_diags_dfi
SUBROUTINE nl_get_num_press_levels ( id_id , num_press_levels )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: num_press_levels
  INTEGER id_id
  num_press_levels = model_config_rec%num_press_levels
  RETURN
END SUBROUTINE nl_get_num_press_levels
SUBROUTINE nl_get_press_levels ( id_id , press_levels )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: press_levels
  INTEGER id_id
  press_levels = model_config_rec%press_levels(id_id)
  RETURN
END SUBROUTINE nl_get_press_levels
SUBROUTINE nl_get_use_tot_or_hyd_p ( id_id , use_tot_or_hyd_p )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: use_tot_or_hyd_p
  INTEGER id_id
  use_tot_or_hyd_p = model_config_rec%use_tot_or_hyd_p
  RETURN
END SUBROUTINE nl_get_use_tot_or_hyd_p
SUBROUTINE nl_get_extrap_below_grnd ( id_id , extrap_below_grnd )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: extrap_below_grnd
  INTEGER id_id
  extrap_below_grnd = model_config_rec%extrap_below_grnd
  RETURN
END SUBROUTINE nl_get_extrap_below_grnd
SUBROUTINE nl_get_p_lev_missing ( id_id , p_lev_missing )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: p_lev_missing
  INTEGER id_id
  p_lev_missing = model_config_rec%p_lev_missing
  RETURN
END SUBROUTINE nl_get_p_lev_missing
SUBROUTINE nl_get_p_lev_interval ( id_id , p_lev_interval )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: p_lev_interval
  INTEGER id_id
  p_lev_interval = model_config_rec%p_lev_interval(id_id)
  RETURN
END SUBROUTINE nl_get_p_lev_interval
SUBROUTINE nl_get_z_lev_diags ( id_id , z_lev_diags )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: z_lev_diags
  INTEGER id_id
  z_lev_diags = model_config_rec%z_lev_diags
  RETURN
END SUBROUTINE nl_get_z_lev_diags
SUBROUTINE nl_get_z_lev_diags_dfi ( id_id , z_lev_diags_dfi )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: z_lev_diags_dfi
  INTEGER id_id
  z_lev_diags_dfi = model_config_rec%z_lev_diags_dfi
  RETURN
END SUBROUTINE nl_get_z_lev_diags_dfi
SUBROUTINE nl_get_num_z_levels ( id_id , num_z_levels )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: num_z_levels
  INTEGER id_id
  num_z_levels = model_config_rec%num_z_levels
  RETURN
END SUBROUTINE nl_get_num_z_levels
SUBROUTINE nl_get_z_levels ( id_id , z_levels )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: z_levels
  INTEGER id_id
  z_levels = model_config_rec%z_levels(id_id)
  RETURN
END SUBROUTINE nl_get_z_levels
SUBROUTINE nl_get_z_lev_missing ( id_id , z_lev_missing )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: z_lev_missing
  INTEGER id_id
  z_lev_missing = model_config_rec%z_lev_missing
  RETURN
END SUBROUTINE nl_get_z_lev_missing
SUBROUTINE nl_get_z_lev_interval ( id_id , z_lev_interval )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: z_lev_interval
  INTEGER id_id
  z_lev_interval = model_config_rec%z_lev_interval(id_id)
  RETURN
END SUBROUTINE nl_get_z_lev_interval
SUBROUTINE nl_get_afwa_diag_opt ( id_id , afwa_diag_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: afwa_diag_opt
  INTEGER id_id
  afwa_diag_opt = model_config_rec%afwa_diag_opt(id_id)
  RETURN
END SUBROUTINE nl_get_afwa_diag_opt
SUBROUTINE nl_get_afwa_ptype_opt ( id_id , afwa_ptype_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: afwa_ptype_opt
  INTEGER id_id
  afwa_ptype_opt = model_config_rec%afwa_ptype_opt(id_id)
  RETURN
END SUBROUTINE nl_get_afwa_ptype_opt
SUBROUTINE nl_get_afwa_vil_opt ( id_id , afwa_vil_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: afwa_vil_opt
  INTEGER id_id
  afwa_vil_opt = model_config_rec%afwa_vil_opt(id_id)
  RETURN
END SUBROUTINE nl_get_afwa_vil_opt
SUBROUTINE nl_get_afwa_radar_opt ( id_id , afwa_radar_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: afwa_radar_opt
  INTEGER id_id
  afwa_radar_opt = model_config_rec%afwa_radar_opt(id_id)
  RETURN
END SUBROUTINE nl_get_afwa_radar_opt
SUBROUTINE nl_get_afwa_severe_opt ( id_id , afwa_severe_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: afwa_severe_opt
  INTEGER id_id
  afwa_severe_opt = model_config_rec%afwa_severe_opt(id_id)
  RETURN
END SUBROUTINE nl_get_afwa_severe_opt
SUBROUTINE nl_get_afwa_icing_opt ( id_id , afwa_icing_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: afwa_icing_opt
  INTEGER id_id
  afwa_icing_opt = model_config_rec%afwa_icing_opt(id_id)
  RETURN
END SUBROUTINE nl_get_afwa_icing_opt
SUBROUTINE nl_get_afwa_vis_opt ( id_id , afwa_vis_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: afwa_vis_opt
  INTEGER id_id
  afwa_vis_opt = model_config_rec%afwa_vis_opt(id_id)
  RETURN
END SUBROUTINE nl_get_afwa_vis_opt
SUBROUTINE nl_get_afwa_cloud_opt ( id_id , afwa_cloud_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: afwa_cloud_opt
  INTEGER id_id
  afwa_cloud_opt = model_config_rec%afwa_cloud_opt(id_id)
  RETURN
END SUBROUTINE nl_get_afwa_cloud_opt
SUBROUTINE nl_get_afwa_therm_opt ( id_id , afwa_therm_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: afwa_therm_opt
  INTEGER id_id
  afwa_therm_opt = model_config_rec%afwa_therm_opt(id_id)
  RETURN
END SUBROUTINE nl_get_afwa_therm_opt
SUBROUTINE nl_get_afwa_turb_opt ( id_id , afwa_turb_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: afwa_turb_opt
  INTEGER id_id
  afwa_turb_opt = model_config_rec%afwa_turb_opt(id_id)
  RETURN
END SUBROUTINE nl_get_afwa_turb_opt
SUBROUTINE nl_get_afwa_buoy_opt ( id_id , afwa_buoy_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: afwa_buoy_opt
  INTEGER id_id
  afwa_buoy_opt = model_config_rec%afwa_buoy_opt(id_id)
  RETURN
END SUBROUTINE nl_get_afwa_buoy_opt
SUBROUTINE nl_get_afwa_ptype_ccn_tmp ( id_id , afwa_ptype_ccn_tmp )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: afwa_ptype_ccn_tmp
  INTEGER id_id
  afwa_ptype_ccn_tmp = model_config_rec%afwa_ptype_ccn_tmp
  RETURN
END SUBROUTINE nl_get_afwa_ptype_ccn_tmp
SUBROUTINE nl_get_afwa_ptype_tot_melt ( id_id , afwa_ptype_tot_melt )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: afwa_ptype_tot_melt
  INTEGER id_id
  afwa_ptype_tot_melt = model_config_rec%afwa_ptype_tot_melt
  RETURN
END SUBROUTINE nl_get_afwa_ptype_tot_melt
SUBROUTINE nl_get_afwa_bad_data_check ( id_id , afwa_bad_data_check )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: afwa_bad_data_check
  INTEGER id_id
  afwa_bad_data_check = model_config_rec%afwa_bad_data_check
  RETURN
END SUBROUTINE nl_get_afwa_bad_data_check
SUBROUTINE nl_get_mean_diag ( id_id , mean_diag )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: mean_diag
  INTEGER id_id
  mean_diag = model_config_rec%mean_diag
  RETURN
END SUBROUTINE nl_get_mean_diag
SUBROUTINE nl_get_mean_freq ( id_id , mean_freq )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: mean_freq
  INTEGER id_id
  mean_freq = model_config_rec%mean_freq
  RETURN
END SUBROUTINE nl_get_mean_freq
SUBROUTINE nl_get_mean_interval ( id_id , mean_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: mean_interval
  INTEGER id_id
  mean_interval = model_config_rec%mean_interval(id_id)
  RETURN
END SUBROUTINE nl_get_mean_interval
SUBROUTINE nl_get_mean_diag_interval ( id_id , mean_diag_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: mean_diag_interval
  INTEGER id_id
  mean_diag_interval = model_config_rec%mean_diag_interval(id_id)
  RETURN
END SUBROUTINE nl_get_mean_diag_interval
SUBROUTINE nl_get_mean_diag_interval_s ( id_id , mean_diag_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: mean_diag_interval_s
  INTEGER id_id
  mean_diag_interval_s = model_config_rec%mean_diag_interval_s(id_id)
  RETURN
END SUBROUTINE nl_get_mean_diag_interval_s
SUBROUTINE nl_get_mean_diag_interval_m ( id_id , mean_diag_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: mean_diag_interval_m
  INTEGER id_id
  mean_diag_interval_m = model_config_rec%mean_diag_interval_m(id_id)
  RETURN
END SUBROUTINE nl_get_mean_diag_interval_m
SUBROUTINE nl_get_mean_diag_interval_h ( id_id , mean_diag_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: mean_diag_interval_h
  INTEGER id_id
  mean_diag_interval_h = model_config_rec%mean_diag_interval_h(id_id)
  RETURN
END SUBROUTINE nl_get_mean_diag_interval_h
SUBROUTINE nl_get_mean_diag_interval_d ( id_id , mean_diag_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: mean_diag_interval_d
  INTEGER id_id
  mean_diag_interval_d = model_config_rec%mean_diag_interval_d(id_id)
  RETURN
END SUBROUTINE nl_get_mean_diag_interval_d
SUBROUTINE nl_get_mean_diag_interval_mo ( id_id , mean_diag_interval_mo )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: mean_diag_interval_mo
  INTEGER id_id
  mean_diag_interval_mo = model_config_rec%mean_diag_interval_mo(id_id)
  RETURN
END SUBROUTINE nl_get_mean_diag_interval_mo
SUBROUTINE nl_get_diurnal_diag ( id_id , diurnal_diag )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: diurnal_diag
  INTEGER id_id
  diurnal_diag = model_config_rec%diurnal_diag
  RETURN
END SUBROUTINE nl_get_diurnal_diag
SUBROUTINE nl_get_nssl_ipelec ( id_id , nssl_ipelec )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: nssl_ipelec
  INTEGER id_id
  nssl_ipelec = model_config_rec%nssl_ipelec(id_id)
  RETURN
END SUBROUTINE nl_get_nssl_ipelec
SUBROUTINE nl_get_nssl_isaund ( id_id , nssl_isaund )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: nssl_isaund
  INTEGER id_id
  nssl_isaund = model_config_rec%nssl_isaund
  RETURN
END SUBROUTINE nl_get_nssl_isaund
SUBROUTINE nl_get_nssl_iscreen ( id_id , nssl_iscreen )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: nssl_iscreen
  INTEGER id_id
  nssl_iscreen = model_config_rec%nssl_iscreen
  RETURN
END SUBROUTINE nl_get_nssl_iscreen
SUBROUTINE nl_get_nssl_lightrad ( id_id , nssl_lightrad )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: nssl_lightrad
  INTEGER id_id
  nssl_lightrad = model_config_rec%nssl_lightrad
  RETURN
END SUBROUTINE nl_get_nssl_lightrad
SUBROUTINE nl_get_nssl_idischarge ( id_id , nssl_idischarge )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: nssl_idischarge
  INTEGER id_id
  nssl_idischarge = model_config_rec%nssl_idischarge
  RETURN
END SUBROUTINE nl_get_nssl_idischarge
SUBROUTINE nl_get_nssl_ibrkd ( id_id , nssl_ibrkd )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: nssl_ibrkd
  INTEGER id_id
  nssl_ibrkd = model_config_rec%nssl_ibrkd
  RETURN
END SUBROUTINE nl_get_nssl_ibrkd
SUBROUTINE nl_get_nssl_ecrit ( id_id , nssl_ecrit )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: nssl_ecrit
  INTEGER id_id
  nssl_ecrit = model_config_rec%nssl_ecrit
  RETURN
END SUBROUTINE nl_get_nssl_ecrit
SUBROUTINE nl_get_nssl_disfrac ( id_id , nssl_disfrac )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: nssl_disfrac
  INTEGER id_id
  nssl_disfrac = model_config_rec%nssl_disfrac
  RETURN
END SUBROUTINE nl_get_nssl_disfrac
SUBROUTINE nl_get_elec_physics ( id_id , elec_physics )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: elec_physics
  INTEGER id_id
  elec_physics = model_config_rec%elec_physics
  RETURN
END SUBROUTINE nl_get_elec_physics
SUBROUTINE nl_get_perturb_bdy ( id_id , perturb_bdy )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: perturb_bdy
  INTEGER id_id
  perturb_bdy = model_config_rec%perturb_bdy
  RETURN
END SUBROUTINE nl_get_perturb_bdy
SUBROUTINE nl_get_perturb_chem_bdy ( id_id , perturb_chem_bdy )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: perturb_chem_bdy
  INTEGER id_id
  perturb_chem_bdy = model_config_rec%perturb_chem_bdy
  RETURN
END SUBROUTINE nl_get_perturb_chem_bdy
SUBROUTINE nl_get_hybrid_opt ( id_id , hybrid_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: hybrid_opt
  INTEGER id_id
  hybrid_opt = model_config_rec%hybrid_opt
  RETURN
END SUBROUTINE nl_get_hybrid_opt
SUBROUTINE nl_get_etac ( id_id , etac )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(OUT) :: etac
  INTEGER id_id
  etac = model_config_rec%etac
  RETURN
END SUBROUTINE nl_get_etac
SUBROUTINE nl_get_num_wif_levels ( id_id , num_wif_levels )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: num_wif_levels
  INTEGER id_id
  num_wif_levels = model_config_rec%num_wif_levels
  RETURN
END SUBROUTINE nl_get_num_wif_levels
SUBROUTINE nl_get_wif_input_opt ( id_id , wif_input_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: wif_input_opt
  INTEGER id_id
  wif_input_opt = model_config_rec%wif_input_opt
  RETURN
END SUBROUTINE nl_get_wif_input_opt
SUBROUTINE nl_get_diag_nwp2 ( id_id , diag_nwp2 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: diag_nwp2
  INTEGER id_id
  diag_nwp2 = model_config_rec%diag_nwp2
  RETURN
END SUBROUTINE nl_get_diag_nwp2
SUBROUTINE nl_get_chem_opt ( id_id , chem_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(OUT) :: chem_opt
  INTEGER id_id
  chem_opt = model_config_rec%chem_opt(id_id)
  RETURN
END SUBROUTINE nl_get_chem_opt
#endif
#endif
#ifdef NL_set_ROUTINES
#if (NNN == 0)
SUBROUTINE nl_set_run_days ( id_id , run_days )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: run_days
  INTEGER id_id
  model_config_rec%run_days = run_days 
  RETURN
END SUBROUTINE nl_set_run_days
SUBROUTINE nl_set_run_hours ( id_id , run_hours )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: run_hours
  INTEGER id_id
  model_config_rec%run_hours = run_hours 
  RETURN
END SUBROUTINE nl_set_run_hours
SUBROUTINE nl_set_run_minutes ( id_id , run_minutes )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: run_minutes
  INTEGER id_id
  model_config_rec%run_minutes = run_minutes 
  RETURN
END SUBROUTINE nl_set_run_minutes
SUBROUTINE nl_set_run_seconds ( id_id , run_seconds )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: run_seconds
  INTEGER id_id
  model_config_rec%run_seconds = run_seconds 
  RETURN
END SUBROUTINE nl_set_run_seconds
SUBROUTINE nl_set_start_year ( id_id , start_year )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: start_year
  INTEGER id_id
  model_config_rec%start_year(id_id) = start_year
  RETURN
END SUBROUTINE nl_set_start_year
SUBROUTINE nl_set_start_month ( id_id , start_month )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: start_month
  INTEGER id_id
  model_config_rec%start_month(id_id) = start_month
  RETURN
END SUBROUTINE nl_set_start_month
SUBROUTINE nl_set_start_day ( id_id , start_day )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: start_day
  INTEGER id_id
  model_config_rec%start_day(id_id) = start_day
  RETURN
END SUBROUTINE nl_set_start_day
SUBROUTINE nl_set_start_hour ( id_id , start_hour )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: start_hour
  INTEGER id_id
  model_config_rec%start_hour(id_id) = start_hour
  RETURN
END SUBROUTINE nl_set_start_hour
SUBROUTINE nl_set_start_minute ( id_id , start_minute )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: start_minute
  INTEGER id_id
  model_config_rec%start_minute(id_id) = start_minute
  RETURN
END SUBROUTINE nl_set_start_minute
SUBROUTINE nl_set_start_second ( id_id , start_second )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: start_second
  INTEGER id_id
  model_config_rec%start_second(id_id) = start_second
  RETURN
END SUBROUTINE nl_set_start_second
SUBROUTINE nl_set_end_year ( id_id , end_year )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: end_year
  INTEGER id_id
  model_config_rec%end_year(id_id) = end_year
  RETURN
END SUBROUTINE nl_set_end_year
SUBROUTINE nl_set_end_month ( id_id , end_month )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: end_month
  INTEGER id_id
  model_config_rec%end_month(id_id) = end_month
  RETURN
END SUBROUTINE nl_set_end_month
SUBROUTINE nl_set_end_day ( id_id , end_day )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: end_day
  INTEGER id_id
  model_config_rec%end_day(id_id) = end_day
  RETURN
END SUBROUTINE nl_set_end_day
SUBROUTINE nl_set_end_hour ( id_id , end_hour )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: end_hour
  INTEGER id_id
  model_config_rec%end_hour(id_id) = end_hour
  RETURN
END SUBROUTINE nl_set_end_hour
SUBROUTINE nl_set_end_minute ( id_id , end_minute )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: end_minute
  INTEGER id_id
  model_config_rec%end_minute(id_id) = end_minute
  RETURN
END SUBROUTINE nl_set_end_minute
SUBROUTINE nl_set_end_second ( id_id , end_second )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: end_second
  INTEGER id_id
  model_config_rec%end_second(id_id) = end_second
  RETURN
END SUBROUTINE nl_set_end_second
SUBROUTINE nl_set_interval_seconds ( id_id , interval_seconds )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: interval_seconds
  INTEGER id_id
  model_config_rec%interval_seconds = interval_seconds 
  RETURN
END SUBROUTINE nl_set_interval_seconds
SUBROUTINE nl_set_input_from_file ( id_id , input_from_file )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: input_from_file
  INTEGER id_id
  model_config_rec%input_from_file(id_id) = input_from_file
  RETURN
END SUBROUTINE nl_set_input_from_file
SUBROUTINE nl_set_fine_input_stream ( id_id , fine_input_stream )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: fine_input_stream
  INTEGER id_id
  model_config_rec%fine_input_stream(id_id) = fine_input_stream
  RETURN
END SUBROUTINE nl_set_fine_input_stream
SUBROUTINE nl_set_input_from_hires ( id_id , input_from_hires )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: input_from_hires
  INTEGER id_id
  model_config_rec%input_from_hires(id_id) = input_from_hires
  RETURN
END SUBROUTINE nl_set_input_from_hires
SUBROUTINE nl_set_rsmas_data_path ( id_id , rsmas_data_path )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: rsmas_data_path
  INTEGER id_id
  model_config_rec%rsmas_data_path = trim(rsmas_data_path) 
  RETURN
END SUBROUTINE nl_set_rsmas_data_path
SUBROUTINE nl_set_all_ic_times ( id_id , all_ic_times )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: all_ic_times
  INTEGER id_id
  model_config_rec%all_ic_times = all_ic_times 
  RETURN
END SUBROUTINE nl_set_all_ic_times
SUBROUTINE nl_set_julyr ( id_id , julyr )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: julyr
  INTEGER id_id
  model_config_rec%julyr(id_id) = julyr
  RETURN
END SUBROUTINE nl_set_julyr
SUBROUTINE nl_set_julday ( id_id , julday )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: julday
  INTEGER id_id
  model_config_rec%julday(id_id) = julday
  RETURN
END SUBROUTINE nl_set_julday
SUBROUTINE nl_set_gmt ( id_id , gmt )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: gmt
  INTEGER id_id
  model_config_rec%gmt(id_id) = gmt
  RETURN
END SUBROUTINE nl_set_gmt
SUBROUTINE nl_set_input_inname ( id_id , input_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: input_inname
  INTEGER id_id
  model_config_rec%input_inname = trim(input_inname) 
  RETURN
END SUBROUTINE nl_set_input_inname
SUBROUTINE nl_set_input_outname ( id_id , input_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: input_outname
  INTEGER id_id
  model_config_rec%input_outname = trim(input_outname) 
  RETURN
END SUBROUTINE nl_set_input_outname
SUBROUTINE nl_set_bdy_inname ( id_id , bdy_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: bdy_inname
  INTEGER id_id
  model_config_rec%bdy_inname = trim(bdy_inname) 
  RETURN
END SUBROUTINE nl_set_bdy_inname
SUBROUTINE nl_set_bdy_outname ( id_id , bdy_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: bdy_outname
  INTEGER id_id
  model_config_rec%bdy_outname = trim(bdy_outname) 
  RETURN
END SUBROUTINE nl_set_bdy_outname
SUBROUTINE nl_set_rst_inname ( id_id , rst_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: rst_inname
  INTEGER id_id
  model_config_rec%rst_inname = trim(rst_inname) 
  RETURN
END SUBROUTINE nl_set_rst_inname
SUBROUTINE nl_set_rst_outname ( id_id , rst_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: rst_outname
  INTEGER id_id
  model_config_rec%rst_outname = trim(rst_outname) 
  RETURN
END SUBROUTINE nl_set_rst_outname
SUBROUTINE nl_set_write_input ( id_id , write_input )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: write_input
  INTEGER id_id
  model_config_rec%write_input = write_input 
  RETURN
END SUBROUTINE nl_set_write_input
SUBROUTINE nl_set_write_restart_at_0h ( id_id , write_restart_at_0h )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: write_restart_at_0h
  INTEGER id_id
  model_config_rec%write_restart_at_0h = write_restart_at_0h 
  RETURN
END SUBROUTINE nl_set_write_restart_at_0h
SUBROUTINE nl_set_write_hist_at_0h_rst ( id_id , write_hist_at_0h_rst )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: write_hist_at_0h_rst
  INTEGER id_id
  model_config_rec%write_hist_at_0h_rst = write_hist_at_0h_rst 
  RETURN
END SUBROUTINE nl_set_write_hist_at_0h_rst
SUBROUTINE nl_set_adjust_output_times ( id_id , adjust_output_times )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: adjust_output_times
  INTEGER id_id
  model_config_rec%adjust_output_times = adjust_output_times 
  RETURN
END SUBROUTINE nl_set_adjust_output_times
SUBROUTINE nl_set_adjust_input_times ( id_id , adjust_input_times )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: adjust_input_times
  INTEGER id_id
  model_config_rec%adjust_input_times = adjust_input_times 
  RETURN
END SUBROUTINE nl_set_adjust_input_times
SUBROUTINE nl_set_diag_print ( id_id , diag_print )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: diag_print
  INTEGER id_id
  model_config_rec%diag_print = diag_print 
  RETURN
END SUBROUTINE nl_set_diag_print
SUBROUTINE nl_set_nocolons ( id_id , nocolons )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: nocolons
  INTEGER id_id
  model_config_rec%nocolons = nocolons 
  RETURN
END SUBROUTINE nl_set_nocolons
SUBROUTINE nl_set_cycling ( id_id , cycling )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: cycling
  INTEGER id_id
  model_config_rec%cycling = cycling 
  RETURN
END SUBROUTINE nl_set_cycling
SUBROUTINE nl_set_output_diagnostics ( id_id , output_diagnostics )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: output_diagnostics
  INTEGER id_id
  model_config_rec%output_diagnostics = output_diagnostics 
  RETURN
END SUBROUTINE nl_set_output_diagnostics
SUBROUTINE nl_set_nwp_diagnostics ( id_id , nwp_diagnostics )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: nwp_diagnostics
  INTEGER id_id
  model_config_rec%nwp_diagnostics = nwp_diagnostics 
  RETURN
END SUBROUTINE nl_set_nwp_diagnostics
SUBROUTINE nl_set_output_ready_flag ( id_id , output_ready_flag )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: output_ready_flag
  INTEGER id_id
  model_config_rec%output_ready_flag = output_ready_flag 
  RETURN
END SUBROUTINE nl_set_output_ready_flag
SUBROUTINE nl_set_force_use_old_data ( id_id , force_use_old_data )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: force_use_old_data
  INTEGER id_id
  model_config_rec%force_use_old_data = force_use_old_data 
  RETURN
END SUBROUTINE nl_set_force_use_old_data
SUBROUTINE nl_set_usepio ( id_id , usepio )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: usepio
  INTEGER id_id
  model_config_rec%usepio = usepio 
  RETURN
END SUBROUTINE nl_set_usepio
SUBROUTINE nl_set_pioprocs ( id_id , pioprocs )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: pioprocs
  INTEGER id_id
  model_config_rec%pioprocs = pioprocs 
  RETURN
END SUBROUTINE nl_set_pioprocs
SUBROUTINE nl_set_piostart ( id_id , piostart )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: piostart
  INTEGER id_id
  model_config_rec%piostart = piostart 
  RETURN
END SUBROUTINE nl_set_piostart
SUBROUTINE nl_set_piostride ( id_id , piostride )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: piostride
  INTEGER id_id
  model_config_rec%piostride = piostride 
  RETURN
END SUBROUTINE nl_set_piostride
SUBROUTINE nl_set_pioshift ( id_id , pioshift )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: pioshift
  INTEGER id_id
  model_config_rec%pioshift = pioshift 
  RETURN
END SUBROUTINE nl_set_pioshift
SUBROUTINE nl_set_dfi_opt ( id_id , dfi_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: dfi_opt
  INTEGER id_id
  model_config_rec%dfi_opt = dfi_opt 
  RETURN
END SUBROUTINE nl_set_dfi_opt
SUBROUTINE nl_set_dfi_savehydmeteors ( id_id , dfi_savehydmeteors )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: dfi_savehydmeteors
  INTEGER id_id
  model_config_rec%dfi_savehydmeteors = dfi_savehydmeteors 
  RETURN
END SUBROUTINE nl_set_dfi_savehydmeteors
SUBROUTINE nl_set_dfi_nfilter ( id_id , dfi_nfilter )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: dfi_nfilter
  INTEGER id_id
  model_config_rec%dfi_nfilter = dfi_nfilter 
  RETURN
END SUBROUTINE nl_set_dfi_nfilter
SUBROUTINE nl_set_dfi_write_filtered_input ( id_id , dfi_write_filtered_input )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: dfi_write_filtered_input
  INTEGER id_id
  model_config_rec%dfi_write_filtered_input = dfi_write_filtered_input 
  RETURN
END SUBROUTINE nl_set_dfi_write_filtered_input
SUBROUTINE nl_set_dfi_write_dfi_history ( id_id , dfi_write_dfi_history )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: dfi_write_dfi_history
  INTEGER id_id
  model_config_rec%dfi_write_dfi_history = dfi_write_dfi_history 
  RETURN
END SUBROUTINE nl_set_dfi_write_dfi_history
SUBROUTINE nl_set_dfi_cutoff_seconds ( id_id , dfi_cutoff_seconds )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: dfi_cutoff_seconds
  INTEGER id_id
  model_config_rec%dfi_cutoff_seconds = dfi_cutoff_seconds 
  RETURN
END SUBROUTINE nl_set_dfi_cutoff_seconds
SUBROUTINE nl_set_dfi_time_dim ( id_id , dfi_time_dim )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: dfi_time_dim
  INTEGER id_id
  model_config_rec%dfi_time_dim = dfi_time_dim 
  RETURN
END SUBROUTINE nl_set_dfi_time_dim
SUBROUTINE nl_set_dfi_fwdstop_year ( id_id , dfi_fwdstop_year )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: dfi_fwdstop_year
  INTEGER id_id
  model_config_rec%dfi_fwdstop_year = dfi_fwdstop_year 
  RETURN
END SUBROUTINE nl_set_dfi_fwdstop_year
SUBROUTINE nl_set_dfi_fwdstop_month ( id_id , dfi_fwdstop_month )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: dfi_fwdstop_month
  INTEGER id_id
  model_config_rec%dfi_fwdstop_month = dfi_fwdstop_month 
  RETURN
END SUBROUTINE nl_set_dfi_fwdstop_month
SUBROUTINE nl_set_dfi_fwdstop_day ( id_id , dfi_fwdstop_day )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: dfi_fwdstop_day
  INTEGER id_id
  model_config_rec%dfi_fwdstop_day = dfi_fwdstop_day 
  RETURN
END SUBROUTINE nl_set_dfi_fwdstop_day
SUBROUTINE nl_set_dfi_fwdstop_hour ( id_id , dfi_fwdstop_hour )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: dfi_fwdstop_hour
  INTEGER id_id
  model_config_rec%dfi_fwdstop_hour = dfi_fwdstop_hour 
  RETURN
END SUBROUTINE nl_set_dfi_fwdstop_hour
SUBROUTINE nl_set_dfi_fwdstop_minute ( id_id , dfi_fwdstop_minute )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: dfi_fwdstop_minute
  INTEGER id_id
  model_config_rec%dfi_fwdstop_minute = dfi_fwdstop_minute 
  RETURN
END SUBROUTINE nl_set_dfi_fwdstop_minute
SUBROUTINE nl_set_dfi_fwdstop_second ( id_id , dfi_fwdstop_second )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: dfi_fwdstop_second
  INTEGER id_id
  model_config_rec%dfi_fwdstop_second = dfi_fwdstop_second 
  RETURN
END SUBROUTINE nl_set_dfi_fwdstop_second
SUBROUTINE nl_set_dfi_bckstop_year ( id_id , dfi_bckstop_year )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: dfi_bckstop_year
  INTEGER id_id
  model_config_rec%dfi_bckstop_year = dfi_bckstop_year 
  RETURN
END SUBROUTINE nl_set_dfi_bckstop_year
SUBROUTINE nl_set_dfi_bckstop_month ( id_id , dfi_bckstop_month )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: dfi_bckstop_month
  INTEGER id_id
  model_config_rec%dfi_bckstop_month = dfi_bckstop_month 
  RETURN
END SUBROUTINE nl_set_dfi_bckstop_month
SUBROUTINE nl_set_dfi_bckstop_day ( id_id , dfi_bckstop_day )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: dfi_bckstop_day
  INTEGER id_id
  model_config_rec%dfi_bckstop_day = dfi_bckstop_day 
  RETURN
END SUBROUTINE nl_set_dfi_bckstop_day
SUBROUTINE nl_set_dfi_bckstop_hour ( id_id , dfi_bckstop_hour )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: dfi_bckstop_hour
  INTEGER id_id
  model_config_rec%dfi_bckstop_hour = dfi_bckstop_hour 
  RETURN
END SUBROUTINE nl_set_dfi_bckstop_hour
SUBROUTINE nl_set_dfi_bckstop_minute ( id_id , dfi_bckstop_minute )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: dfi_bckstop_minute
  INTEGER id_id
  model_config_rec%dfi_bckstop_minute = dfi_bckstop_minute 
  RETURN
END SUBROUTINE nl_set_dfi_bckstop_minute
SUBROUTINE nl_set_dfi_bckstop_second ( id_id , dfi_bckstop_second )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: dfi_bckstop_second
  INTEGER id_id
  model_config_rec%dfi_bckstop_second = dfi_bckstop_second 
  RETURN
END SUBROUTINE nl_set_dfi_bckstop_second
SUBROUTINE nl_set_time_step ( id_id , time_step )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: time_step
  INTEGER id_id
  model_config_rec%time_step = time_step 
  RETURN
END SUBROUTINE nl_set_time_step
SUBROUTINE nl_set_time_step_fract_num ( id_id , time_step_fract_num )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: time_step_fract_num
  INTEGER id_id
  model_config_rec%time_step_fract_num = time_step_fract_num 
  RETURN
END SUBROUTINE nl_set_time_step_fract_num
SUBROUTINE nl_set_time_step_fract_den ( id_id , time_step_fract_den )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: time_step_fract_den
  INTEGER id_id
  model_config_rec%time_step_fract_den = time_step_fract_den 
  RETURN
END SUBROUTINE nl_set_time_step_fract_den
SUBROUTINE nl_set_time_step_dfi ( id_id , time_step_dfi )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: time_step_dfi
  INTEGER id_id
  model_config_rec%time_step_dfi = time_step_dfi 
  RETURN
END SUBROUTINE nl_set_time_step_dfi
SUBROUTINE nl_set_min_time_step ( id_id , min_time_step )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: min_time_step
  INTEGER id_id
  model_config_rec%min_time_step(id_id) = min_time_step
  RETURN
END SUBROUTINE nl_set_min_time_step
SUBROUTINE nl_set_min_time_step_den ( id_id , min_time_step_den )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: min_time_step_den
  INTEGER id_id
  model_config_rec%min_time_step_den(id_id) = min_time_step_den
  RETURN
END SUBROUTINE nl_set_min_time_step_den
SUBROUTINE nl_set_max_time_step ( id_id , max_time_step )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: max_time_step
  INTEGER id_id
  model_config_rec%max_time_step(id_id) = max_time_step
  RETURN
END SUBROUTINE nl_set_max_time_step
SUBROUTINE nl_set_max_time_step_den ( id_id , max_time_step_den )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: max_time_step_den
  INTEGER id_id
  model_config_rec%max_time_step_den(id_id) = max_time_step_den
  RETURN
END SUBROUTINE nl_set_max_time_step_den
SUBROUTINE nl_set_target_cfl ( id_id , target_cfl )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: target_cfl
  INTEGER id_id
  model_config_rec%target_cfl(id_id) = target_cfl
  RETURN
END SUBROUTINE nl_set_target_cfl
SUBROUTINE nl_set_target_hcfl ( id_id , target_hcfl )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: target_hcfl
  INTEGER id_id
  model_config_rec%target_hcfl(id_id) = target_hcfl
  RETURN
END SUBROUTINE nl_set_target_hcfl
SUBROUTINE nl_set_max_step_increase_pct ( id_id , max_step_increase_pct )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: max_step_increase_pct
  INTEGER id_id
  model_config_rec%max_step_increase_pct(id_id) = max_step_increase_pct
  RETURN
END SUBROUTINE nl_set_max_step_increase_pct
SUBROUTINE nl_set_starting_time_step ( id_id , starting_time_step )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: starting_time_step
  INTEGER id_id
  model_config_rec%starting_time_step(id_id) = starting_time_step
  RETURN
END SUBROUTINE nl_set_starting_time_step
SUBROUTINE nl_set_starting_time_step_den ( id_id , starting_time_step_den )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: starting_time_step_den
  INTEGER id_id
  model_config_rec%starting_time_step_den(id_id) = starting_time_step_den
  RETURN
END SUBROUTINE nl_set_starting_time_step_den
SUBROUTINE nl_set_step_to_output_time ( id_id , step_to_output_time )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: step_to_output_time
  INTEGER id_id
  model_config_rec%step_to_output_time = step_to_output_time 
  RETURN
END SUBROUTINE nl_set_step_to_output_time
SUBROUTINE nl_set_adaptation_domain ( id_id , adaptation_domain )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: adaptation_domain
  INTEGER id_id
  model_config_rec%adaptation_domain = adaptation_domain 
  RETURN
END SUBROUTINE nl_set_adaptation_domain
SUBROUTINE nl_set_use_adaptive_time_step ( id_id , use_adaptive_time_step )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: use_adaptive_time_step
  INTEGER id_id
  model_config_rec%use_adaptive_time_step = use_adaptive_time_step 
  RETURN
END SUBROUTINE nl_set_use_adaptive_time_step
SUBROUTINE nl_set_use_adaptive_time_step_dfi ( id_id , use_adaptive_time_step_dfi )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: use_adaptive_time_step_dfi
  INTEGER id_id
  model_config_rec%use_adaptive_time_step_dfi = use_adaptive_time_step_dfi 
  RETURN
END SUBROUTINE nl_set_use_adaptive_time_step_dfi
SUBROUTINE nl_set_max_dom ( id_id , max_dom )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: max_dom
  INTEGER id_id
  model_config_rec%max_dom = max_dom 
  RETURN
END SUBROUTINE nl_set_max_dom
SUBROUTINE nl_set_lats_to_mic ( id_id , lats_to_mic )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: lats_to_mic
  INTEGER id_id
  model_config_rec%lats_to_mic = lats_to_mic 
  RETURN
END SUBROUTINE nl_set_lats_to_mic
SUBROUTINE nl_set_s_we ( id_id , s_we )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: s_we
  INTEGER id_id
  model_config_rec%s_we(id_id) = s_we
  RETURN
END SUBROUTINE nl_set_s_we
SUBROUTINE nl_set_e_we ( id_id , e_we )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: e_we
  INTEGER id_id
  model_config_rec%e_we(id_id) = e_we
  RETURN
END SUBROUTINE nl_set_e_we
SUBROUTINE nl_set_s_sn ( id_id , s_sn )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: s_sn
  INTEGER id_id
  model_config_rec%s_sn(id_id) = s_sn
  RETURN
END SUBROUTINE nl_set_s_sn
SUBROUTINE nl_set_e_sn ( id_id , e_sn )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: e_sn
  INTEGER id_id
  model_config_rec%e_sn(id_id) = e_sn
  RETURN
END SUBROUTINE nl_set_e_sn
SUBROUTINE nl_set_s_vert ( id_id , s_vert )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: s_vert
  INTEGER id_id
  model_config_rec%s_vert(id_id) = s_vert
  RETURN
END SUBROUTINE nl_set_s_vert
SUBROUTINE nl_set_e_vert ( id_id , e_vert )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: e_vert
  INTEGER id_id
  model_config_rec%e_vert(id_id) = e_vert
  RETURN
END SUBROUTINE nl_set_e_vert
SUBROUTINE nl_set_num_metgrid_levels ( id_id , num_metgrid_levels )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: num_metgrid_levels
  INTEGER id_id
  model_config_rec%num_metgrid_levels = num_metgrid_levels 
  RETURN
END SUBROUTINE nl_set_num_metgrid_levels
SUBROUTINE nl_set_num_metgrid_soil_levels ( id_id , num_metgrid_soil_levels )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: num_metgrid_soil_levels
  INTEGER id_id
  model_config_rec%num_metgrid_soil_levels = num_metgrid_soil_levels 
  RETURN
END SUBROUTINE nl_set_num_metgrid_soil_levels
SUBROUTINE nl_set_p_top_requested ( id_id , p_top_requested )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: p_top_requested
  INTEGER id_id
  model_config_rec%p_top_requested = p_top_requested 
  RETURN
END SUBROUTINE nl_set_p_top_requested
SUBROUTINE nl_set_interp_theta ( id_id , interp_theta )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: interp_theta
  INTEGER id_id
  model_config_rec%interp_theta = interp_theta 
  RETURN
END SUBROUTINE nl_set_interp_theta
SUBROUTINE nl_set_interp_type ( id_id , interp_type )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: interp_type
  INTEGER id_id
  model_config_rec%interp_type = interp_type 
  RETURN
END SUBROUTINE nl_set_interp_type
SUBROUTINE nl_set_rebalance ( id_id , rebalance )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: rebalance
  INTEGER id_id
  model_config_rec%rebalance = rebalance 
  RETURN
END SUBROUTINE nl_set_rebalance
SUBROUTINE nl_set_vert_refine_method ( id_id , vert_refine_method )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: vert_refine_method
  INTEGER id_id
  model_config_rec%vert_refine_method(id_id) = vert_refine_method
  RETURN
END SUBROUTINE nl_set_vert_refine_method
SUBROUTINE nl_set_vert_refine_fact ( id_id , vert_refine_fact )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: vert_refine_fact
  INTEGER id_id
  model_config_rec%vert_refine_fact = vert_refine_fact 
  RETURN
END SUBROUTINE nl_set_vert_refine_fact
SUBROUTINE nl_set_extrap_type ( id_id , extrap_type )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: extrap_type
  INTEGER id_id
  model_config_rec%extrap_type = extrap_type 
  RETURN
END SUBROUTINE nl_set_extrap_type
SUBROUTINE nl_set_t_extrap_type ( id_id , t_extrap_type )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: t_extrap_type
  INTEGER id_id
  model_config_rec%t_extrap_type = t_extrap_type 
  RETURN
END SUBROUTINE nl_set_t_extrap_type
SUBROUTINE nl_set_hypsometric_opt ( id_id , hypsometric_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: hypsometric_opt
  INTEGER id_id
  model_config_rec%hypsometric_opt = hypsometric_opt 
  RETURN
END SUBROUTINE nl_set_hypsometric_opt
SUBROUTINE nl_set_lowest_lev_from_sfc ( id_id , lowest_lev_from_sfc )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: lowest_lev_from_sfc
  INTEGER id_id
  model_config_rec%lowest_lev_from_sfc = lowest_lev_from_sfc 
  RETURN
END SUBROUTINE nl_set_lowest_lev_from_sfc
SUBROUTINE nl_set_use_levels_below_ground ( id_id , use_levels_below_ground )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: use_levels_below_ground
  INTEGER id_id
  model_config_rec%use_levels_below_ground = use_levels_below_ground 
  RETURN
END SUBROUTINE nl_set_use_levels_below_ground
SUBROUTINE nl_set_use_tavg_for_tsk ( id_id , use_tavg_for_tsk )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: use_tavg_for_tsk
  INTEGER id_id
  model_config_rec%use_tavg_for_tsk = use_tavg_for_tsk 
  RETURN
END SUBROUTINE nl_set_use_tavg_for_tsk
SUBROUTINE nl_set_use_surface ( id_id , use_surface )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: use_surface
  INTEGER id_id
  model_config_rec%use_surface = use_surface 
  RETURN
END SUBROUTINE nl_set_use_surface
SUBROUTINE nl_set_lagrange_order ( id_id , lagrange_order )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: lagrange_order
  INTEGER id_id
  model_config_rec%lagrange_order = lagrange_order 
  RETURN
END SUBROUTINE nl_set_lagrange_order
SUBROUTINE nl_set_force_sfc_in_vinterp ( id_id , force_sfc_in_vinterp )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: force_sfc_in_vinterp
  INTEGER id_id
  model_config_rec%force_sfc_in_vinterp = force_sfc_in_vinterp 
  RETURN
END SUBROUTINE nl_set_force_sfc_in_vinterp
SUBROUTINE nl_set_zap_close_levels ( id_id , zap_close_levels )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: zap_close_levels
  INTEGER id_id
  model_config_rec%zap_close_levels = zap_close_levels 
  RETURN
END SUBROUTINE nl_set_zap_close_levels
SUBROUTINE nl_set_maxw_horiz_pres_diff ( id_id , maxw_horiz_pres_diff )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: maxw_horiz_pres_diff
  INTEGER id_id
  model_config_rec%maxw_horiz_pres_diff = maxw_horiz_pres_diff 
  RETURN
END SUBROUTINE nl_set_maxw_horiz_pres_diff
SUBROUTINE nl_set_trop_horiz_pres_diff ( id_id , trop_horiz_pres_diff )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: trop_horiz_pres_diff
  INTEGER id_id
  model_config_rec%trop_horiz_pres_diff = trop_horiz_pres_diff 
  RETURN
END SUBROUTINE nl_set_trop_horiz_pres_diff
SUBROUTINE nl_set_maxw_above_this_level ( id_id , maxw_above_this_level )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: maxw_above_this_level
  INTEGER id_id
  model_config_rec%maxw_above_this_level = maxw_above_this_level 
  RETURN
END SUBROUTINE nl_set_maxw_above_this_level
SUBROUTINE nl_set_use_maxw_level ( id_id , use_maxw_level )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: use_maxw_level
  INTEGER id_id
  model_config_rec%use_maxw_level = use_maxw_level 
  RETURN
END SUBROUTINE nl_set_use_maxw_level
SUBROUTINE nl_set_use_trop_level ( id_id , use_trop_level )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: use_trop_level
  INTEGER id_id
  model_config_rec%use_trop_level = use_trop_level 
  RETURN
END SUBROUTINE nl_set_use_trop_level
SUBROUTINE nl_set_sfcp_to_sfcp ( id_id , sfcp_to_sfcp )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: sfcp_to_sfcp
  INTEGER id_id
  model_config_rec%sfcp_to_sfcp = sfcp_to_sfcp 
  RETURN
END SUBROUTINE nl_set_sfcp_to_sfcp
SUBROUTINE nl_set_adjust_heights ( id_id , adjust_heights )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: adjust_heights
  INTEGER id_id
  model_config_rec%adjust_heights = adjust_heights 
  RETURN
END SUBROUTINE nl_set_adjust_heights
SUBROUTINE nl_set_smooth_cg_topo ( id_id , smooth_cg_topo )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: smooth_cg_topo
  INTEGER id_id
  model_config_rec%smooth_cg_topo = smooth_cg_topo 
  RETURN
END SUBROUTINE nl_set_smooth_cg_topo
SUBROUTINE nl_set_nest_interp_coord ( id_id , nest_interp_coord )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: nest_interp_coord
  INTEGER id_id
  model_config_rec%nest_interp_coord = nest_interp_coord 
  RETURN
END SUBROUTINE nl_set_nest_interp_coord
SUBROUTINE nl_set_interp_method_type ( id_id , interp_method_type )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: interp_method_type
  INTEGER id_id
  model_config_rec%interp_method_type = interp_method_type 
  RETURN
END SUBROUTINE nl_set_interp_method_type
SUBROUTINE nl_set_aggregate_lu ( id_id , aggregate_lu )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: aggregate_lu
  INTEGER id_id
  model_config_rec%aggregate_lu = aggregate_lu 
  RETURN
END SUBROUTINE nl_set_aggregate_lu
SUBROUTINE nl_set_rh2qv_wrt_liquid ( id_id , rh2qv_wrt_liquid )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: rh2qv_wrt_liquid
  INTEGER id_id
  model_config_rec%rh2qv_wrt_liquid = rh2qv_wrt_liquid 
  RETURN
END SUBROUTINE nl_set_rh2qv_wrt_liquid
SUBROUTINE nl_set_rh2qv_method ( id_id , rh2qv_method )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: rh2qv_method
  INTEGER id_id
  model_config_rec%rh2qv_method = rh2qv_method 
  RETURN
END SUBROUTINE nl_set_rh2qv_method
SUBROUTINE nl_set_qv_max_p_safe ( id_id , qv_max_p_safe )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: qv_max_p_safe
  INTEGER id_id
  model_config_rec%qv_max_p_safe = qv_max_p_safe 
  RETURN
END SUBROUTINE nl_set_qv_max_p_safe
SUBROUTINE nl_set_qv_max_flag ( id_id , qv_max_flag )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: qv_max_flag
  INTEGER id_id
  model_config_rec%qv_max_flag = qv_max_flag 
  RETURN
END SUBROUTINE nl_set_qv_max_flag
SUBROUTINE nl_set_qv_max_value ( id_id , qv_max_value )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: qv_max_value
  INTEGER id_id
  model_config_rec%qv_max_value = qv_max_value 
  RETURN
END SUBROUTINE nl_set_qv_max_value
SUBROUTINE nl_set_qv_min_p_safe ( id_id , qv_min_p_safe )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: qv_min_p_safe
  INTEGER id_id
  model_config_rec%qv_min_p_safe = qv_min_p_safe 
  RETURN
END SUBROUTINE nl_set_qv_min_p_safe
SUBROUTINE nl_set_qv_min_flag ( id_id , qv_min_flag )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: qv_min_flag
  INTEGER id_id
  model_config_rec%qv_min_flag = qv_min_flag 
  RETURN
END SUBROUTINE nl_set_qv_min_flag
SUBROUTINE nl_set_qv_min_value ( id_id , qv_min_value )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: qv_min_value
  INTEGER id_id
  model_config_rec%qv_min_value = qv_min_value 
  RETURN
END SUBROUTINE nl_set_qv_min_value
SUBROUTINE nl_set_ideal_init_method ( id_id , ideal_init_method )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: ideal_init_method
  INTEGER id_id
  model_config_rec%ideal_init_method = ideal_init_method 
  RETURN
END SUBROUTINE nl_set_ideal_init_method
SUBROUTINE nl_set_dx ( id_id , dx )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: dx
  INTEGER id_id
  model_config_rec%dx(id_id) = dx
  RETURN
END SUBROUTINE nl_set_dx
SUBROUTINE nl_set_dy ( id_id , dy )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: dy
  INTEGER id_id
  model_config_rec%dy(id_id) = dy
  RETURN
END SUBROUTINE nl_set_dy
SUBROUTINE nl_set_grid_id ( id_id , grid_id )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: grid_id
  INTEGER id_id
  model_config_rec%grid_id(id_id) = grid_id
  RETURN
END SUBROUTINE nl_set_grid_id
SUBROUTINE nl_set_grid_allowed ( id_id , grid_allowed )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: grid_allowed
  INTEGER id_id
  model_config_rec%grid_allowed(id_id) = grid_allowed
  RETURN
END SUBROUTINE nl_set_grid_allowed
SUBROUTINE nl_set_parent_id ( id_id , parent_id )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: parent_id
  INTEGER id_id
  model_config_rec%parent_id(id_id) = parent_id
  RETURN
END SUBROUTINE nl_set_parent_id
SUBROUTINE nl_set_i_parent_start ( id_id , i_parent_start )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: i_parent_start
  INTEGER id_id
  model_config_rec%i_parent_start(id_id) = i_parent_start
  RETURN
END SUBROUTINE nl_set_i_parent_start
SUBROUTINE nl_set_j_parent_start ( id_id , j_parent_start )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: j_parent_start
  INTEGER id_id
  model_config_rec%j_parent_start(id_id) = j_parent_start
  RETURN
END SUBROUTINE nl_set_j_parent_start
SUBROUTINE nl_set_parent_grid_ratio ( id_id , parent_grid_ratio )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: parent_grid_ratio
  INTEGER id_id
  model_config_rec%parent_grid_ratio(id_id) = parent_grid_ratio
  RETURN
END SUBROUTINE nl_set_parent_grid_ratio
SUBROUTINE nl_set_parent_time_step_ratio ( id_id , parent_time_step_ratio )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: parent_time_step_ratio
  INTEGER id_id
  model_config_rec%parent_time_step_ratio(id_id) = parent_time_step_ratio
  RETURN
END SUBROUTINE nl_set_parent_time_step_ratio
SUBROUTINE nl_set_feedback ( id_id , feedback )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: feedback
  INTEGER id_id
  model_config_rec%feedback = feedback 
  RETURN
END SUBROUTINE nl_set_feedback
SUBROUTINE nl_set_smooth_option ( id_id , smooth_option )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: smooth_option
  INTEGER id_id
  model_config_rec%smooth_option = smooth_option 
  RETURN
END SUBROUTINE nl_set_smooth_option
SUBROUTINE nl_set_blend_width ( id_id , blend_width )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: blend_width
  INTEGER id_id
  model_config_rec%blend_width = blend_width 
  RETURN
END SUBROUTINE nl_set_blend_width
SUBROUTINE nl_set_ztop ( id_id , ztop )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: ztop
  INTEGER id_id
  model_config_rec%ztop(id_id) = ztop
  RETURN
END SUBROUTINE nl_set_ztop
SUBROUTINE nl_set_moad_grid_ratio ( id_id , moad_grid_ratio )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: moad_grid_ratio
  INTEGER id_id
  model_config_rec%moad_grid_ratio(id_id) = moad_grid_ratio
  RETURN
END SUBROUTINE nl_set_moad_grid_ratio
SUBROUTINE nl_set_moad_time_step_ratio ( id_id , moad_time_step_ratio )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: moad_time_step_ratio
  INTEGER id_id
  model_config_rec%moad_time_step_ratio(id_id) = moad_time_step_ratio
  RETURN
END SUBROUTINE nl_set_moad_time_step_ratio
SUBROUTINE nl_set_shw ( id_id , shw )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: shw
  INTEGER id_id
  model_config_rec%shw(id_id) = shw
  RETURN
END SUBROUTINE nl_set_shw
SUBROUTINE nl_set_tile_sz_x ( id_id , tile_sz_x )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: tile_sz_x
  INTEGER id_id
  model_config_rec%tile_sz_x = tile_sz_x 
  RETURN
END SUBROUTINE nl_set_tile_sz_x
SUBROUTINE nl_set_tile_sz_y ( id_id , tile_sz_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: tile_sz_y
  INTEGER id_id
  model_config_rec%tile_sz_y = tile_sz_y 
  RETURN
END SUBROUTINE nl_set_tile_sz_y
SUBROUTINE nl_set_numtiles ( id_id , numtiles )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: numtiles
  INTEGER id_id
  model_config_rec%numtiles = numtiles 
  RETURN
END SUBROUTINE nl_set_numtiles
SUBROUTINE nl_set_numtiles_inc ( id_id , numtiles_inc )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: numtiles_inc
  INTEGER id_id
  model_config_rec%numtiles_inc = numtiles_inc 
  RETURN
END SUBROUTINE nl_set_numtiles_inc
SUBROUTINE nl_set_numtiles_x ( id_id , numtiles_x )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: numtiles_x
  INTEGER id_id
  model_config_rec%numtiles_x = numtiles_x 
  RETURN
END SUBROUTINE nl_set_numtiles_x
SUBROUTINE nl_set_numtiles_y ( id_id , numtiles_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: numtiles_y
  INTEGER id_id
  model_config_rec%numtiles_y = numtiles_y 
  RETURN
END SUBROUTINE nl_set_numtiles_y
SUBROUTINE nl_set_tile_strategy ( id_id , tile_strategy )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: tile_strategy
  INTEGER id_id
  model_config_rec%tile_strategy = tile_strategy 
  RETURN
END SUBROUTINE nl_set_tile_strategy
SUBROUTINE nl_set_nproc_x ( id_id , nproc_x )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: nproc_x
  INTEGER id_id
  model_config_rec%nproc_x = nproc_x 
  RETURN
END SUBROUTINE nl_set_nproc_x
SUBROUTINE nl_set_nproc_y ( id_id , nproc_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: nproc_y
  INTEGER id_id
  model_config_rec%nproc_y = nproc_y 
  RETURN
END SUBROUTINE nl_set_nproc_y
SUBROUTINE nl_set_irand ( id_id , irand )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: irand
  INTEGER id_id
  model_config_rec%irand = irand 
  RETURN
END SUBROUTINE nl_set_irand
SUBROUTINE nl_set_dt ( id_id , dt )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: dt
  INTEGER id_id
  model_config_rec%dt(id_id) = dt
  RETURN
END SUBROUTINE nl_set_dt
SUBROUTINE nl_set_fft_used ( id_id , fft_used )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: fft_used
  INTEGER id_id
  model_config_rec%fft_used = fft_used 
  RETURN
END SUBROUTINE nl_set_fft_used
SUBROUTINE nl_set_cu_used ( id_id , cu_used )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: cu_used
  INTEGER id_id
  model_config_rec%cu_used = cu_used 
  RETURN
END SUBROUTINE nl_set_cu_used
SUBROUTINE nl_set_shcu_used ( id_id , shcu_used )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: shcu_used
  INTEGER id_id
  model_config_rec%shcu_used = shcu_used 
  RETURN
END SUBROUTINE nl_set_shcu_used
SUBROUTINE nl_set_cam_used ( id_id , cam_used )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: cam_used
  INTEGER id_id
  model_config_rec%cam_used = cam_used 
  RETURN
END SUBROUTINE nl_set_cam_used
SUBROUTINE nl_set_alloc_qndropsource ( id_id , alloc_qndropsource )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: alloc_qndropsource
  INTEGER id_id
  model_config_rec%alloc_qndropsource = alloc_qndropsource 
  RETURN
END SUBROUTINE nl_set_alloc_qndropsource
SUBROUTINE nl_set_num_moves ( id_id , num_moves )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: num_moves
  INTEGER id_id
  model_config_rec%num_moves = num_moves 
  RETURN
END SUBROUTINE nl_set_num_moves
SUBROUTINE nl_set_ts_buf_size ( id_id , ts_buf_size )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: ts_buf_size
  INTEGER id_id
  model_config_rec%ts_buf_size = ts_buf_size 
  RETURN
END SUBROUTINE nl_set_ts_buf_size
SUBROUTINE nl_set_max_ts_locs ( id_id , max_ts_locs )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: max_ts_locs
  INTEGER id_id
  model_config_rec%max_ts_locs = max_ts_locs 
  RETURN
END SUBROUTINE nl_set_max_ts_locs
SUBROUTINE nl_set_vortex_interval ( id_id , vortex_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: vortex_interval
  INTEGER id_id
  model_config_rec%vortex_interval(id_id) = vortex_interval
  RETURN
END SUBROUTINE nl_set_vortex_interval
SUBROUTINE nl_set_max_vortex_speed ( id_id , max_vortex_speed )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: max_vortex_speed
  INTEGER id_id
  model_config_rec%max_vortex_speed(id_id) = max_vortex_speed
  RETURN
END SUBROUTINE nl_set_max_vortex_speed
SUBROUTINE nl_set_corral_dist ( id_id , corral_dist )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: corral_dist
  INTEGER id_id
  model_config_rec%corral_dist(id_id) = corral_dist
  RETURN
END SUBROUTINE nl_set_corral_dist
SUBROUTINE nl_set_track_level ( id_id , track_level )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: track_level
  INTEGER id_id
  model_config_rec%track_level = track_level 
  RETURN
END SUBROUTINE nl_set_track_level
SUBROUTINE nl_set_time_to_move ( id_id , time_to_move )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: time_to_move
  INTEGER id_id
  model_config_rec%time_to_move(id_id) = time_to_move
  RETURN
END SUBROUTINE nl_set_time_to_move
SUBROUTINE nl_set_move_id ( id_id , move_id )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: move_id
  INTEGER id_id
  model_config_rec%move_id(id_id) = move_id
  RETURN
END SUBROUTINE nl_set_move_id
SUBROUTINE nl_set_move_interval ( id_id , move_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: move_interval
  INTEGER id_id
  model_config_rec%move_interval(id_id) = move_interval
  RETURN
END SUBROUTINE nl_set_move_interval
SUBROUTINE nl_set_move_cd_x ( id_id , move_cd_x )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: move_cd_x
  INTEGER id_id
  model_config_rec%move_cd_x(id_id) = move_cd_x
  RETURN
END SUBROUTINE nl_set_move_cd_x
SUBROUTINE nl_set_move_cd_y ( id_id , move_cd_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: move_cd_y
  INTEGER id_id
  model_config_rec%move_cd_y(id_id) = move_cd_y
  RETURN
END SUBROUTINE nl_set_move_cd_y
SUBROUTINE nl_set_swap_x ( id_id , swap_x )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: swap_x
  INTEGER id_id
  model_config_rec%swap_x(id_id) = swap_x
  RETURN
END SUBROUTINE nl_set_swap_x
SUBROUTINE nl_set_swap_y ( id_id , swap_y )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: swap_y
  INTEGER id_id
  model_config_rec%swap_y(id_id) = swap_y
  RETURN
END SUBROUTINE nl_set_swap_y
SUBROUTINE nl_set_cycle_x ( id_id , cycle_x )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: cycle_x
  INTEGER id_id
  model_config_rec%cycle_x(id_id) = cycle_x
  RETURN
END SUBROUTINE nl_set_cycle_x
SUBROUTINE nl_set_cycle_y ( id_id , cycle_y )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: cycle_y
  INTEGER id_id
  model_config_rec%cycle_y(id_id) = cycle_y
  RETURN
END SUBROUTINE nl_set_cycle_y
SUBROUTINE nl_set_reorder_mesh ( id_id , reorder_mesh )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: reorder_mesh
  INTEGER id_id
  model_config_rec%reorder_mesh = reorder_mesh 
  RETURN
END SUBROUTINE nl_set_reorder_mesh
SUBROUTINE nl_set_perturb_input ( id_id , perturb_input )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: perturb_input
  INTEGER id_id
  model_config_rec%perturb_input = perturb_input 
  RETURN
END SUBROUTINE nl_set_perturb_input
SUBROUTINE nl_set_eta_levels ( id_id , eta_levels )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: eta_levels
  INTEGER id_id
  model_config_rec%eta_levels(id_id) = eta_levels
  RETURN
END SUBROUTINE nl_set_eta_levels
SUBROUTINE nl_set_auto_levels_opt ( id_id , auto_levels_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auto_levels_opt
  INTEGER id_id
  model_config_rec%auto_levels_opt = auto_levels_opt 
  RETURN
END SUBROUTINE nl_set_auto_levels_opt
SUBROUTINE nl_set_max_dz ( id_id , max_dz )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: max_dz
  INTEGER id_id
  model_config_rec%max_dz = max_dz 
  RETURN
END SUBROUTINE nl_set_max_dz
SUBROUTINE nl_set_dzbot ( id_id , dzbot )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: dzbot
  INTEGER id_id
  model_config_rec%dzbot = dzbot 
  RETURN
END SUBROUTINE nl_set_dzbot
SUBROUTINE nl_set_dzstretch_s ( id_id , dzstretch_s )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: dzstretch_s
  INTEGER id_id
  model_config_rec%dzstretch_s = dzstretch_s 
  RETURN
END SUBROUTINE nl_set_dzstretch_s
SUBROUTINE nl_set_dzstretch_u ( id_id , dzstretch_u )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: dzstretch_u
  INTEGER id_id
  model_config_rec%dzstretch_u = dzstretch_u 
  RETURN
END SUBROUTINE nl_set_dzstretch_u
SUBROUTINE nl_set_ocean_levels ( id_id , ocean_levels )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: ocean_levels
  INTEGER id_id
  model_config_rec%ocean_levels = ocean_levels 
  RETURN
END SUBROUTINE nl_set_ocean_levels
SUBROUTINE nl_set_ocean_z ( id_id , ocean_z )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: ocean_z
  INTEGER id_id
  model_config_rec%ocean_z(id_id) = ocean_z
  RETURN
END SUBROUTINE nl_set_ocean_z
SUBROUTINE nl_set_ocean_t ( id_id , ocean_t )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: ocean_t
  INTEGER id_id
  model_config_rec%ocean_t(id_id) = ocean_t
  RETURN
END SUBROUTINE nl_set_ocean_t
SUBROUTINE nl_set_ocean_s ( id_id , ocean_s )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: ocean_s
  INTEGER id_id
  model_config_rec%ocean_s(id_id) = ocean_s
  RETURN
END SUBROUTINE nl_set_ocean_s
SUBROUTINE nl_set_num_traj ( id_id , num_traj )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: num_traj
  INTEGER id_id
  model_config_rec%num_traj = num_traj 
  RETURN
END SUBROUTINE nl_set_num_traj
SUBROUTINE nl_set_max_ts_level ( id_id , max_ts_level )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: max_ts_level
  INTEGER id_id
  model_config_rec%max_ts_level = max_ts_level 
  RETURN
END SUBROUTINE nl_set_max_ts_level
SUBROUTINE nl_set_track_loc_in ( id_id , track_loc_in )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: track_loc_in
  INTEGER id_id
  model_config_rec%track_loc_in = track_loc_in 
  RETURN
END SUBROUTINE nl_set_track_loc_in
SUBROUTINE nl_set_num_ext_model_couple_dom ( id_id , num_ext_model_couple_dom )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: num_ext_model_couple_dom
  INTEGER id_id
  model_config_rec%num_ext_model_couple_dom = num_ext_model_couple_dom 
  RETURN
END SUBROUTINE nl_set_num_ext_model_couple_dom
SUBROUTINE nl_set_insert_bogus_storm ( id_id , insert_bogus_storm )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: insert_bogus_storm
  INTEGER id_id
  model_config_rec%insert_bogus_storm = insert_bogus_storm 
  RETURN
END SUBROUTINE nl_set_insert_bogus_storm
SUBROUTINE nl_set_remove_storm ( id_id , remove_storm )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: remove_storm
  INTEGER id_id
  model_config_rec%remove_storm = remove_storm 
  RETURN
END SUBROUTINE nl_set_remove_storm
SUBROUTINE nl_set_num_storm ( id_id , num_storm )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: num_storm
  INTEGER id_id
  model_config_rec%num_storm = num_storm 
  RETURN
END SUBROUTINE nl_set_num_storm
SUBROUTINE nl_set_latc_loc ( id_id , latc_loc )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: latc_loc
  INTEGER id_id
  model_config_rec%latc_loc(id_id) = latc_loc
  RETURN
END SUBROUTINE nl_set_latc_loc
SUBROUTINE nl_set_lonc_loc ( id_id , lonc_loc )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: lonc_loc
  INTEGER id_id
  model_config_rec%lonc_loc(id_id) = lonc_loc
  RETURN
END SUBROUTINE nl_set_lonc_loc
SUBROUTINE nl_set_vmax_meters_per_second ( id_id , vmax_meters_per_second )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: vmax_meters_per_second
  INTEGER id_id
  model_config_rec%vmax_meters_per_second(id_id) = vmax_meters_per_second
  RETURN
END SUBROUTINE nl_set_vmax_meters_per_second
SUBROUTINE nl_set_rmax ( id_id , rmax )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: rmax
  INTEGER id_id
  model_config_rec%rmax(id_id) = rmax
  RETURN
END SUBROUTINE nl_set_rmax
SUBROUTINE nl_set_vmax_ratio ( id_id , vmax_ratio )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: vmax_ratio
  INTEGER id_id
  model_config_rec%vmax_ratio(id_id) = vmax_ratio
  RETURN
END SUBROUTINE nl_set_vmax_ratio
SUBROUTINE nl_set_rankine_lid ( id_id , rankine_lid )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: rankine_lid
  INTEGER id_id
  model_config_rec%rankine_lid = rankine_lid 
  RETURN
END SUBROUTINE nl_set_rankine_lid
SUBROUTINE nl_set_physics_suite ( id_id , physics_suite )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: physics_suite
  INTEGER id_id
  model_config_rec%physics_suite = trim(physics_suite) 
  RETURN
END SUBROUTINE nl_set_physics_suite
SUBROUTINE nl_set_force_read_thompson ( id_id , force_read_thompson )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: force_read_thompson
  INTEGER id_id
  model_config_rec%force_read_thompson = force_read_thompson 
  RETURN
END SUBROUTINE nl_set_force_read_thompson
SUBROUTINE nl_set_write_thompson_tables ( id_id , write_thompson_tables )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: write_thompson_tables
  INTEGER id_id
  model_config_rec%write_thompson_tables = write_thompson_tables 
  RETURN
END SUBROUTINE nl_set_write_thompson_tables
SUBROUTINE nl_set_mp_physics ( id_id , mp_physics )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: mp_physics
  INTEGER id_id
  model_config_rec%mp_physics(id_id) = mp_physics
  RETURN
END SUBROUTINE nl_set_mp_physics
SUBROUTINE nl_set_nssl_cccn ( id_id , nssl_cccn )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: nssl_cccn
  INTEGER id_id
  model_config_rec%nssl_cccn(id_id) = nssl_cccn
  RETURN
END SUBROUTINE nl_set_nssl_cccn
SUBROUTINE nl_set_nssl_alphah ( id_id , nssl_alphah )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: nssl_alphah
  INTEGER id_id
  model_config_rec%nssl_alphah(id_id) = nssl_alphah
  RETURN
END SUBROUTINE nl_set_nssl_alphah
SUBROUTINE nl_set_nssl_alphahl ( id_id , nssl_alphahl )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: nssl_alphahl
  INTEGER id_id
  model_config_rec%nssl_alphahl(id_id) = nssl_alphahl
  RETURN
END SUBROUTINE nl_set_nssl_alphahl
SUBROUTINE nl_set_nssl_cnoh ( id_id , nssl_cnoh )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: nssl_cnoh
  INTEGER id_id
  model_config_rec%nssl_cnoh(id_id) = nssl_cnoh
  RETURN
END SUBROUTINE nl_set_nssl_cnoh
SUBROUTINE nl_set_nssl_cnohl ( id_id , nssl_cnohl )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: nssl_cnohl
  INTEGER id_id
  model_config_rec%nssl_cnohl(id_id) = nssl_cnohl
  RETURN
END SUBROUTINE nl_set_nssl_cnohl
SUBROUTINE nl_set_nssl_cnor ( id_id , nssl_cnor )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: nssl_cnor
  INTEGER id_id
  model_config_rec%nssl_cnor(id_id) = nssl_cnor
  RETURN
END SUBROUTINE nl_set_nssl_cnor
SUBROUTINE nl_set_nssl_cnos ( id_id , nssl_cnos )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: nssl_cnos
  INTEGER id_id
  model_config_rec%nssl_cnos(id_id) = nssl_cnos
  RETURN
END SUBROUTINE nl_set_nssl_cnos
SUBROUTINE nl_set_nssl_rho_qh ( id_id , nssl_rho_qh )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: nssl_rho_qh
  INTEGER id_id
  model_config_rec%nssl_rho_qh(id_id) = nssl_rho_qh
  RETURN
END SUBROUTINE nl_set_nssl_rho_qh
SUBROUTINE nl_set_nssl_rho_qhl ( id_id , nssl_rho_qhl )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: nssl_rho_qhl
  INTEGER id_id
  model_config_rec%nssl_rho_qhl(id_id) = nssl_rho_qhl
  RETURN
END SUBROUTINE nl_set_nssl_rho_qhl
SUBROUTINE nl_set_nssl_rho_qs ( id_id , nssl_rho_qs )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: nssl_rho_qs
  INTEGER id_id
  model_config_rec%nssl_rho_qs(id_id) = nssl_rho_qs
  RETURN
END SUBROUTINE nl_set_nssl_rho_qs
SUBROUTINE nl_set_nudge_lightning ( id_id , nudge_lightning )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: nudge_lightning
  INTEGER id_id
  model_config_rec%nudge_lightning(id_id) = nudge_lightning
  RETURN
END SUBROUTINE nl_set_nudge_lightning
SUBROUTINE nl_set_nudge_light_times ( id_id , nudge_light_times )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: nudge_light_times
  INTEGER id_id
  model_config_rec%nudge_light_times(id_id) = nudge_light_times
  RETURN
END SUBROUTINE nl_set_nudge_light_times
SUBROUTINE nl_set_nudge_light_timee ( id_id , nudge_light_timee )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: nudge_light_timee
  INTEGER id_id
  model_config_rec%nudge_light_timee(id_id) = nudge_light_timee
  RETURN
END SUBROUTINE nl_set_nudge_light_timee
SUBROUTINE nl_set_nudge_light_int ( id_id , nudge_light_int )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: nudge_light_int
  INTEGER id_id
  model_config_rec%nudge_light_int(id_id) = nudge_light_int
  RETURN
END SUBROUTINE nl_set_nudge_light_int
SUBROUTINE nl_set_path_to_files ( id_id , path_to_files )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: path_to_files
  INTEGER id_id
  model_config_rec%path_to_files = trim(path_to_files) 
  RETURN
END SUBROUTINE nl_set_path_to_files
SUBROUTINE nl_set_gsfcgce_hail ( id_id , gsfcgce_hail )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: gsfcgce_hail
  INTEGER id_id
  model_config_rec%gsfcgce_hail = gsfcgce_hail 
  RETURN
END SUBROUTINE nl_set_gsfcgce_hail
SUBROUTINE nl_set_gsfcgce_2ice ( id_id , gsfcgce_2ice )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: gsfcgce_2ice
  INTEGER id_id
  model_config_rec%gsfcgce_2ice = gsfcgce_2ice 
  RETURN
END SUBROUTINE nl_set_gsfcgce_2ice
SUBROUTINE nl_set_progn ( id_id , progn )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: progn
  INTEGER id_id
  model_config_rec%progn(id_id) = progn
  RETURN
END SUBROUTINE nl_set_progn
SUBROUTINE nl_set_accum_mode ( id_id , accum_mode )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: accum_mode
  INTEGER id_id
  model_config_rec%accum_mode = accum_mode 
  RETURN
END SUBROUTINE nl_set_accum_mode
SUBROUTINE nl_set_aitken_mode ( id_id , aitken_mode )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: aitken_mode
  INTEGER id_id
  model_config_rec%aitken_mode = aitken_mode 
  RETURN
END SUBROUTINE nl_set_aitken_mode
SUBROUTINE nl_set_coarse_mode ( id_id , coarse_mode )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: coarse_mode
  INTEGER id_id
  model_config_rec%coarse_mode = coarse_mode 
  RETURN
END SUBROUTINE nl_set_coarse_mode
SUBROUTINE nl_set_do_radar_ref ( id_id , do_radar_ref )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: do_radar_ref
  INTEGER id_id
  model_config_rec%do_radar_ref = do_radar_ref 
  RETURN
END SUBROUTINE nl_set_do_radar_ref
SUBROUTINE nl_set_compute_radar_ref ( id_id , compute_radar_ref )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: compute_radar_ref
  INTEGER id_id
  model_config_rec%compute_radar_ref = compute_radar_ref 
  RETURN
END SUBROUTINE nl_set_compute_radar_ref
SUBROUTINE nl_set_ra_lw_physics ( id_id , ra_lw_physics )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: ra_lw_physics
  INTEGER id_id
  model_config_rec%ra_lw_physics(id_id) = ra_lw_physics
  RETURN
END SUBROUTINE nl_set_ra_lw_physics
SUBROUTINE nl_set_ra_sw_physics ( id_id , ra_sw_physics )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: ra_sw_physics
  INTEGER id_id
  model_config_rec%ra_sw_physics(id_id) = ra_sw_physics
  RETURN
END SUBROUTINE nl_set_ra_sw_physics
SUBROUTINE nl_set_radt ( id_id , radt )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: radt
  INTEGER id_id
  model_config_rec%radt(id_id) = radt
  RETURN
END SUBROUTINE nl_set_radt
SUBROUTINE nl_set_naer ( id_id , naer )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: naer
  INTEGER id_id
  model_config_rec%naer(id_id) = naer
  RETURN
END SUBROUTINE nl_set_naer
SUBROUTINE nl_set_sf_sfclay_physics ( id_id , sf_sfclay_physics )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: sf_sfclay_physics
  INTEGER id_id
  model_config_rec%sf_sfclay_physics(id_id) = sf_sfclay_physics
  RETURN
END SUBROUTINE nl_set_sf_sfclay_physics
SUBROUTINE nl_set_sf_surface_physics ( id_id , sf_surface_physics )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: sf_surface_physics
  INTEGER id_id
  model_config_rec%sf_surface_physics(id_id) = sf_surface_physics
  RETURN
END SUBROUTINE nl_set_sf_surface_physics
SUBROUTINE nl_set_bl_pbl_physics ( id_id , bl_pbl_physics )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: bl_pbl_physics
  INTEGER id_id
  model_config_rec%bl_pbl_physics(id_id) = bl_pbl_physics
  RETURN
END SUBROUTINE nl_set_bl_pbl_physics
SUBROUTINE nl_set_bl_mynn_tkebudget ( id_id , bl_mynn_tkebudget )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: bl_mynn_tkebudget
  INTEGER id_id
  model_config_rec%bl_mynn_tkebudget(id_id) = bl_mynn_tkebudget
  RETURN
END SUBROUTINE nl_set_bl_mynn_tkebudget
SUBROUTINE nl_set_ysu_topdown_pblmix ( id_id , ysu_topdown_pblmix )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: ysu_topdown_pblmix
  INTEGER id_id
  model_config_rec%ysu_topdown_pblmix = ysu_topdown_pblmix 
  RETURN
END SUBROUTINE nl_set_ysu_topdown_pblmix
SUBROUTINE nl_set_shinhong_tke_diag ( id_id , shinhong_tke_diag )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: shinhong_tke_diag
  INTEGER id_id
  model_config_rec%shinhong_tke_diag(id_id) = shinhong_tke_diag
  RETURN
END SUBROUTINE nl_set_shinhong_tke_diag
SUBROUTINE nl_set_bl_mynn_tkeadvect ( id_id , bl_mynn_tkeadvect )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: bl_mynn_tkeadvect
  INTEGER id_id
  model_config_rec%bl_mynn_tkeadvect(id_id) = bl_mynn_tkeadvect
  RETURN
END SUBROUTINE nl_set_bl_mynn_tkeadvect
SUBROUTINE nl_set_bl_mynn_cloudpdf ( id_id , bl_mynn_cloudpdf )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: bl_mynn_cloudpdf
  INTEGER id_id
  model_config_rec%bl_mynn_cloudpdf = bl_mynn_cloudpdf 
  RETURN
END SUBROUTINE nl_set_bl_mynn_cloudpdf
SUBROUTINE nl_set_bl_mynn_mixlength ( id_id , bl_mynn_mixlength )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: bl_mynn_mixlength
  INTEGER id_id
  model_config_rec%bl_mynn_mixlength = bl_mynn_mixlength 
  RETURN
END SUBROUTINE nl_set_bl_mynn_mixlength
SUBROUTINE nl_set_bl_mynn_edmf ( id_id , bl_mynn_edmf )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: bl_mynn_edmf
  INTEGER id_id
  model_config_rec%bl_mynn_edmf(id_id) = bl_mynn_edmf
  RETURN
END SUBROUTINE nl_set_bl_mynn_edmf
SUBROUTINE nl_set_bl_mynn_edmf_mom ( id_id , bl_mynn_edmf_mom )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: bl_mynn_edmf_mom
  INTEGER id_id
  model_config_rec%bl_mynn_edmf_mom(id_id) = bl_mynn_edmf_mom
  RETURN
END SUBROUTINE nl_set_bl_mynn_edmf_mom
SUBROUTINE nl_set_bl_mynn_edmf_tke ( id_id , bl_mynn_edmf_tke )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: bl_mynn_edmf_tke
  INTEGER id_id
  model_config_rec%bl_mynn_edmf_tke(id_id) = bl_mynn_edmf_tke
  RETURN
END SUBROUTINE nl_set_bl_mynn_edmf_tke
SUBROUTINE nl_set_bl_mynn_edmf_part ( id_id , bl_mynn_edmf_part )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: bl_mynn_edmf_part
  INTEGER id_id
  model_config_rec%bl_mynn_edmf_part(id_id) = bl_mynn_edmf_part
  RETURN
END SUBROUTINE nl_set_bl_mynn_edmf_part
SUBROUTINE nl_set_bl_mynn_cloudmix ( id_id , bl_mynn_cloudmix )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: bl_mynn_cloudmix
  INTEGER id_id
  model_config_rec%bl_mynn_cloudmix(id_id) = bl_mynn_cloudmix
  RETURN
END SUBROUTINE nl_set_bl_mynn_cloudmix
SUBROUTINE nl_set_bl_mynn_mixqt ( id_id , bl_mynn_mixqt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: bl_mynn_mixqt
  INTEGER id_id
  model_config_rec%bl_mynn_mixqt(id_id) = bl_mynn_mixqt
  RETURN
END SUBROUTINE nl_set_bl_mynn_mixqt
SUBROUTINE nl_set_icloud_bl ( id_id , icloud_bl )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: icloud_bl
  INTEGER id_id
  model_config_rec%icloud_bl = icloud_bl 
  RETURN
END SUBROUTINE nl_set_icloud_bl
SUBROUTINE nl_set_mfshconv ( id_id , mfshconv )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: mfshconv
  INTEGER id_id
  model_config_rec%mfshconv(id_id) = mfshconv
  RETURN
END SUBROUTINE nl_set_mfshconv
SUBROUTINE nl_set_sf_urban_physics ( id_id , sf_urban_physics )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: sf_urban_physics
  INTEGER id_id
  model_config_rec%sf_urban_physics(id_id) = sf_urban_physics
  RETURN
END SUBROUTINE nl_set_sf_urban_physics
SUBROUTINE nl_set_bldt ( id_id , bldt )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: bldt
  INTEGER id_id
  model_config_rec%bldt(id_id) = bldt
  RETURN
END SUBROUTINE nl_set_bldt
SUBROUTINE nl_set_cu_physics ( id_id , cu_physics )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: cu_physics
  INTEGER id_id
  model_config_rec%cu_physics(id_id) = cu_physics
  RETURN
END SUBROUTINE nl_set_cu_physics
SUBROUTINE nl_set_shcu_physics ( id_id , shcu_physics )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: shcu_physics
  INTEGER id_id
  model_config_rec%shcu_physics(id_id) = shcu_physics
  RETURN
END SUBROUTINE nl_set_shcu_physics
SUBROUTINE nl_set_cu_diag ( id_id , cu_diag )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: cu_diag
  INTEGER id_id
  model_config_rec%cu_diag(id_id) = cu_diag
  RETURN
END SUBROUTINE nl_set_cu_diag
SUBROUTINE nl_set_kf_edrates ( id_id , kf_edrates )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: kf_edrates
  INTEGER id_id
  model_config_rec%kf_edrates(id_id) = kf_edrates
  RETURN
END SUBROUTINE nl_set_kf_edrates
SUBROUTINE nl_set_kfeta_trigger ( id_id , kfeta_trigger )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: kfeta_trigger
  INTEGER id_id
  model_config_rec%kfeta_trigger = kfeta_trigger 
  RETURN
END SUBROUTINE nl_set_kfeta_trigger
SUBROUTINE nl_set_nsas_dx_factor ( id_id , nsas_dx_factor )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: nsas_dx_factor
  INTEGER id_id
  model_config_rec%nsas_dx_factor = nsas_dx_factor 
  RETURN
END SUBROUTINE nl_set_nsas_dx_factor
SUBROUTINE nl_set_cudt ( id_id , cudt )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: cudt
  INTEGER id_id
  model_config_rec%cudt(id_id) = cudt
  RETURN
END SUBROUTINE nl_set_cudt
SUBROUTINE nl_set_gsmdt ( id_id , gsmdt )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: gsmdt
  INTEGER id_id
  model_config_rec%gsmdt(id_id) = gsmdt
  RETURN
END SUBROUTINE nl_set_gsmdt
SUBROUTINE nl_set_isfflx ( id_id , isfflx )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: isfflx
  INTEGER id_id
  model_config_rec%isfflx = isfflx 
  RETURN
END SUBROUTINE nl_set_isfflx
SUBROUTINE nl_set_ifsnow ( id_id , ifsnow )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: ifsnow
  INTEGER id_id
  model_config_rec%ifsnow = ifsnow 
  RETURN
END SUBROUTINE nl_set_ifsnow
#endif
#if (NNN == 1)
SUBROUTINE nl_set_icloud ( id_id , icloud )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: icloud
  INTEGER id_id
  model_config_rec%icloud = icloud 
  RETURN
END SUBROUTINE nl_set_icloud
SUBROUTINE nl_set_ideal_xland ( id_id , ideal_xland )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: ideal_xland
  INTEGER id_id
  model_config_rec%ideal_xland = ideal_xland 
  RETURN
END SUBROUTINE nl_set_ideal_xland
SUBROUTINE nl_set_swrad_scat ( id_id , swrad_scat )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: swrad_scat
  INTEGER id_id
  model_config_rec%swrad_scat = swrad_scat 
  RETURN
END SUBROUTINE nl_set_swrad_scat
SUBROUTINE nl_set_surface_input_source ( id_id , surface_input_source )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: surface_input_source
  INTEGER id_id
  model_config_rec%surface_input_source = surface_input_source 
  RETURN
END SUBROUTINE nl_set_surface_input_source
SUBROUTINE nl_set_num_soil_layers ( id_id , num_soil_layers )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: num_soil_layers
  INTEGER id_id
  model_config_rec%num_soil_layers = num_soil_layers 
  RETURN
END SUBROUTINE nl_set_num_soil_layers
SUBROUTINE nl_set_maxpatch ( id_id , maxpatch )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: maxpatch
  INTEGER id_id
  model_config_rec%maxpatch = maxpatch 
  RETURN
END SUBROUTINE nl_set_maxpatch
SUBROUTINE nl_set_num_snow_layers ( id_id , num_snow_layers )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: num_snow_layers
  INTEGER id_id
  model_config_rec%num_snow_layers = num_snow_layers 
  RETURN
END SUBROUTINE nl_set_num_snow_layers
SUBROUTINE nl_set_num_snso_layers ( id_id , num_snso_layers )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: num_snso_layers
  INTEGER id_id
  model_config_rec%num_snso_layers = num_snso_layers 
  RETURN
END SUBROUTINE nl_set_num_snso_layers
SUBROUTINE nl_set_num_urban_layers ( id_id , num_urban_layers )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: num_urban_layers
  INTEGER id_id
  model_config_rec%num_urban_layers = num_urban_layers 
  RETURN
END SUBROUTINE nl_set_num_urban_layers
SUBROUTINE nl_set_num_urban_hi ( id_id , num_urban_hi )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: num_urban_hi
  INTEGER id_id
  model_config_rec%num_urban_hi = num_urban_hi 
  RETURN
END SUBROUTINE nl_set_num_urban_hi
SUBROUTINE nl_set_num_months ( id_id , num_months )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: num_months
  INTEGER id_id
  model_config_rec%num_months = num_months 
  RETURN
END SUBROUTINE nl_set_num_months
SUBROUTINE nl_set_sf_surface_mosaic ( id_id , sf_surface_mosaic )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: sf_surface_mosaic
  INTEGER id_id
  model_config_rec%sf_surface_mosaic = sf_surface_mosaic 
  RETURN
END SUBROUTINE nl_set_sf_surface_mosaic
SUBROUTINE nl_set_mosaic_cat ( id_id , mosaic_cat )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: mosaic_cat
  INTEGER id_id
  model_config_rec%mosaic_cat = mosaic_cat 
  RETURN
END SUBROUTINE nl_set_mosaic_cat
SUBROUTINE nl_set_mosaic_cat_soil ( id_id , mosaic_cat_soil )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: mosaic_cat_soil
  INTEGER id_id
  model_config_rec%mosaic_cat_soil = mosaic_cat_soil 
  RETURN
END SUBROUTINE nl_set_mosaic_cat_soil
SUBROUTINE nl_set_mosaic_lu ( id_id , mosaic_lu )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: mosaic_lu
  INTEGER id_id
  model_config_rec%mosaic_lu = mosaic_lu 
  RETURN
END SUBROUTINE nl_set_mosaic_lu
SUBROUTINE nl_set_mosaic_soil ( id_id , mosaic_soil )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: mosaic_soil
  INTEGER id_id
  model_config_rec%mosaic_soil = mosaic_soil 
  RETURN
END SUBROUTINE nl_set_mosaic_soil
SUBROUTINE nl_set_maxiens ( id_id , maxiens )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: maxiens
  INTEGER id_id
  model_config_rec%maxiens = maxiens 
  RETURN
END SUBROUTINE nl_set_maxiens
SUBROUTINE nl_set_maxens ( id_id , maxens )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: maxens
  INTEGER id_id
  model_config_rec%maxens = maxens 
  RETURN
END SUBROUTINE nl_set_maxens
SUBROUTINE nl_set_maxens2 ( id_id , maxens2 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: maxens2
  INTEGER id_id
  model_config_rec%maxens2 = maxens2 
  RETURN
END SUBROUTINE nl_set_maxens2
SUBROUTINE nl_set_maxens3 ( id_id , maxens3 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: maxens3
  INTEGER id_id
  model_config_rec%maxens3 = maxens3 
  RETURN
END SUBROUTINE nl_set_maxens3
SUBROUTINE nl_set_ensdim ( id_id , ensdim )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: ensdim
  INTEGER id_id
  model_config_rec%ensdim = ensdim 
  RETURN
END SUBROUTINE nl_set_ensdim
SUBROUTINE nl_set_cugd_avedx ( id_id , cugd_avedx )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: cugd_avedx
  INTEGER id_id
  model_config_rec%cugd_avedx = cugd_avedx 
  RETURN
END SUBROUTINE nl_set_cugd_avedx
SUBROUTINE nl_set_clos_choice ( id_id , clos_choice )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: clos_choice
  INTEGER id_id
  model_config_rec%clos_choice = clos_choice 
  RETURN
END SUBROUTINE nl_set_clos_choice
SUBROUTINE nl_set_imomentum ( id_id , imomentum )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: imomentum
  INTEGER id_id
  model_config_rec%imomentum = imomentum 
  RETURN
END SUBROUTINE nl_set_imomentum
SUBROUTINE nl_set_ishallow ( id_id , ishallow )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: ishallow
  INTEGER id_id
  model_config_rec%ishallow = ishallow 
  RETURN
END SUBROUTINE nl_set_ishallow
SUBROUTINE nl_set_convtrans_avglen_m ( id_id , convtrans_avglen_m )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: convtrans_avglen_m
  INTEGER id_id
  model_config_rec%convtrans_avglen_m = convtrans_avglen_m 
  RETURN
END SUBROUTINE nl_set_convtrans_avglen_m
SUBROUTINE nl_set_num_land_cat ( id_id , num_land_cat )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: num_land_cat
  INTEGER id_id
  model_config_rec%num_land_cat = num_land_cat 
  RETURN
END SUBROUTINE nl_set_num_land_cat
SUBROUTINE nl_set_num_soil_cat ( id_id , num_soil_cat )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: num_soil_cat
  INTEGER id_id
  model_config_rec%num_soil_cat = num_soil_cat 
  RETURN
END SUBROUTINE nl_set_num_soil_cat
SUBROUTINE nl_set_mp_zero_out ( id_id , mp_zero_out )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: mp_zero_out
  INTEGER id_id
  model_config_rec%mp_zero_out = mp_zero_out 
  RETURN
END SUBROUTINE nl_set_mp_zero_out
SUBROUTINE nl_set_mp_zero_out_thresh ( id_id , mp_zero_out_thresh )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: mp_zero_out_thresh
  INTEGER id_id
  model_config_rec%mp_zero_out_thresh = mp_zero_out_thresh 
  RETURN
END SUBROUTINE nl_set_mp_zero_out_thresh
SUBROUTINE nl_set_seaice_threshold ( id_id , seaice_threshold )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: seaice_threshold
  INTEGER id_id
  model_config_rec%seaice_threshold = seaice_threshold 
  RETURN
END SUBROUTINE nl_set_seaice_threshold
SUBROUTINE nl_set_sst_update ( id_id , sst_update )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: sst_update
  INTEGER id_id
  model_config_rec%sst_update = sst_update 
  RETURN
END SUBROUTINE nl_set_sst_update
SUBROUTINE nl_set_sst_skin ( id_id , sst_skin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: sst_skin
  INTEGER id_id
  model_config_rec%sst_skin = sst_skin 
  RETURN
END SUBROUTINE nl_set_sst_skin
SUBROUTINE nl_set_tmn_update ( id_id , tmn_update )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: tmn_update
  INTEGER id_id
  model_config_rec%tmn_update = tmn_update 
  RETURN
END SUBROUTINE nl_set_tmn_update
SUBROUTINE nl_set_usemonalb ( id_id , usemonalb )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: usemonalb
  INTEGER id_id
  model_config_rec%usemonalb = usemonalb 
  RETURN
END SUBROUTINE nl_set_usemonalb
SUBROUTINE nl_set_rdmaxalb ( id_id , rdmaxalb )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: rdmaxalb
  INTEGER id_id
  model_config_rec%rdmaxalb = rdmaxalb 
  RETURN
END SUBROUTINE nl_set_rdmaxalb
SUBROUTINE nl_set_rdlai2d ( id_id , rdlai2d )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: rdlai2d
  INTEGER id_id
  model_config_rec%rdlai2d = rdlai2d 
  RETURN
END SUBROUTINE nl_set_rdlai2d
SUBROUTINE nl_set_ua_phys ( id_id , ua_phys )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: ua_phys
  INTEGER id_id
  model_config_rec%ua_phys = ua_phys 
  RETURN
END SUBROUTINE nl_set_ua_phys
SUBROUTINE nl_set_opt_thcnd ( id_id , opt_thcnd )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: opt_thcnd
  INTEGER id_id
  model_config_rec%opt_thcnd = opt_thcnd 
  RETURN
END SUBROUTINE nl_set_opt_thcnd
SUBROUTINE nl_set_co2tf ( id_id , co2tf )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: co2tf
  INTEGER id_id
  model_config_rec%co2tf = co2tf 
  RETURN
END SUBROUTINE nl_set_co2tf
SUBROUTINE nl_set_ra_call_offset ( id_id , ra_call_offset )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: ra_call_offset
  INTEGER id_id
  model_config_rec%ra_call_offset = ra_call_offset 
  RETURN
END SUBROUTINE nl_set_ra_call_offset
SUBROUTINE nl_set_cam_abs_freq_s ( id_id , cam_abs_freq_s )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: cam_abs_freq_s
  INTEGER id_id
  model_config_rec%cam_abs_freq_s = cam_abs_freq_s 
  RETURN
END SUBROUTINE nl_set_cam_abs_freq_s
SUBROUTINE nl_set_levsiz ( id_id , levsiz )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: levsiz
  INTEGER id_id
  model_config_rec%levsiz = levsiz 
  RETURN
END SUBROUTINE nl_set_levsiz
SUBROUTINE nl_set_paerlev ( id_id , paerlev )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: paerlev
  INTEGER id_id
  model_config_rec%paerlev = paerlev 
  RETURN
END SUBROUTINE nl_set_paerlev
SUBROUTINE nl_set_cam_abs_dim1 ( id_id , cam_abs_dim1 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: cam_abs_dim1
  INTEGER id_id
  model_config_rec%cam_abs_dim1 = cam_abs_dim1 
  RETURN
END SUBROUTINE nl_set_cam_abs_dim1
SUBROUTINE nl_set_cam_abs_dim2 ( id_id , cam_abs_dim2 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: cam_abs_dim2
  INTEGER id_id
  model_config_rec%cam_abs_dim2 = cam_abs_dim2 
  RETURN
END SUBROUTINE nl_set_cam_abs_dim2
SUBROUTINE nl_set_lagday ( id_id , lagday )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: lagday
  INTEGER id_id
  model_config_rec%lagday = lagday 
  RETURN
END SUBROUTINE nl_set_lagday
SUBROUTINE nl_set_no_src_types ( id_id , no_src_types )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: no_src_types
  INTEGER id_id
  model_config_rec%no_src_types = no_src_types 
  RETURN
END SUBROUTINE nl_set_no_src_types
SUBROUTINE nl_set_alevsiz ( id_id , alevsiz )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: alevsiz
  INTEGER id_id
  model_config_rec%alevsiz = alevsiz 
  RETURN
END SUBROUTINE nl_set_alevsiz
SUBROUTINE nl_set_o3input ( id_id , o3input )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: o3input
  INTEGER id_id
  model_config_rec%o3input = o3input 
  RETURN
END SUBROUTINE nl_set_o3input
SUBROUTINE nl_set_aer_opt ( id_id , aer_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: aer_opt
  INTEGER id_id
  model_config_rec%aer_opt = aer_opt 
  RETURN
END SUBROUTINE nl_set_aer_opt
SUBROUTINE nl_set_swint_opt ( id_id , swint_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: swint_opt
  INTEGER id_id
  model_config_rec%swint_opt = swint_opt 
  RETURN
END SUBROUTINE nl_set_swint_opt
SUBROUTINE nl_set_aer_type ( id_id , aer_type )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: aer_type
  INTEGER id_id
  model_config_rec%aer_type(id_id) = aer_type
  RETURN
END SUBROUTINE nl_set_aer_type
SUBROUTINE nl_set_aer_aod550_opt ( id_id , aer_aod550_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: aer_aod550_opt
  INTEGER id_id
  model_config_rec%aer_aod550_opt(id_id) = aer_aod550_opt
  RETURN
END SUBROUTINE nl_set_aer_aod550_opt
SUBROUTINE nl_set_aer_angexp_opt ( id_id , aer_angexp_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: aer_angexp_opt
  INTEGER id_id
  model_config_rec%aer_angexp_opt(id_id) = aer_angexp_opt
  RETURN
END SUBROUTINE nl_set_aer_angexp_opt
SUBROUTINE nl_set_aer_ssa_opt ( id_id , aer_ssa_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: aer_ssa_opt
  INTEGER id_id
  model_config_rec%aer_ssa_opt(id_id) = aer_ssa_opt
  RETURN
END SUBROUTINE nl_set_aer_ssa_opt
SUBROUTINE nl_set_aer_asy_opt ( id_id , aer_asy_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: aer_asy_opt
  INTEGER id_id
  model_config_rec%aer_asy_opt(id_id) = aer_asy_opt
  RETURN
END SUBROUTINE nl_set_aer_asy_opt
SUBROUTINE nl_set_aer_aod550_val ( id_id , aer_aod550_val )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: aer_aod550_val
  INTEGER id_id
  model_config_rec%aer_aod550_val(id_id) = aer_aod550_val
  RETURN
END SUBROUTINE nl_set_aer_aod550_val
SUBROUTINE nl_set_aer_angexp_val ( id_id , aer_angexp_val )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: aer_angexp_val
  INTEGER id_id
  model_config_rec%aer_angexp_val(id_id) = aer_angexp_val
  RETURN
END SUBROUTINE nl_set_aer_angexp_val
SUBROUTINE nl_set_aer_ssa_val ( id_id , aer_ssa_val )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: aer_ssa_val
  INTEGER id_id
  model_config_rec%aer_ssa_val(id_id) = aer_ssa_val
  RETURN
END SUBROUTINE nl_set_aer_ssa_val
SUBROUTINE nl_set_aer_asy_val ( id_id , aer_asy_val )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: aer_asy_val
  INTEGER id_id
  model_config_rec%aer_asy_val(id_id) = aer_asy_val
  RETURN
END SUBROUTINE nl_set_aer_asy_val
SUBROUTINE nl_set_cu_rad_feedback ( id_id , cu_rad_feedback )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: cu_rad_feedback
  INTEGER id_id
  model_config_rec%cu_rad_feedback(id_id) = cu_rad_feedback
  RETURN
END SUBROUTINE nl_set_cu_rad_feedback
SUBROUTINE nl_set_dust_emis ( id_id , dust_emis )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: dust_emis
  INTEGER id_id
  model_config_rec%dust_emis = dust_emis 
  RETURN
END SUBROUTINE nl_set_dust_emis
SUBROUTINE nl_set_erosion_dim ( id_id , erosion_dim )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: erosion_dim
  INTEGER id_id
  model_config_rec%erosion_dim = erosion_dim 
  RETURN
END SUBROUTINE nl_set_erosion_dim
SUBROUTINE nl_set_no_src_types_cu ( id_id , no_src_types_cu )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: no_src_types_cu
  INTEGER id_id
  model_config_rec%no_src_types_cu = no_src_types_cu 
  RETURN
END SUBROUTINE nl_set_no_src_types_cu
SUBROUTINE nl_set_alevsiz_cu ( id_id , alevsiz_cu )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: alevsiz_cu
  INTEGER id_id
  model_config_rec%alevsiz_cu = alevsiz_cu 
  RETURN
END SUBROUTINE nl_set_alevsiz_cu
SUBROUTINE nl_set_aercu_opt ( id_id , aercu_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: aercu_opt
  INTEGER id_id
  model_config_rec%aercu_opt = aercu_opt 
  RETURN
END SUBROUTINE nl_set_aercu_opt
SUBROUTINE nl_set_aercu_fct ( id_id , aercu_fct )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: aercu_fct
  INTEGER id_id
  model_config_rec%aercu_fct = aercu_fct 
  RETURN
END SUBROUTINE nl_set_aercu_fct
SUBROUTINE nl_set_aercu_used ( id_id , aercu_used )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: aercu_used
  INTEGER id_id
  model_config_rec%aercu_used = aercu_used 
  RETURN
END SUBROUTINE nl_set_aercu_used
SUBROUTINE nl_set_shallowcu_forced_ra ( id_id , shallowcu_forced_ra )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: shallowcu_forced_ra
  INTEGER id_id
  model_config_rec%shallowcu_forced_ra(id_id) = shallowcu_forced_ra
  RETURN
END SUBROUTINE nl_set_shallowcu_forced_ra
SUBROUTINE nl_set_numbins ( id_id , numbins )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: numbins
  INTEGER id_id
  model_config_rec%numbins(id_id) = numbins
  RETURN
END SUBROUTINE nl_set_numbins
SUBROUTINE nl_set_thbinsize ( id_id , thbinsize )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: thbinsize
  INTEGER id_id
  model_config_rec%thbinsize(id_id) = thbinsize
  RETURN
END SUBROUTINE nl_set_thbinsize
SUBROUTINE nl_set_rbinsize ( id_id , rbinsize )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: rbinsize
  INTEGER id_id
  model_config_rec%rbinsize(id_id) = rbinsize
  RETURN
END SUBROUTINE nl_set_rbinsize
SUBROUTINE nl_set_mindeepfreq ( id_id , mindeepfreq )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: mindeepfreq
  INTEGER id_id
  model_config_rec%mindeepfreq(id_id) = mindeepfreq
  RETURN
END SUBROUTINE nl_set_mindeepfreq
SUBROUTINE nl_set_minshallowfreq ( id_id , minshallowfreq )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: minshallowfreq
  INTEGER id_id
  model_config_rec%minshallowfreq(id_id) = minshallowfreq
  RETURN
END SUBROUTINE nl_set_minshallowfreq
SUBROUTINE nl_set_shcu_aerosols_opt ( id_id , shcu_aerosols_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: shcu_aerosols_opt
  INTEGER id_id
  model_config_rec%shcu_aerosols_opt(id_id) = shcu_aerosols_opt
  RETURN
END SUBROUTINE nl_set_shcu_aerosols_opt
SUBROUTINE nl_set_icloud_cu ( id_id , icloud_cu )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: icloud_cu
  INTEGER id_id
  model_config_rec%icloud_cu(id_id) = icloud_cu
  RETURN
END SUBROUTINE nl_set_icloud_cu
SUBROUTINE nl_set_pxlsm_smois_init ( id_id , pxlsm_smois_init )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: pxlsm_smois_init
  INTEGER id_id
  model_config_rec%pxlsm_smois_init(id_id) = pxlsm_smois_init
  RETURN
END SUBROUTINE nl_set_pxlsm_smois_init
SUBROUTINE nl_set_omlcall ( id_id , omlcall )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: omlcall
  INTEGER id_id
  model_config_rec%omlcall = omlcall 
  RETURN
END SUBROUTINE nl_set_omlcall
SUBROUTINE nl_set_sf_ocean_physics ( id_id , sf_ocean_physics )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: sf_ocean_physics
  INTEGER id_id
  model_config_rec%sf_ocean_physics = sf_ocean_physics 
  RETURN
END SUBROUTINE nl_set_sf_ocean_physics
SUBROUTINE nl_set_traj_opt ( id_id , traj_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: traj_opt
  INTEGER id_id
  model_config_rec%traj_opt = traj_opt 
  RETURN
END SUBROUTINE nl_set_traj_opt
SUBROUTINE nl_set_dm_has_traj ( id_id , dm_has_traj )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: dm_has_traj
  INTEGER id_id
  model_config_rec%dm_has_traj(id_id) = dm_has_traj
  RETURN
END SUBROUTINE nl_set_dm_has_traj
SUBROUTINE nl_set_tracercall ( id_id , tracercall )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: tracercall
  INTEGER id_id
  model_config_rec%tracercall = tracercall 
  RETURN
END SUBROUTINE nl_set_tracercall
SUBROUTINE nl_set_omdt ( id_id , omdt )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: omdt
  INTEGER id_id
  model_config_rec%omdt = omdt 
  RETURN
END SUBROUTINE nl_set_omdt
SUBROUTINE nl_set_oml_hml0 ( id_id , oml_hml0 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: oml_hml0
  INTEGER id_id
  model_config_rec%oml_hml0 = oml_hml0 
  RETURN
END SUBROUTINE nl_set_oml_hml0
SUBROUTINE nl_set_oml_gamma ( id_id , oml_gamma )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: oml_gamma
  INTEGER id_id
  model_config_rec%oml_gamma = oml_gamma 
  RETURN
END SUBROUTINE nl_set_oml_gamma
SUBROUTINE nl_set_oml_relaxation_time ( id_id , oml_relaxation_time )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: oml_relaxation_time
  INTEGER id_id
  model_config_rec%oml_relaxation_time = oml_relaxation_time 
  RETURN
END SUBROUTINE nl_set_oml_relaxation_time
SUBROUTINE nl_set_isftcflx ( id_id , isftcflx )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: isftcflx
  INTEGER id_id
  model_config_rec%isftcflx = isftcflx 
  RETURN
END SUBROUTINE nl_set_isftcflx
SUBROUTINE nl_set_iz0tlnd ( id_id , iz0tlnd )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: iz0tlnd
  INTEGER id_id
  model_config_rec%iz0tlnd = iz0tlnd 
  RETURN
END SUBROUTINE nl_set_iz0tlnd
SUBROUTINE nl_set_shadlen ( id_id , shadlen )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: shadlen
  INTEGER id_id
  model_config_rec%shadlen = shadlen 
  RETURN
END SUBROUTINE nl_set_shadlen
SUBROUTINE nl_set_slope_rad ( id_id , slope_rad )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: slope_rad
  INTEGER id_id
  model_config_rec%slope_rad(id_id) = slope_rad
  RETURN
END SUBROUTINE nl_set_slope_rad
SUBROUTINE nl_set_topo_shading ( id_id , topo_shading )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: topo_shading
  INTEGER id_id
  model_config_rec%topo_shading(id_id) = topo_shading
  RETURN
END SUBROUTINE nl_set_topo_shading
SUBROUTINE nl_set_topo_wind ( id_id , topo_wind )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: topo_wind
  INTEGER id_id
  model_config_rec%topo_wind(id_id) = topo_wind
  RETURN
END SUBROUTINE nl_set_topo_wind
SUBROUTINE nl_set_no_mp_heating ( id_id , no_mp_heating )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: no_mp_heating
  INTEGER id_id
  model_config_rec%no_mp_heating = no_mp_heating 
  RETURN
END SUBROUTINE nl_set_no_mp_heating
SUBROUTINE nl_set_fractional_seaice ( id_id , fractional_seaice )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: fractional_seaice
  INTEGER id_id
  model_config_rec%fractional_seaice = fractional_seaice 
  RETURN
END SUBROUTINE nl_set_fractional_seaice
SUBROUTINE nl_set_seaice_snowdepth_opt ( id_id , seaice_snowdepth_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: seaice_snowdepth_opt
  INTEGER id_id
  model_config_rec%seaice_snowdepth_opt = seaice_snowdepth_opt 
  RETURN
END SUBROUTINE nl_set_seaice_snowdepth_opt
SUBROUTINE nl_set_seaice_snowdepth_max ( id_id , seaice_snowdepth_max )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: seaice_snowdepth_max
  INTEGER id_id
  model_config_rec%seaice_snowdepth_max = seaice_snowdepth_max 
  RETURN
END SUBROUTINE nl_set_seaice_snowdepth_max
SUBROUTINE nl_set_seaice_snowdepth_min ( id_id , seaice_snowdepth_min )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: seaice_snowdepth_min
  INTEGER id_id
  model_config_rec%seaice_snowdepth_min = seaice_snowdepth_min 
  RETURN
END SUBROUTINE nl_set_seaice_snowdepth_min
SUBROUTINE nl_set_seaice_albedo_opt ( id_id , seaice_albedo_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: seaice_albedo_opt
  INTEGER id_id
  model_config_rec%seaice_albedo_opt = seaice_albedo_opt 
  RETURN
END SUBROUTINE nl_set_seaice_albedo_opt
SUBROUTINE nl_set_seaice_albedo_default ( id_id , seaice_albedo_default )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: seaice_albedo_default
  INTEGER id_id
  model_config_rec%seaice_albedo_default = seaice_albedo_default 
  RETURN
END SUBROUTINE nl_set_seaice_albedo_default
SUBROUTINE nl_set_seaice_thickness_opt ( id_id , seaice_thickness_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: seaice_thickness_opt
  INTEGER id_id
  model_config_rec%seaice_thickness_opt = seaice_thickness_opt 
  RETURN
END SUBROUTINE nl_set_seaice_thickness_opt
SUBROUTINE nl_set_seaice_thickness_default ( id_id , seaice_thickness_default )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: seaice_thickness_default
  INTEGER id_id
  model_config_rec%seaice_thickness_default = seaice_thickness_default 
  RETURN
END SUBROUTINE nl_set_seaice_thickness_default
SUBROUTINE nl_set_tice2tsk_if2cold ( id_id , tice2tsk_if2cold )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: tice2tsk_if2cold
  INTEGER id_id
  model_config_rec%tice2tsk_if2cold = tice2tsk_if2cold 
  RETURN
END SUBROUTINE nl_set_tice2tsk_if2cold
SUBROUTINE nl_set_bucket_mm ( id_id , bucket_mm )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: bucket_mm
  INTEGER id_id
  model_config_rec%bucket_mm = bucket_mm 
  RETURN
END SUBROUTINE nl_set_bucket_mm
SUBROUTINE nl_set_bucket_j ( id_id , bucket_j )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: bucket_j
  INTEGER id_id
  model_config_rec%bucket_j = bucket_j 
  RETURN
END SUBROUTINE nl_set_bucket_j
SUBROUTINE nl_set_mp_tend_lim ( id_id , mp_tend_lim )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: mp_tend_lim
  INTEGER id_id
  model_config_rec%mp_tend_lim = mp_tend_lim 
  RETURN
END SUBROUTINE nl_set_mp_tend_lim
SUBROUTINE nl_set_prec_acc_dt ( id_id , prec_acc_dt )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: prec_acc_dt
  INTEGER id_id
  model_config_rec%prec_acc_dt(id_id) = prec_acc_dt
  RETURN
END SUBROUTINE nl_set_prec_acc_dt
SUBROUTINE nl_set_prec_acc_opt ( id_id , prec_acc_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: prec_acc_opt
  INTEGER id_id
  model_config_rec%prec_acc_opt = prec_acc_opt 
  RETURN
END SUBROUTINE nl_set_prec_acc_opt
SUBROUTINE nl_set_bucketr_opt ( id_id , bucketr_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: bucketr_opt
  INTEGER id_id
  model_config_rec%bucketr_opt = bucketr_opt 
  RETURN
END SUBROUTINE nl_set_bucketr_opt
SUBROUTINE nl_set_bucketf_opt ( id_id , bucketf_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: bucketf_opt
  INTEGER id_id
  model_config_rec%bucketf_opt = bucketf_opt 
  RETURN
END SUBROUTINE nl_set_bucketf_opt
SUBROUTINE nl_set_process_time_series ( id_id , process_time_series )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: process_time_series
  INTEGER id_id
  model_config_rec%process_time_series = process_time_series 
  RETURN
END SUBROUTINE nl_set_process_time_series
SUBROUTINE nl_set_grav_settling ( id_id , grav_settling )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: grav_settling
  INTEGER id_id
  model_config_rec%grav_settling(id_id) = grav_settling
  RETURN
END SUBROUTINE nl_set_grav_settling
SUBROUTINE nl_set_sas_pgcon ( id_id , sas_pgcon )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: sas_pgcon
  INTEGER id_id
  model_config_rec%sas_pgcon(id_id) = sas_pgcon
  RETURN
END SUBROUTINE nl_set_sas_pgcon
SUBROUTINE nl_set_scalar_pblmix ( id_id , scalar_pblmix )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: scalar_pblmix
  INTEGER id_id
  model_config_rec%scalar_pblmix(id_id) = scalar_pblmix
  RETURN
END SUBROUTINE nl_set_scalar_pblmix
SUBROUTINE nl_set_tracer_pblmix ( id_id , tracer_pblmix )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: tracer_pblmix
  INTEGER id_id
  model_config_rec%tracer_pblmix(id_id) = tracer_pblmix
  RETURN
END SUBROUTINE nl_set_tracer_pblmix
SUBROUTINE nl_set_use_aero_icbc ( id_id , use_aero_icbc )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: use_aero_icbc
  INTEGER id_id
  model_config_rec%use_aero_icbc = use_aero_icbc 
  RETURN
END SUBROUTINE nl_set_use_aero_icbc
SUBROUTINE nl_set_use_rap_aero_icbc ( id_id , use_rap_aero_icbc )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: use_rap_aero_icbc
  INTEGER id_id
  model_config_rec%use_rap_aero_icbc = use_rap_aero_icbc 
  RETURN
END SUBROUTINE nl_set_use_rap_aero_icbc
SUBROUTINE nl_set_use_mp_re ( id_id , use_mp_re )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: use_mp_re
  INTEGER id_id
  model_config_rec%use_mp_re = use_mp_re 
  RETURN
END SUBROUTINE nl_set_use_mp_re
SUBROUTINE nl_set_ccn_conc ( id_id , ccn_conc )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: ccn_conc
  INTEGER id_id
  model_config_rec%ccn_conc = ccn_conc 
  RETURN
END SUBROUTINE nl_set_ccn_conc
SUBROUTINE nl_set_hail_opt ( id_id , hail_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: hail_opt
  INTEGER id_id
  model_config_rec%hail_opt = hail_opt 
  RETURN
END SUBROUTINE nl_set_hail_opt
SUBROUTINE nl_set_morr_rimed_ice ( id_id , morr_rimed_ice )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: morr_rimed_ice
  INTEGER id_id
  model_config_rec%morr_rimed_ice = morr_rimed_ice 
  RETURN
END SUBROUTINE nl_set_morr_rimed_ice
SUBROUTINE nl_set_clean_atm_diag ( id_id , clean_atm_diag )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: clean_atm_diag
  INTEGER id_id
  model_config_rec%clean_atm_diag = clean_atm_diag 
  RETURN
END SUBROUTINE nl_set_clean_atm_diag
SUBROUTINE nl_set_calc_clean_atm_diag ( id_id , calc_clean_atm_diag )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: calc_clean_atm_diag
  INTEGER id_id
  model_config_rec%calc_clean_atm_diag = calc_clean_atm_diag 
  RETURN
END SUBROUTINE nl_set_calc_clean_atm_diag
SUBROUTINE nl_set_dveg ( id_id , dveg )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: dveg
  INTEGER id_id
  model_config_rec%dveg = dveg 
  RETURN
END SUBROUTINE nl_set_dveg
SUBROUTINE nl_set_opt_crs ( id_id , opt_crs )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: opt_crs
  INTEGER id_id
  model_config_rec%opt_crs = opt_crs 
  RETURN
END SUBROUTINE nl_set_opt_crs
SUBROUTINE nl_set_opt_btr ( id_id , opt_btr )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: opt_btr
  INTEGER id_id
  model_config_rec%opt_btr = opt_btr 
  RETURN
END SUBROUTINE nl_set_opt_btr
SUBROUTINE nl_set_opt_run ( id_id , opt_run )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: opt_run
  INTEGER id_id
  model_config_rec%opt_run = opt_run 
  RETURN
END SUBROUTINE nl_set_opt_run
SUBROUTINE nl_set_opt_sfc ( id_id , opt_sfc )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: opt_sfc
  INTEGER id_id
  model_config_rec%opt_sfc = opt_sfc 
  RETURN
END SUBROUTINE nl_set_opt_sfc
SUBROUTINE nl_set_opt_frz ( id_id , opt_frz )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: opt_frz
  INTEGER id_id
  model_config_rec%opt_frz = opt_frz 
  RETURN
END SUBROUTINE nl_set_opt_frz
SUBROUTINE nl_set_opt_inf ( id_id , opt_inf )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: opt_inf
  INTEGER id_id
  model_config_rec%opt_inf = opt_inf 
  RETURN
END SUBROUTINE nl_set_opt_inf
SUBROUTINE nl_set_opt_rad ( id_id , opt_rad )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: opt_rad
  INTEGER id_id
  model_config_rec%opt_rad = opt_rad 
  RETURN
END SUBROUTINE nl_set_opt_rad
SUBROUTINE nl_set_opt_alb ( id_id , opt_alb )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: opt_alb
  INTEGER id_id
  model_config_rec%opt_alb = opt_alb 
  RETURN
END SUBROUTINE nl_set_opt_alb
SUBROUTINE nl_set_opt_snf ( id_id , opt_snf )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: opt_snf
  INTEGER id_id
  model_config_rec%opt_snf = opt_snf 
  RETURN
END SUBROUTINE nl_set_opt_snf
SUBROUTINE nl_set_opt_tbot ( id_id , opt_tbot )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: opt_tbot
  INTEGER id_id
  model_config_rec%opt_tbot = opt_tbot 
  RETURN
END SUBROUTINE nl_set_opt_tbot
SUBROUTINE nl_set_opt_stc ( id_id , opt_stc )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: opt_stc
  INTEGER id_id
  model_config_rec%opt_stc = opt_stc 
  RETURN
END SUBROUTINE nl_set_opt_stc
SUBROUTINE nl_set_opt_gla ( id_id , opt_gla )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: opt_gla
  INTEGER id_id
  model_config_rec%opt_gla = opt_gla 
  RETURN
END SUBROUTINE nl_set_opt_gla
SUBROUTINE nl_set_opt_rsf ( id_id , opt_rsf )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: opt_rsf
  INTEGER id_id
  model_config_rec%opt_rsf = opt_rsf 
  RETURN
END SUBROUTINE nl_set_opt_rsf
SUBROUTINE nl_set_opt_soil ( id_id , opt_soil )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: opt_soil
  INTEGER id_id
  model_config_rec%opt_soil = opt_soil 
  RETURN
END SUBROUTINE nl_set_opt_soil
SUBROUTINE nl_set_opt_pedo ( id_id , opt_pedo )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: opt_pedo
  INTEGER id_id
  model_config_rec%opt_pedo = opt_pedo 
  RETURN
END SUBROUTINE nl_set_opt_pedo
SUBROUTINE nl_set_opt_crop ( id_id , opt_crop )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: opt_crop
  INTEGER id_id
  model_config_rec%opt_crop = opt_crop 
  RETURN
END SUBROUTINE nl_set_opt_crop
SUBROUTINE nl_set_wtddt ( id_id , wtddt )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: wtddt
  INTEGER id_id
  model_config_rec%wtddt(id_id) = wtddt
  RETURN
END SUBROUTINE nl_set_wtddt
SUBROUTINE nl_set_wrf_hydro ( id_id , wrf_hydro )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: wrf_hydro
  INTEGER id_id
  model_config_rec%wrf_hydro = wrf_hydro 
  RETURN
END SUBROUTINE nl_set_wrf_hydro
SUBROUTINE nl_set_fgdt ( id_id , fgdt )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fgdt
  INTEGER id_id
  model_config_rec%fgdt(id_id) = fgdt
  RETURN
END SUBROUTINE nl_set_fgdt
SUBROUTINE nl_set_fgdtzero ( id_id , fgdtzero )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: fgdtzero
  INTEGER id_id
  model_config_rec%fgdtzero(id_id) = fgdtzero
  RETURN
END SUBROUTINE nl_set_fgdtzero
SUBROUTINE nl_set_grid_fdda ( id_id , grid_fdda )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: grid_fdda
  INTEGER id_id
  model_config_rec%grid_fdda(id_id) = grid_fdda
  RETURN
END SUBROUTINE nl_set_grid_fdda
SUBROUTINE nl_set_grid_sfdda ( id_id , grid_sfdda )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: grid_sfdda
  INTEGER id_id
  model_config_rec%grid_sfdda(id_id) = grid_sfdda
  RETURN
END SUBROUTINE nl_set_grid_sfdda
SUBROUTINE nl_set_if_no_pbl_nudging_uv ( id_id , if_no_pbl_nudging_uv )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: if_no_pbl_nudging_uv
  INTEGER id_id
  model_config_rec%if_no_pbl_nudging_uv(id_id) = if_no_pbl_nudging_uv
  RETURN
END SUBROUTINE nl_set_if_no_pbl_nudging_uv
SUBROUTINE nl_set_if_no_pbl_nudging_t ( id_id , if_no_pbl_nudging_t )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: if_no_pbl_nudging_t
  INTEGER id_id
  model_config_rec%if_no_pbl_nudging_t(id_id) = if_no_pbl_nudging_t
  RETURN
END SUBROUTINE nl_set_if_no_pbl_nudging_t
SUBROUTINE nl_set_if_no_pbl_nudging_ph ( id_id , if_no_pbl_nudging_ph )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: if_no_pbl_nudging_ph
  INTEGER id_id
  model_config_rec%if_no_pbl_nudging_ph(id_id) = if_no_pbl_nudging_ph
  RETURN
END SUBROUTINE nl_set_if_no_pbl_nudging_ph
SUBROUTINE nl_set_if_no_pbl_nudging_q ( id_id , if_no_pbl_nudging_q )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: if_no_pbl_nudging_q
  INTEGER id_id
  model_config_rec%if_no_pbl_nudging_q(id_id) = if_no_pbl_nudging_q
  RETURN
END SUBROUTINE nl_set_if_no_pbl_nudging_q
SUBROUTINE nl_set_if_zfac_uv ( id_id , if_zfac_uv )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: if_zfac_uv
  INTEGER id_id
  model_config_rec%if_zfac_uv(id_id) = if_zfac_uv
  RETURN
END SUBROUTINE nl_set_if_zfac_uv
SUBROUTINE nl_set_k_zfac_uv ( id_id , k_zfac_uv )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: k_zfac_uv
  INTEGER id_id
  model_config_rec%k_zfac_uv(id_id) = k_zfac_uv
  RETURN
END SUBROUTINE nl_set_k_zfac_uv
SUBROUTINE nl_set_if_zfac_t ( id_id , if_zfac_t )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: if_zfac_t
  INTEGER id_id
  model_config_rec%if_zfac_t(id_id) = if_zfac_t
  RETURN
END SUBROUTINE nl_set_if_zfac_t
SUBROUTINE nl_set_k_zfac_t ( id_id , k_zfac_t )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: k_zfac_t
  INTEGER id_id
  model_config_rec%k_zfac_t(id_id) = k_zfac_t
  RETURN
END SUBROUTINE nl_set_k_zfac_t
SUBROUTINE nl_set_if_zfac_ph ( id_id , if_zfac_ph )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: if_zfac_ph
  INTEGER id_id
  model_config_rec%if_zfac_ph(id_id) = if_zfac_ph
  RETURN
END SUBROUTINE nl_set_if_zfac_ph
SUBROUTINE nl_set_k_zfac_ph ( id_id , k_zfac_ph )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: k_zfac_ph
  INTEGER id_id
  model_config_rec%k_zfac_ph(id_id) = k_zfac_ph
  RETURN
END SUBROUTINE nl_set_k_zfac_ph
SUBROUTINE nl_set_if_zfac_q ( id_id , if_zfac_q )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: if_zfac_q
  INTEGER id_id
  model_config_rec%if_zfac_q(id_id) = if_zfac_q
  RETURN
END SUBROUTINE nl_set_if_zfac_q
SUBROUTINE nl_set_k_zfac_q ( id_id , k_zfac_q )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: k_zfac_q
  INTEGER id_id
  model_config_rec%k_zfac_q(id_id) = k_zfac_q
  RETURN
END SUBROUTINE nl_set_k_zfac_q
SUBROUTINE nl_set_dk_zfac_uv ( id_id , dk_zfac_uv )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: dk_zfac_uv
  INTEGER id_id
  model_config_rec%dk_zfac_uv(id_id) = dk_zfac_uv
  RETURN
END SUBROUTINE nl_set_dk_zfac_uv
SUBROUTINE nl_set_dk_zfac_t ( id_id , dk_zfac_t )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: dk_zfac_t
  INTEGER id_id
  model_config_rec%dk_zfac_t(id_id) = dk_zfac_t
  RETURN
END SUBROUTINE nl_set_dk_zfac_t
SUBROUTINE nl_set_dk_zfac_ph ( id_id , dk_zfac_ph )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: dk_zfac_ph
  INTEGER id_id
  model_config_rec%dk_zfac_ph(id_id) = dk_zfac_ph
  RETURN
END SUBROUTINE nl_set_dk_zfac_ph
SUBROUTINE nl_set_dk_zfac_q ( id_id , dk_zfac_q )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: dk_zfac_q
  INTEGER id_id
  model_config_rec%dk_zfac_q(id_id) = dk_zfac_q
  RETURN
END SUBROUTINE nl_set_dk_zfac_q
SUBROUTINE nl_set_ktrop ( id_id , ktrop )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: ktrop
  INTEGER id_id
  model_config_rec%ktrop = ktrop 
  RETURN
END SUBROUTINE nl_set_ktrop
SUBROUTINE nl_set_guv ( id_id , guv )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: guv
  INTEGER id_id
  model_config_rec%guv(id_id) = guv
  RETURN
END SUBROUTINE nl_set_guv
SUBROUTINE nl_set_guv_sfc ( id_id , guv_sfc )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: guv_sfc
  INTEGER id_id
  model_config_rec%guv_sfc(id_id) = guv_sfc
  RETURN
END SUBROUTINE nl_set_guv_sfc
SUBROUTINE nl_set_gt ( id_id , gt )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: gt
  INTEGER id_id
  model_config_rec%gt(id_id) = gt
  RETURN
END SUBROUTINE nl_set_gt
SUBROUTINE nl_set_gt_sfc ( id_id , gt_sfc )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: gt_sfc
  INTEGER id_id
  model_config_rec%gt_sfc(id_id) = gt_sfc
  RETURN
END SUBROUTINE nl_set_gt_sfc
SUBROUTINE nl_set_gq ( id_id , gq )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: gq
  INTEGER id_id
  model_config_rec%gq(id_id) = gq
  RETURN
END SUBROUTINE nl_set_gq
SUBROUTINE nl_set_gq_sfc ( id_id , gq_sfc )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: gq_sfc
  INTEGER id_id
  model_config_rec%gq_sfc(id_id) = gq_sfc
  RETURN
END SUBROUTINE nl_set_gq_sfc
SUBROUTINE nl_set_gph ( id_id , gph )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: gph
  INTEGER id_id
  model_config_rec%gph(id_id) = gph
  RETURN
END SUBROUTINE nl_set_gph
SUBROUTINE nl_set_dtramp_min ( id_id , dtramp_min )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: dtramp_min
  INTEGER id_id
  model_config_rec%dtramp_min = dtramp_min 
  RETURN
END SUBROUTINE nl_set_dtramp_min
SUBROUTINE nl_set_if_ramping ( id_id , if_ramping )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: if_ramping
  INTEGER id_id
  model_config_rec%if_ramping = if_ramping 
  RETURN
END SUBROUTINE nl_set_if_ramping
SUBROUTINE nl_set_rinblw ( id_id , rinblw )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: rinblw
  INTEGER id_id
  model_config_rec%rinblw(id_id) = rinblw
  RETURN
END SUBROUTINE nl_set_rinblw
SUBROUTINE nl_set_xwavenum ( id_id , xwavenum )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: xwavenum
  INTEGER id_id
  model_config_rec%xwavenum(id_id) = xwavenum
  RETURN
END SUBROUTINE nl_set_xwavenum
SUBROUTINE nl_set_ywavenum ( id_id , ywavenum )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: ywavenum
  INTEGER id_id
  model_config_rec%ywavenum(id_id) = ywavenum
  RETURN
END SUBROUTINE nl_set_ywavenum
SUBROUTINE nl_set_pxlsm_soil_nudge ( id_id , pxlsm_soil_nudge )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: pxlsm_soil_nudge
  INTEGER id_id
  model_config_rec%pxlsm_soil_nudge(id_id) = pxlsm_soil_nudge
  RETURN
END SUBROUTINE nl_set_pxlsm_soil_nudge
SUBROUTINE nl_set_fasdas ( id_id , fasdas )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: fasdas
  INTEGER id_id
  model_config_rec%fasdas(id_id) = fasdas
  RETURN
END SUBROUTINE nl_set_fasdas
SUBROUTINE nl_set_obs_nudge_opt ( id_id , obs_nudge_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: obs_nudge_opt
  INTEGER id_id
  model_config_rec%obs_nudge_opt(id_id) = obs_nudge_opt
  RETURN
END SUBROUTINE nl_set_obs_nudge_opt
SUBROUTINE nl_set_max_obs ( id_id , max_obs )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: max_obs
  INTEGER id_id
  model_config_rec%max_obs = max_obs 
  RETURN
END SUBROUTINE nl_set_max_obs
SUBROUTINE nl_set_fdda_start ( id_id , fdda_start )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fdda_start
  INTEGER id_id
  model_config_rec%fdda_start(id_id) = fdda_start
  RETURN
END SUBROUTINE nl_set_fdda_start
SUBROUTINE nl_set_fdda_end ( id_id , fdda_end )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fdda_end
  INTEGER id_id
  model_config_rec%fdda_end(id_id) = fdda_end
  RETURN
END SUBROUTINE nl_set_fdda_end
SUBROUTINE nl_set_obs_nudge_wind ( id_id , obs_nudge_wind )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: obs_nudge_wind
  INTEGER id_id
  model_config_rec%obs_nudge_wind(id_id) = obs_nudge_wind
  RETURN
END SUBROUTINE nl_set_obs_nudge_wind
SUBROUTINE nl_set_obs_coef_wind ( id_id , obs_coef_wind )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: obs_coef_wind
  INTEGER id_id
  model_config_rec%obs_coef_wind(id_id) = obs_coef_wind
  RETURN
END SUBROUTINE nl_set_obs_coef_wind
SUBROUTINE nl_set_obs_nudge_temp ( id_id , obs_nudge_temp )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: obs_nudge_temp
  INTEGER id_id
  model_config_rec%obs_nudge_temp(id_id) = obs_nudge_temp
  RETURN
END SUBROUTINE nl_set_obs_nudge_temp
SUBROUTINE nl_set_obs_coef_temp ( id_id , obs_coef_temp )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: obs_coef_temp
  INTEGER id_id
  model_config_rec%obs_coef_temp(id_id) = obs_coef_temp
  RETURN
END SUBROUTINE nl_set_obs_coef_temp
SUBROUTINE nl_set_obs_nudge_mois ( id_id , obs_nudge_mois )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: obs_nudge_mois
  INTEGER id_id
  model_config_rec%obs_nudge_mois(id_id) = obs_nudge_mois
  RETURN
END SUBROUTINE nl_set_obs_nudge_mois
SUBROUTINE nl_set_obs_coef_mois ( id_id , obs_coef_mois )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: obs_coef_mois
  INTEGER id_id
  model_config_rec%obs_coef_mois(id_id) = obs_coef_mois
  RETURN
END SUBROUTINE nl_set_obs_coef_mois
SUBROUTINE nl_set_obs_nudge_pstr ( id_id , obs_nudge_pstr )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: obs_nudge_pstr
  INTEGER id_id
  model_config_rec%obs_nudge_pstr(id_id) = obs_nudge_pstr
  RETURN
END SUBROUTINE nl_set_obs_nudge_pstr
SUBROUTINE nl_set_obs_coef_pstr ( id_id , obs_coef_pstr )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: obs_coef_pstr
  INTEGER id_id
  model_config_rec%obs_coef_pstr(id_id) = obs_coef_pstr
  RETURN
END SUBROUTINE nl_set_obs_coef_pstr
SUBROUTINE nl_set_obs_no_pbl_nudge_uv ( id_id , obs_no_pbl_nudge_uv )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: obs_no_pbl_nudge_uv
  INTEGER id_id
  model_config_rec%obs_no_pbl_nudge_uv(id_id) = obs_no_pbl_nudge_uv
  RETURN
END SUBROUTINE nl_set_obs_no_pbl_nudge_uv
SUBROUTINE nl_set_obs_no_pbl_nudge_t ( id_id , obs_no_pbl_nudge_t )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: obs_no_pbl_nudge_t
  INTEGER id_id
  model_config_rec%obs_no_pbl_nudge_t(id_id) = obs_no_pbl_nudge_t
  RETURN
END SUBROUTINE nl_set_obs_no_pbl_nudge_t
SUBROUTINE nl_set_obs_no_pbl_nudge_q ( id_id , obs_no_pbl_nudge_q )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: obs_no_pbl_nudge_q
  INTEGER id_id
  model_config_rec%obs_no_pbl_nudge_q(id_id) = obs_no_pbl_nudge_q
  RETURN
END SUBROUTINE nl_set_obs_no_pbl_nudge_q
SUBROUTINE nl_set_obs_sfc_scheme_horiz ( id_id , obs_sfc_scheme_horiz )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: obs_sfc_scheme_horiz
  INTEGER id_id
  model_config_rec%obs_sfc_scheme_horiz = obs_sfc_scheme_horiz 
  RETURN
END SUBROUTINE nl_set_obs_sfc_scheme_horiz
SUBROUTINE nl_set_obs_sfc_scheme_vert ( id_id , obs_sfc_scheme_vert )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: obs_sfc_scheme_vert
  INTEGER id_id
  model_config_rec%obs_sfc_scheme_vert = obs_sfc_scheme_vert 
  RETURN
END SUBROUTINE nl_set_obs_sfc_scheme_vert
SUBROUTINE nl_set_obs_max_sndng_gap ( id_id , obs_max_sndng_gap )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: obs_max_sndng_gap
  INTEGER id_id
  model_config_rec%obs_max_sndng_gap = obs_max_sndng_gap 
  RETURN
END SUBROUTINE nl_set_obs_max_sndng_gap
SUBROUTINE nl_set_obs_nudgezfullr1_uv ( id_id , obs_nudgezfullr1_uv )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: obs_nudgezfullr1_uv
  INTEGER id_id
  model_config_rec%obs_nudgezfullr1_uv = obs_nudgezfullr1_uv 
  RETURN
END SUBROUTINE nl_set_obs_nudgezfullr1_uv
SUBROUTINE nl_set_obs_nudgezrampr1_uv ( id_id , obs_nudgezrampr1_uv )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: obs_nudgezrampr1_uv
  INTEGER id_id
  model_config_rec%obs_nudgezrampr1_uv = obs_nudgezrampr1_uv 
  RETURN
END SUBROUTINE nl_set_obs_nudgezrampr1_uv
SUBROUTINE nl_set_obs_nudgezfullr2_uv ( id_id , obs_nudgezfullr2_uv )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: obs_nudgezfullr2_uv
  INTEGER id_id
  model_config_rec%obs_nudgezfullr2_uv = obs_nudgezfullr2_uv 
  RETURN
END SUBROUTINE nl_set_obs_nudgezfullr2_uv
SUBROUTINE nl_set_obs_nudgezrampr2_uv ( id_id , obs_nudgezrampr2_uv )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: obs_nudgezrampr2_uv
  INTEGER id_id
  model_config_rec%obs_nudgezrampr2_uv = obs_nudgezrampr2_uv 
  RETURN
END SUBROUTINE nl_set_obs_nudgezrampr2_uv
SUBROUTINE nl_set_obs_nudgezfullr4_uv ( id_id , obs_nudgezfullr4_uv )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: obs_nudgezfullr4_uv
  INTEGER id_id
  model_config_rec%obs_nudgezfullr4_uv = obs_nudgezfullr4_uv 
  RETURN
END SUBROUTINE nl_set_obs_nudgezfullr4_uv
SUBROUTINE nl_set_obs_nudgezrampr4_uv ( id_id , obs_nudgezrampr4_uv )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: obs_nudgezrampr4_uv
  INTEGER id_id
  model_config_rec%obs_nudgezrampr4_uv = obs_nudgezrampr4_uv 
  RETURN
END SUBROUTINE nl_set_obs_nudgezrampr4_uv
SUBROUTINE nl_set_obs_nudgezfullr1_t ( id_id , obs_nudgezfullr1_t )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: obs_nudgezfullr1_t
  INTEGER id_id
  model_config_rec%obs_nudgezfullr1_t = obs_nudgezfullr1_t 
  RETURN
END SUBROUTINE nl_set_obs_nudgezfullr1_t
SUBROUTINE nl_set_obs_nudgezrampr1_t ( id_id , obs_nudgezrampr1_t )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: obs_nudgezrampr1_t
  INTEGER id_id
  model_config_rec%obs_nudgezrampr1_t = obs_nudgezrampr1_t 
  RETURN
END SUBROUTINE nl_set_obs_nudgezrampr1_t
SUBROUTINE nl_set_obs_nudgezfullr2_t ( id_id , obs_nudgezfullr2_t )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: obs_nudgezfullr2_t
  INTEGER id_id
  model_config_rec%obs_nudgezfullr2_t = obs_nudgezfullr2_t 
  RETURN
END SUBROUTINE nl_set_obs_nudgezfullr2_t
SUBROUTINE nl_set_obs_nudgezrampr2_t ( id_id , obs_nudgezrampr2_t )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: obs_nudgezrampr2_t
  INTEGER id_id
  model_config_rec%obs_nudgezrampr2_t = obs_nudgezrampr2_t 
  RETURN
END SUBROUTINE nl_set_obs_nudgezrampr2_t
SUBROUTINE nl_set_obs_nudgezfullr4_t ( id_id , obs_nudgezfullr4_t )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: obs_nudgezfullr4_t
  INTEGER id_id
  model_config_rec%obs_nudgezfullr4_t = obs_nudgezfullr4_t 
  RETURN
END SUBROUTINE nl_set_obs_nudgezfullr4_t
SUBROUTINE nl_set_obs_nudgezrampr4_t ( id_id , obs_nudgezrampr4_t )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: obs_nudgezrampr4_t
  INTEGER id_id
  model_config_rec%obs_nudgezrampr4_t = obs_nudgezrampr4_t 
  RETURN
END SUBROUTINE nl_set_obs_nudgezrampr4_t
SUBROUTINE nl_set_obs_nudgezfullr1_q ( id_id , obs_nudgezfullr1_q )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: obs_nudgezfullr1_q
  INTEGER id_id
  model_config_rec%obs_nudgezfullr1_q = obs_nudgezfullr1_q 
  RETURN
END SUBROUTINE nl_set_obs_nudgezfullr1_q
SUBROUTINE nl_set_obs_nudgezrampr1_q ( id_id , obs_nudgezrampr1_q )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: obs_nudgezrampr1_q
  INTEGER id_id
  model_config_rec%obs_nudgezrampr1_q = obs_nudgezrampr1_q 
  RETURN
END SUBROUTINE nl_set_obs_nudgezrampr1_q
SUBROUTINE nl_set_obs_nudgezfullr2_q ( id_id , obs_nudgezfullr2_q )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: obs_nudgezfullr2_q
  INTEGER id_id
  model_config_rec%obs_nudgezfullr2_q = obs_nudgezfullr2_q 
  RETURN
END SUBROUTINE nl_set_obs_nudgezfullr2_q
SUBROUTINE nl_set_obs_nudgezrampr2_q ( id_id , obs_nudgezrampr2_q )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: obs_nudgezrampr2_q
  INTEGER id_id
  model_config_rec%obs_nudgezrampr2_q = obs_nudgezrampr2_q 
  RETURN
END SUBROUTINE nl_set_obs_nudgezrampr2_q
SUBROUTINE nl_set_obs_nudgezfullr4_q ( id_id , obs_nudgezfullr4_q )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: obs_nudgezfullr4_q
  INTEGER id_id
  model_config_rec%obs_nudgezfullr4_q = obs_nudgezfullr4_q 
  RETURN
END SUBROUTINE nl_set_obs_nudgezfullr4_q
SUBROUTINE nl_set_obs_nudgezrampr4_q ( id_id , obs_nudgezrampr4_q )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: obs_nudgezrampr4_q
  INTEGER id_id
  model_config_rec%obs_nudgezrampr4_q = obs_nudgezrampr4_q 
  RETURN
END SUBROUTINE nl_set_obs_nudgezrampr4_q
SUBROUTINE nl_set_obs_nudgezfullmin ( id_id , obs_nudgezfullmin )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: obs_nudgezfullmin
  INTEGER id_id
  model_config_rec%obs_nudgezfullmin = obs_nudgezfullmin 
  RETURN
END SUBROUTINE nl_set_obs_nudgezfullmin
SUBROUTINE nl_set_obs_nudgezrampmin ( id_id , obs_nudgezrampmin )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: obs_nudgezrampmin
  INTEGER id_id
  model_config_rec%obs_nudgezrampmin = obs_nudgezrampmin 
  RETURN
END SUBROUTINE nl_set_obs_nudgezrampmin
SUBROUTINE nl_set_obs_nudgezmax ( id_id , obs_nudgezmax )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: obs_nudgezmax
  INTEGER id_id
  model_config_rec%obs_nudgezmax = obs_nudgezmax 
  RETURN
END SUBROUTINE nl_set_obs_nudgezmax
SUBROUTINE nl_set_obs_sfcfact ( id_id , obs_sfcfact )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: obs_sfcfact
  INTEGER id_id
  model_config_rec%obs_sfcfact = obs_sfcfact 
  RETURN
END SUBROUTINE nl_set_obs_sfcfact
SUBROUTINE nl_set_obs_sfcfacr ( id_id , obs_sfcfacr )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: obs_sfcfacr
  INTEGER id_id
  model_config_rec%obs_sfcfacr = obs_sfcfacr 
  RETURN
END SUBROUTINE nl_set_obs_sfcfacr
SUBROUTINE nl_set_obs_dpsmx ( id_id , obs_dpsmx )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: obs_dpsmx
  INTEGER id_id
  model_config_rec%obs_dpsmx = obs_dpsmx 
  RETURN
END SUBROUTINE nl_set_obs_dpsmx
SUBROUTINE nl_set_obs_rinxy ( id_id , obs_rinxy )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: obs_rinxy
  INTEGER id_id
  model_config_rec%obs_rinxy(id_id) = obs_rinxy
  RETURN
END SUBROUTINE nl_set_obs_rinxy
SUBROUTINE nl_set_obs_rinsig ( id_id , obs_rinsig )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: obs_rinsig
  INTEGER id_id
  model_config_rec%obs_rinsig = obs_rinsig 
  RETURN
END SUBROUTINE nl_set_obs_rinsig
SUBROUTINE nl_set_obs_twindo ( id_id , obs_twindo )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: obs_twindo
  INTEGER id_id
  model_config_rec%obs_twindo(id_id) = obs_twindo
  RETURN
END SUBROUTINE nl_set_obs_twindo
SUBROUTINE nl_set_obs_npfi ( id_id , obs_npfi )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: obs_npfi
  INTEGER id_id
  model_config_rec%obs_npfi = obs_npfi 
  RETURN
END SUBROUTINE nl_set_obs_npfi
SUBROUTINE nl_set_obs_ionf ( id_id , obs_ionf )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: obs_ionf
  INTEGER id_id
  model_config_rec%obs_ionf(id_id) = obs_ionf
  RETURN
END SUBROUTINE nl_set_obs_ionf
SUBROUTINE nl_set_obs_idynin ( id_id , obs_idynin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: obs_idynin
  INTEGER id_id
  model_config_rec%obs_idynin = obs_idynin 
  RETURN
END SUBROUTINE nl_set_obs_idynin
SUBROUTINE nl_set_obs_dtramp ( id_id , obs_dtramp )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: obs_dtramp
  INTEGER id_id
  model_config_rec%obs_dtramp = obs_dtramp 
  RETURN
END SUBROUTINE nl_set_obs_dtramp
SUBROUTINE nl_set_obs_prt_max ( id_id , obs_prt_max )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: obs_prt_max
  INTEGER id_id
  model_config_rec%obs_prt_max = obs_prt_max 
  RETURN
END SUBROUTINE nl_set_obs_prt_max
SUBROUTINE nl_set_obs_prt_freq ( id_id , obs_prt_freq )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: obs_prt_freq
  INTEGER id_id
  model_config_rec%obs_prt_freq(id_id) = obs_prt_freq
  RETURN
END SUBROUTINE nl_set_obs_prt_freq
SUBROUTINE nl_set_obs_ipf_in4dob ( id_id , obs_ipf_in4dob )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: obs_ipf_in4dob
  INTEGER id_id
  model_config_rec%obs_ipf_in4dob = obs_ipf_in4dob 
  RETURN
END SUBROUTINE nl_set_obs_ipf_in4dob
SUBROUTINE nl_set_obs_ipf_errob ( id_id , obs_ipf_errob )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: obs_ipf_errob
  INTEGER id_id
  model_config_rec%obs_ipf_errob = obs_ipf_errob 
  RETURN
END SUBROUTINE nl_set_obs_ipf_errob
SUBROUTINE nl_set_obs_ipf_nudob ( id_id , obs_ipf_nudob )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: obs_ipf_nudob
  INTEGER id_id
  model_config_rec%obs_ipf_nudob = obs_ipf_nudob 
  RETURN
END SUBROUTINE nl_set_obs_ipf_nudob
SUBROUTINE nl_set_obs_ipf_init ( id_id , obs_ipf_init )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: obs_ipf_init
  INTEGER id_id
  model_config_rec%obs_ipf_init = obs_ipf_init 
  RETURN
END SUBROUTINE nl_set_obs_ipf_init
SUBROUTINE nl_set_obs_scl_neg_qv_innov ( id_id , obs_scl_neg_qv_innov )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: obs_scl_neg_qv_innov
  INTEGER id_id
  model_config_rec%obs_scl_neg_qv_innov = obs_scl_neg_qv_innov 
  RETURN
END SUBROUTINE nl_set_obs_scl_neg_qv_innov
SUBROUTINE nl_set_scm_force ( id_id , scm_force )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: scm_force
  INTEGER id_id
  model_config_rec%scm_force = scm_force 
  RETURN
END SUBROUTINE nl_set_scm_force
SUBROUTINE nl_set_scm_force_dx ( id_id , scm_force_dx )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: scm_force_dx
  INTEGER id_id
  model_config_rec%scm_force_dx = scm_force_dx 
  RETURN
END SUBROUTINE nl_set_scm_force_dx
SUBROUTINE nl_set_num_force_layers ( id_id , num_force_layers )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: num_force_layers
  INTEGER id_id
  model_config_rec%num_force_layers = num_force_layers 
  RETURN
END SUBROUTINE nl_set_num_force_layers
SUBROUTINE nl_set_scm_lu_index ( id_id , scm_lu_index )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: scm_lu_index
  INTEGER id_id
  model_config_rec%scm_lu_index = scm_lu_index 
  RETURN
END SUBROUTINE nl_set_scm_lu_index
SUBROUTINE nl_set_scm_isltyp ( id_id , scm_isltyp )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: scm_isltyp
  INTEGER id_id
  model_config_rec%scm_isltyp = scm_isltyp 
  RETURN
END SUBROUTINE nl_set_scm_isltyp
SUBROUTINE nl_set_scm_vegfra ( id_id , scm_vegfra )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: scm_vegfra
  INTEGER id_id
  model_config_rec%scm_vegfra = scm_vegfra 
  RETURN
END SUBROUTINE nl_set_scm_vegfra
SUBROUTINE nl_set_scm_canwat ( id_id , scm_canwat )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: scm_canwat
  INTEGER id_id
  model_config_rec%scm_canwat = scm_canwat 
  RETURN
END SUBROUTINE nl_set_scm_canwat
SUBROUTINE nl_set_scm_lat ( id_id , scm_lat )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: scm_lat
  INTEGER id_id
  model_config_rec%scm_lat = scm_lat 
  RETURN
END SUBROUTINE nl_set_scm_lat
SUBROUTINE nl_set_scm_lon ( id_id , scm_lon )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: scm_lon
  INTEGER id_id
  model_config_rec%scm_lon = scm_lon 
  RETURN
END SUBROUTINE nl_set_scm_lon
SUBROUTINE nl_set_scm_th_t_tend ( id_id , scm_th_t_tend )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: scm_th_t_tend
  INTEGER id_id
  model_config_rec%scm_th_t_tend = scm_th_t_tend 
  RETURN
END SUBROUTINE nl_set_scm_th_t_tend
SUBROUTINE nl_set_scm_qv_t_tend ( id_id , scm_qv_t_tend )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: scm_qv_t_tend
  INTEGER id_id
  model_config_rec%scm_qv_t_tend = scm_qv_t_tend 
  RETURN
END SUBROUTINE nl_set_scm_qv_t_tend
SUBROUTINE nl_set_scm_th_adv ( id_id , scm_th_adv )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: scm_th_adv
  INTEGER id_id
  model_config_rec%scm_th_adv = scm_th_adv 
  RETURN
END SUBROUTINE nl_set_scm_th_adv
SUBROUTINE nl_set_scm_wind_adv ( id_id , scm_wind_adv )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: scm_wind_adv
  INTEGER id_id
  model_config_rec%scm_wind_adv = scm_wind_adv 
  RETURN
END SUBROUTINE nl_set_scm_wind_adv
SUBROUTINE nl_set_scm_qv_adv ( id_id , scm_qv_adv )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: scm_qv_adv
  INTEGER id_id
  model_config_rec%scm_qv_adv = scm_qv_adv 
  RETURN
END SUBROUTINE nl_set_scm_qv_adv
SUBROUTINE nl_set_scm_ql_adv ( id_id , scm_ql_adv )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: scm_ql_adv
  INTEGER id_id
  model_config_rec%scm_ql_adv = scm_ql_adv 
  RETURN
END SUBROUTINE nl_set_scm_ql_adv
SUBROUTINE nl_set_scm_vert_adv ( id_id , scm_vert_adv )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: scm_vert_adv
  INTEGER id_id
  model_config_rec%scm_vert_adv = scm_vert_adv 
  RETURN
END SUBROUTINE nl_set_scm_vert_adv
SUBROUTINE nl_set_num_force_soil_layers ( id_id , num_force_soil_layers )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: num_force_soil_layers
  INTEGER id_id
  model_config_rec%num_force_soil_layers = num_force_soil_layers 
  RETURN
END SUBROUTINE nl_set_num_force_soil_layers
SUBROUTINE nl_set_scm_soilt_force ( id_id , scm_soilt_force )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: scm_soilt_force
  INTEGER id_id
  model_config_rec%scm_soilt_force = scm_soilt_force 
  RETURN
END SUBROUTINE nl_set_scm_soilt_force
SUBROUTINE nl_set_scm_soilq_force ( id_id , scm_soilq_force )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: scm_soilq_force
  INTEGER id_id
  model_config_rec%scm_soilq_force = scm_soilq_force 
  RETURN
END SUBROUTINE nl_set_scm_soilq_force
SUBROUTINE nl_set_scm_force_th_largescale ( id_id , scm_force_th_largescale )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: scm_force_th_largescale
  INTEGER id_id
  model_config_rec%scm_force_th_largescale = scm_force_th_largescale 
  RETURN
END SUBROUTINE nl_set_scm_force_th_largescale
SUBROUTINE nl_set_scm_force_qv_largescale ( id_id , scm_force_qv_largescale )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: scm_force_qv_largescale
  INTEGER id_id
  model_config_rec%scm_force_qv_largescale = scm_force_qv_largescale 
  RETURN
END SUBROUTINE nl_set_scm_force_qv_largescale
SUBROUTINE nl_set_scm_force_ql_largescale ( id_id , scm_force_ql_largescale )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: scm_force_ql_largescale
  INTEGER id_id
  model_config_rec%scm_force_ql_largescale = scm_force_ql_largescale 
  RETURN
END SUBROUTINE nl_set_scm_force_ql_largescale
SUBROUTINE nl_set_scm_force_wind_largescale ( id_id , scm_force_wind_largescale )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: scm_force_wind_largescale
  INTEGER id_id
  model_config_rec%scm_force_wind_largescale = scm_force_wind_largescale 
  RETURN
END SUBROUTINE nl_set_scm_force_wind_largescale
SUBROUTINE nl_set_scm_force_skintemp ( id_id , scm_force_skintemp )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: scm_force_skintemp
  INTEGER id_id
  model_config_rec%scm_force_skintemp = scm_force_skintemp 
  RETURN
END SUBROUTINE nl_set_scm_force_skintemp
SUBROUTINE nl_set_scm_force_flux ( id_id , scm_force_flux )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: scm_force_flux
  INTEGER id_id
  model_config_rec%scm_force_flux = scm_force_flux 
  RETURN
END SUBROUTINE nl_set_scm_force_flux
SUBROUTINE nl_set_dyn_opt ( id_id , dyn_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: dyn_opt
  INTEGER id_id
  model_config_rec%dyn_opt = dyn_opt 
  RETURN
END SUBROUTINE nl_set_dyn_opt
SUBROUTINE nl_set_rk_ord ( id_id , rk_ord )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: rk_ord
  INTEGER id_id
  model_config_rec%rk_ord = rk_ord 
  RETURN
END SUBROUTINE nl_set_rk_ord
SUBROUTINE nl_set_w_damping ( id_id , w_damping )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: w_damping
  INTEGER id_id
  model_config_rec%w_damping = w_damping 
  RETURN
END SUBROUTINE nl_set_w_damping
SUBROUTINE nl_set_diff_opt ( id_id , diff_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: diff_opt
  INTEGER id_id
  model_config_rec%diff_opt(id_id) = diff_opt
  RETURN
END SUBROUTINE nl_set_diff_opt
SUBROUTINE nl_set_diff_opt_dfi ( id_id , diff_opt_dfi )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: diff_opt_dfi
  INTEGER id_id
  model_config_rec%diff_opt_dfi(id_id) = diff_opt_dfi
  RETURN
END SUBROUTINE nl_set_diff_opt_dfi
#endif
#if (NNN == 2)
SUBROUTINE nl_set_km_opt ( id_id , km_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: km_opt
  INTEGER id_id
  model_config_rec%km_opt(id_id) = km_opt
  RETURN
END SUBROUTINE nl_set_km_opt
SUBROUTINE nl_set_km_opt_dfi ( id_id , km_opt_dfi )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: km_opt_dfi
  INTEGER id_id
  model_config_rec%km_opt_dfi(id_id) = km_opt_dfi
  RETURN
END SUBROUTINE nl_set_km_opt_dfi
SUBROUTINE nl_set_damp_opt ( id_id , damp_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: damp_opt
  INTEGER id_id
  model_config_rec%damp_opt = damp_opt 
  RETURN
END SUBROUTINE nl_set_damp_opt
SUBROUTINE nl_set_rad_nudge ( id_id , rad_nudge )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: rad_nudge
  INTEGER id_id
  model_config_rec%rad_nudge = rad_nudge 
  RETURN
END SUBROUTINE nl_set_rad_nudge
SUBROUTINE nl_set_gwd_opt ( id_id , gwd_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: gwd_opt
  INTEGER id_id
  model_config_rec%gwd_opt = gwd_opt 
  RETURN
END SUBROUTINE nl_set_gwd_opt
SUBROUTINE nl_set_max_rot_angle_gwd ( id_id , max_rot_angle_gwd )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: max_rot_angle_gwd
  INTEGER id_id
  model_config_rec%max_rot_angle_gwd = max_rot_angle_gwd 
  RETURN
END SUBROUTINE nl_set_max_rot_angle_gwd
SUBROUTINE nl_set_zdamp ( id_id , zdamp )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: zdamp
  INTEGER id_id
  model_config_rec%zdamp(id_id) = zdamp
  RETURN
END SUBROUTINE nl_set_zdamp
SUBROUTINE nl_set_dampcoef ( id_id , dampcoef )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: dampcoef
  INTEGER id_id
  model_config_rec%dampcoef(id_id) = dampcoef
  RETURN
END SUBROUTINE nl_set_dampcoef
SUBROUTINE nl_set_khdif ( id_id , khdif )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: khdif
  INTEGER id_id
  model_config_rec%khdif(id_id) = khdif
  RETURN
END SUBROUTINE nl_set_khdif
SUBROUTINE nl_set_kvdif ( id_id , kvdif )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: kvdif
  INTEGER id_id
  model_config_rec%kvdif(id_id) = kvdif
  RETURN
END SUBROUTINE nl_set_kvdif
SUBROUTINE nl_set_diff_6th_factor ( id_id , diff_6th_factor )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: diff_6th_factor
  INTEGER id_id
  model_config_rec%diff_6th_factor(id_id) = diff_6th_factor
  RETURN
END SUBROUTINE nl_set_diff_6th_factor
SUBROUTINE nl_set_diff_6th_opt ( id_id , diff_6th_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: diff_6th_opt
  INTEGER id_id
  model_config_rec%diff_6th_opt(id_id) = diff_6th_opt
  RETURN
END SUBROUTINE nl_set_diff_6th_opt
SUBROUTINE nl_set_diff_6th_slopeopt ( id_id , diff_6th_slopeopt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: diff_6th_slopeopt
  INTEGER id_id
  model_config_rec%diff_6th_slopeopt(id_id) = diff_6th_slopeopt
  RETURN
END SUBROUTINE nl_set_diff_6th_slopeopt
SUBROUTINE nl_set_diff_6th_thresh ( id_id , diff_6th_thresh )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: diff_6th_thresh
  INTEGER id_id
  model_config_rec%diff_6th_thresh(id_id) = diff_6th_thresh
  RETURN
END SUBROUTINE nl_set_diff_6th_thresh
SUBROUTINE nl_set_use_theta_m ( id_id , use_theta_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: use_theta_m
  INTEGER id_id
  model_config_rec%use_theta_m = use_theta_m 
  RETURN
END SUBROUTINE nl_set_use_theta_m
SUBROUTINE nl_set_use_q_diabatic ( id_id , use_q_diabatic )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: use_q_diabatic
  INTEGER id_id
  model_config_rec%use_q_diabatic = use_q_diabatic 
  RETURN
END SUBROUTINE nl_set_use_q_diabatic
SUBROUTINE nl_set_c_s ( id_id , c_s )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: c_s
  INTEGER id_id
  model_config_rec%c_s(id_id) = c_s
  RETURN
END SUBROUTINE nl_set_c_s
SUBROUTINE nl_set_c_k ( id_id , c_k )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: c_k
  INTEGER id_id
  model_config_rec%c_k(id_id) = c_k
  RETURN
END SUBROUTINE nl_set_c_k
SUBROUTINE nl_set_smdiv ( id_id , smdiv )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: smdiv
  INTEGER id_id
  model_config_rec%smdiv(id_id) = smdiv
  RETURN
END SUBROUTINE nl_set_smdiv
SUBROUTINE nl_set_emdiv ( id_id , emdiv )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: emdiv
  INTEGER id_id
  model_config_rec%emdiv(id_id) = emdiv
  RETURN
END SUBROUTINE nl_set_emdiv
SUBROUTINE nl_set_epssm ( id_id , epssm )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: epssm
  INTEGER id_id
  model_config_rec%epssm(id_id) = epssm
  RETURN
END SUBROUTINE nl_set_epssm
SUBROUTINE nl_set_non_hydrostatic ( id_id , non_hydrostatic )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: non_hydrostatic
  INTEGER id_id
  model_config_rec%non_hydrostatic(id_id) = non_hydrostatic
  RETURN
END SUBROUTINE nl_set_non_hydrostatic
SUBROUTINE nl_set_use_input_w ( id_id , use_input_w )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: use_input_w
  INTEGER id_id
  model_config_rec%use_input_w = use_input_w 
  RETURN
END SUBROUTINE nl_set_use_input_w
SUBROUTINE nl_set_time_step_sound ( id_id , time_step_sound )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: time_step_sound
  INTEGER id_id
  model_config_rec%time_step_sound(id_id) = time_step_sound
  RETURN
END SUBROUTINE nl_set_time_step_sound
SUBROUTINE nl_set_h_mom_adv_order ( id_id , h_mom_adv_order )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: h_mom_adv_order
  INTEGER id_id
  model_config_rec%h_mom_adv_order(id_id) = h_mom_adv_order
  RETURN
END SUBROUTINE nl_set_h_mom_adv_order
SUBROUTINE nl_set_v_mom_adv_order ( id_id , v_mom_adv_order )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: v_mom_adv_order
  INTEGER id_id
  model_config_rec%v_mom_adv_order(id_id) = v_mom_adv_order
  RETURN
END SUBROUTINE nl_set_v_mom_adv_order
SUBROUTINE nl_set_h_sca_adv_order ( id_id , h_sca_adv_order )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: h_sca_adv_order
  INTEGER id_id
  model_config_rec%h_sca_adv_order(id_id) = h_sca_adv_order
  RETURN
END SUBROUTINE nl_set_h_sca_adv_order
SUBROUTINE nl_set_v_sca_adv_order ( id_id , v_sca_adv_order )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: v_sca_adv_order
  INTEGER id_id
  model_config_rec%v_sca_adv_order(id_id) = v_sca_adv_order
  RETURN
END SUBROUTINE nl_set_v_sca_adv_order
SUBROUTINE nl_set_momentum_adv_opt ( id_id , momentum_adv_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: momentum_adv_opt
  INTEGER id_id
  model_config_rec%momentum_adv_opt(id_id) = momentum_adv_opt
  RETURN
END SUBROUTINE nl_set_momentum_adv_opt
SUBROUTINE nl_set_moist_adv_opt ( id_id , moist_adv_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: moist_adv_opt
  INTEGER id_id
  model_config_rec%moist_adv_opt(id_id) = moist_adv_opt
  RETURN
END SUBROUTINE nl_set_moist_adv_opt
SUBROUTINE nl_set_moist_adv_dfi_opt ( id_id , moist_adv_dfi_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: moist_adv_dfi_opt
  INTEGER id_id
  model_config_rec%moist_adv_dfi_opt(id_id) = moist_adv_dfi_opt
  RETURN
END SUBROUTINE nl_set_moist_adv_dfi_opt
SUBROUTINE nl_set_chem_adv_opt ( id_id , chem_adv_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: chem_adv_opt
  INTEGER id_id
  model_config_rec%chem_adv_opt(id_id) = chem_adv_opt
  RETURN
END SUBROUTINE nl_set_chem_adv_opt
SUBROUTINE nl_set_tracer_adv_opt ( id_id , tracer_adv_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: tracer_adv_opt
  INTEGER id_id
  model_config_rec%tracer_adv_opt(id_id) = tracer_adv_opt
  RETURN
END SUBROUTINE nl_set_tracer_adv_opt
SUBROUTINE nl_set_scalar_adv_opt ( id_id , scalar_adv_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: scalar_adv_opt
  INTEGER id_id
  model_config_rec%scalar_adv_opt(id_id) = scalar_adv_opt
  RETURN
END SUBROUTINE nl_set_scalar_adv_opt
SUBROUTINE nl_set_tke_adv_opt ( id_id , tke_adv_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: tke_adv_opt
  INTEGER id_id
  model_config_rec%tke_adv_opt(id_id) = tke_adv_opt
  RETURN
END SUBROUTINE nl_set_tke_adv_opt
SUBROUTINE nl_set_moist_mix2_off ( id_id , moist_mix2_off )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: moist_mix2_off
  INTEGER id_id
  model_config_rec%moist_mix2_off(id_id) = moist_mix2_off
  RETURN
END SUBROUTINE nl_set_moist_mix2_off
SUBROUTINE nl_set_chem_mix2_off ( id_id , chem_mix2_off )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: chem_mix2_off
  INTEGER id_id
  model_config_rec%chem_mix2_off(id_id) = chem_mix2_off
  RETURN
END SUBROUTINE nl_set_chem_mix2_off
SUBROUTINE nl_set_tracer_mix2_off ( id_id , tracer_mix2_off )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: tracer_mix2_off
  INTEGER id_id
  model_config_rec%tracer_mix2_off(id_id) = tracer_mix2_off
  RETURN
END SUBROUTINE nl_set_tracer_mix2_off
SUBROUTINE nl_set_scalar_mix2_off ( id_id , scalar_mix2_off )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: scalar_mix2_off
  INTEGER id_id
  model_config_rec%scalar_mix2_off(id_id) = scalar_mix2_off
  RETURN
END SUBROUTINE nl_set_scalar_mix2_off
SUBROUTINE nl_set_tke_mix2_off ( id_id , tke_mix2_off )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: tke_mix2_off
  INTEGER id_id
  model_config_rec%tke_mix2_off(id_id) = tke_mix2_off
  RETURN
END SUBROUTINE nl_set_tke_mix2_off
SUBROUTINE nl_set_moist_mix6_off ( id_id , moist_mix6_off )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: moist_mix6_off
  INTEGER id_id
  model_config_rec%moist_mix6_off(id_id) = moist_mix6_off
  RETURN
END SUBROUTINE nl_set_moist_mix6_off
SUBROUTINE nl_set_chem_mix6_off ( id_id , chem_mix6_off )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: chem_mix6_off
  INTEGER id_id
  model_config_rec%chem_mix6_off(id_id) = chem_mix6_off
  RETURN
END SUBROUTINE nl_set_chem_mix6_off
SUBROUTINE nl_set_tracer_mix6_off ( id_id , tracer_mix6_off )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: tracer_mix6_off
  INTEGER id_id
  model_config_rec%tracer_mix6_off(id_id) = tracer_mix6_off
  RETURN
END SUBROUTINE nl_set_tracer_mix6_off
SUBROUTINE nl_set_scalar_mix6_off ( id_id , scalar_mix6_off )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: scalar_mix6_off
  INTEGER id_id
  model_config_rec%scalar_mix6_off(id_id) = scalar_mix6_off
  RETURN
END SUBROUTINE nl_set_scalar_mix6_off
SUBROUTINE nl_set_tke_mix6_off ( id_id , tke_mix6_off )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: tke_mix6_off
  INTEGER id_id
  model_config_rec%tke_mix6_off(id_id) = tke_mix6_off
  RETURN
END SUBROUTINE nl_set_tke_mix6_off
SUBROUTINE nl_set_top_radiation ( id_id , top_radiation )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: top_radiation
  INTEGER id_id
  model_config_rec%top_radiation(id_id) = top_radiation
  RETURN
END SUBROUTINE nl_set_top_radiation
SUBROUTINE nl_set_mix_isotropic ( id_id , mix_isotropic )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: mix_isotropic
  INTEGER id_id
  model_config_rec%mix_isotropic(id_id) = mix_isotropic
  RETURN
END SUBROUTINE nl_set_mix_isotropic
SUBROUTINE nl_set_mix_upper_bound ( id_id , mix_upper_bound )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: mix_upper_bound
  INTEGER id_id
  model_config_rec%mix_upper_bound(id_id) = mix_upper_bound
  RETURN
END SUBROUTINE nl_set_mix_upper_bound
SUBROUTINE nl_set_top_lid ( id_id , top_lid )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: top_lid
  INTEGER id_id
  model_config_rec%top_lid(id_id) = top_lid
  RETURN
END SUBROUTINE nl_set_top_lid
SUBROUTINE nl_set_tke_upper_bound ( id_id , tke_upper_bound )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: tke_upper_bound
  INTEGER id_id
  model_config_rec%tke_upper_bound(id_id) = tke_upper_bound
  RETURN
END SUBROUTINE nl_set_tke_upper_bound
SUBROUTINE nl_set_tke_drag_coefficient ( id_id , tke_drag_coefficient )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: tke_drag_coefficient
  INTEGER id_id
  model_config_rec%tke_drag_coefficient(id_id) = tke_drag_coefficient
  RETURN
END SUBROUTINE nl_set_tke_drag_coefficient
SUBROUTINE nl_set_tke_heat_flux ( id_id , tke_heat_flux )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: tke_heat_flux
  INTEGER id_id
  model_config_rec%tke_heat_flux(id_id) = tke_heat_flux
  RETURN
END SUBROUTINE nl_set_tke_heat_flux
SUBROUTINE nl_set_pert_coriolis ( id_id , pert_coriolis )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: pert_coriolis
  INTEGER id_id
  model_config_rec%pert_coriolis(id_id) = pert_coriolis
  RETURN
END SUBROUTINE nl_set_pert_coriolis
SUBROUTINE nl_set_coriolis2d ( id_id , coriolis2d )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: coriolis2d
  INTEGER id_id
  model_config_rec%coriolis2d(id_id) = coriolis2d
  RETURN
END SUBROUTINE nl_set_coriolis2d
SUBROUTINE nl_set_mix_full_fields ( id_id , mix_full_fields )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: mix_full_fields
  INTEGER id_id
  model_config_rec%mix_full_fields(id_id) = mix_full_fields
  RETURN
END SUBROUTINE nl_set_mix_full_fields
SUBROUTINE nl_set_base_pres ( id_id , base_pres )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: base_pres
  INTEGER id_id
  model_config_rec%base_pres = base_pres 
  RETURN
END SUBROUTINE nl_set_base_pres
SUBROUTINE nl_set_base_temp ( id_id , base_temp )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: base_temp
  INTEGER id_id
  model_config_rec%base_temp = base_temp 
  RETURN
END SUBROUTINE nl_set_base_temp
SUBROUTINE nl_set_base_lapse ( id_id , base_lapse )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: base_lapse
  INTEGER id_id
  model_config_rec%base_lapse = base_lapse 
  RETURN
END SUBROUTINE nl_set_base_lapse
SUBROUTINE nl_set_iso_temp ( id_id , iso_temp )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: iso_temp
  INTEGER id_id
  model_config_rec%iso_temp = iso_temp 
  RETURN
END SUBROUTINE nl_set_iso_temp
SUBROUTINE nl_set_base_pres_strat ( id_id , base_pres_strat )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: base_pres_strat
  INTEGER id_id
  model_config_rec%base_pres_strat = base_pres_strat 
  RETURN
END SUBROUTINE nl_set_base_pres_strat
SUBROUTINE nl_set_base_lapse_strat ( id_id , base_lapse_strat )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: base_lapse_strat
  INTEGER id_id
  model_config_rec%base_lapse_strat = base_lapse_strat 
  RETURN
END SUBROUTINE nl_set_base_lapse_strat
SUBROUTINE nl_set_use_baseparam_fr_nml ( id_id , use_baseparam_fr_nml )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: use_baseparam_fr_nml
  INTEGER id_id
  model_config_rec%use_baseparam_fr_nml = use_baseparam_fr_nml 
  RETURN
END SUBROUTINE nl_set_use_baseparam_fr_nml
SUBROUTINE nl_set_fft_filter_lat ( id_id , fft_filter_lat )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fft_filter_lat
  INTEGER id_id
  model_config_rec%fft_filter_lat = fft_filter_lat 
  RETURN
END SUBROUTINE nl_set_fft_filter_lat
SUBROUTINE nl_set_coupled_filtering ( id_id , coupled_filtering )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: coupled_filtering
  INTEGER id_id
  model_config_rec%coupled_filtering = coupled_filtering 
  RETURN
END SUBROUTINE nl_set_coupled_filtering
SUBROUTINE nl_set_pos_def ( id_id , pos_def )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: pos_def
  INTEGER id_id
  model_config_rec%pos_def = pos_def 
  RETURN
END SUBROUTINE nl_set_pos_def
SUBROUTINE nl_set_swap_pole_with_next_j ( id_id , swap_pole_with_next_j )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: swap_pole_with_next_j
  INTEGER id_id
  model_config_rec%swap_pole_with_next_j = swap_pole_with_next_j 
  RETURN
END SUBROUTINE nl_set_swap_pole_with_next_j
SUBROUTINE nl_set_actual_distance_average ( id_id , actual_distance_average )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: actual_distance_average
  INTEGER id_id
  model_config_rec%actual_distance_average = actual_distance_average 
  RETURN
END SUBROUTINE nl_set_actual_distance_average
SUBROUTINE nl_set_rotated_pole ( id_id , rotated_pole )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: rotated_pole
  INTEGER id_id
  model_config_rec%rotated_pole = rotated_pole 
  RETURN
END SUBROUTINE nl_set_rotated_pole
SUBROUTINE nl_set_do_coriolis ( id_id , do_coriolis )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: do_coriolis
  INTEGER id_id
  model_config_rec%do_coriolis(id_id) = do_coriolis
  RETURN
END SUBROUTINE nl_set_do_coriolis
SUBROUTINE nl_set_do_curvature ( id_id , do_curvature )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: do_curvature
  INTEGER id_id
  model_config_rec%do_curvature(id_id) = do_curvature
  RETURN
END SUBROUTINE nl_set_do_curvature
SUBROUTINE nl_set_do_gradp ( id_id , do_gradp )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: do_gradp
  INTEGER id_id
  model_config_rec%do_gradp(id_id) = do_gradp
  RETURN
END SUBROUTINE nl_set_do_gradp
SUBROUTINE nl_set_tracer_opt ( id_id , tracer_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: tracer_opt
  INTEGER id_id
  model_config_rec%tracer_opt(id_id) = tracer_opt
  RETURN
END SUBROUTINE nl_set_tracer_opt
SUBROUTINE nl_set_tenddiag ( id_id , tenddiag )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: tenddiag
  INTEGER id_id
  model_config_rec%tenddiag(id_id) = tenddiag
  RETURN
END SUBROUTINE nl_set_tenddiag
SUBROUTINE nl_set_spec_bdy_width ( id_id , spec_bdy_width )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: spec_bdy_width
  INTEGER id_id
  model_config_rec%spec_bdy_width = spec_bdy_width 
  RETURN
END SUBROUTINE nl_set_spec_bdy_width
SUBROUTINE nl_set_spec_zone ( id_id , spec_zone )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: spec_zone
  INTEGER id_id
  model_config_rec%spec_zone = spec_zone 
  RETURN
END SUBROUTINE nl_set_spec_zone
SUBROUTINE nl_set_relax_zone ( id_id , relax_zone )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: relax_zone
  INTEGER id_id
  model_config_rec%relax_zone = relax_zone 
  RETURN
END SUBROUTINE nl_set_relax_zone
SUBROUTINE nl_set_specified ( id_id , specified )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: specified
  INTEGER id_id
  model_config_rec%specified(id_id) = specified
  RETURN
END SUBROUTINE nl_set_specified
SUBROUTINE nl_set_constant_bc ( id_id , constant_bc )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: constant_bc
  INTEGER id_id
  model_config_rec%constant_bc = constant_bc 
  RETURN
END SUBROUTINE nl_set_constant_bc
SUBROUTINE nl_set_periodic_x ( id_id , periodic_x )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: periodic_x
  INTEGER id_id
  model_config_rec%periodic_x(id_id) = periodic_x
  RETURN
END SUBROUTINE nl_set_periodic_x
SUBROUTINE nl_set_symmetric_xs ( id_id , symmetric_xs )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: symmetric_xs
  INTEGER id_id
  model_config_rec%symmetric_xs(id_id) = symmetric_xs
  RETURN
END SUBROUTINE nl_set_symmetric_xs
SUBROUTINE nl_set_symmetric_xe ( id_id , symmetric_xe )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: symmetric_xe
  INTEGER id_id
  model_config_rec%symmetric_xe(id_id) = symmetric_xe
  RETURN
END SUBROUTINE nl_set_symmetric_xe
SUBROUTINE nl_set_open_xs ( id_id , open_xs )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: open_xs
  INTEGER id_id
  model_config_rec%open_xs(id_id) = open_xs
  RETURN
END SUBROUTINE nl_set_open_xs
SUBROUTINE nl_set_open_xe ( id_id , open_xe )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: open_xe
  INTEGER id_id
  model_config_rec%open_xe(id_id) = open_xe
  RETURN
END SUBROUTINE nl_set_open_xe
SUBROUTINE nl_set_periodic_y ( id_id , periodic_y )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: periodic_y
  INTEGER id_id
  model_config_rec%periodic_y(id_id) = periodic_y
  RETURN
END SUBROUTINE nl_set_periodic_y
SUBROUTINE nl_set_symmetric_ys ( id_id , symmetric_ys )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: symmetric_ys
  INTEGER id_id
  model_config_rec%symmetric_ys(id_id) = symmetric_ys
  RETURN
END SUBROUTINE nl_set_symmetric_ys
SUBROUTINE nl_set_symmetric_ye ( id_id , symmetric_ye )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: symmetric_ye
  INTEGER id_id
  model_config_rec%symmetric_ye(id_id) = symmetric_ye
  RETURN
END SUBROUTINE nl_set_symmetric_ye
SUBROUTINE nl_set_open_ys ( id_id , open_ys )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: open_ys
  INTEGER id_id
  model_config_rec%open_ys(id_id) = open_ys
  RETURN
END SUBROUTINE nl_set_open_ys
SUBROUTINE nl_set_open_ye ( id_id , open_ye )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: open_ye
  INTEGER id_id
  model_config_rec%open_ye(id_id) = open_ye
  RETURN
END SUBROUTINE nl_set_open_ye
SUBROUTINE nl_set_polar ( id_id , polar )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: polar
  INTEGER id_id
  model_config_rec%polar(id_id) = polar
  RETURN
END SUBROUTINE nl_set_polar
SUBROUTINE nl_set_nested ( id_id , nested )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: nested
  INTEGER id_id
  model_config_rec%nested(id_id) = nested
  RETURN
END SUBROUTINE nl_set_nested
SUBROUTINE nl_set_spec_exp ( id_id , spec_exp )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: spec_exp
  INTEGER id_id
  model_config_rec%spec_exp = spec_exp 
  RETURN
END SUBROUTINE nl_set_spec_exp
SUBROUTINE nl_set_spec_bdy_final_mu ( id_id , spec_bdy_final_mu )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: spec_bdy_final_mu
  INTEGER id_id
  model_config_rec%spec_bdy_final_mu = spec_bdy_final_mu 
  RETURN
END SUBROUTINE nl_set_spec_bdy_final_mu
SUBROUTINE nl_set_real_data_init_type ( id_id , real_data_init_type )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: real_data_init_type
  INTEGER id_id
  model_config_rec%real_data_init_type = real_data_init_type 
  RETURN
END SUBROUTINE nl_set_real_data_init_type
SUBROUTINE nl_set_have_bcs_moist ( id_id , have_bcs_moist )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: have_bcs_moist
  INTEGER id_id
  model_config_rec%have_bcs_moist(id_id) = have_bcs_moist
  RETURN
END SUBROUTINE nl_set_have_bcs_moist
SUBROUTINE nl_set_have_bcs_scalar ( id_id , have_bcs_scalar )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: have_bcs_scalar
  INTEGER id_id
  model_config_rec%have_bcs_scalar(id_id) = have_bcs_scalar
  RETURN
END SUBROUTINE nl_set_have_bcs_scalar
SUBROUTINE nl_set_background_proc_id ( id_id , background_proc_id )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: background_proc_id
  INTEGER id_id
  model_config_rec%background_proc_id = background_proc_id 
  RETURN
END SUBROUTINE nl_set_background_proc_id
SUBROUTINE nl_set_forecast_proc_id ( id_id , forecast_proc_id )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: forecast_proc_id
  INTEGER id_id
  model_config_rec%forecast_proc_id = forecast_proc_id 
  RETURN
END SUBROUTINE nl_set_forecast_proc_id
SUBROUTINE nl_set_production_status ( id_id , production_status )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: production_status
  INTEGER id_id
  model_config_rec%production_status = production_status 
  RETURN
END SUBROUTINE nl_set_production_status
SUBROUTINE nl_set_compression ( id_id , compression )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: compression
  INTEGER id_id
  model_config_rec%compression = compression 
  RETURN
END SUBROUTINE nl_set_compression
SUBROUTINE nl_set_nobs_ndg_vars ( id_id , nobs_ndg_vars )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: nobs_ndg_vars
  INTEGER id_id
  model_config_rec%nobs_ndg_vars = nobs_ndg_vars 
  RETURN
END SUBROUTINE nl_set_nobs_ndg_vars
SUBROUTINE nl_set_nobs_err_flds ( id_id , nobs_err_flds )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: nobs_err_flds
  INTEGER id_id
  model_config_rec%nobs_err_flds = nobs_err_flds 
  RETURN
END SUBROUTINE nl_set_nobs_err_flds
SUBROUTINE nl_set_cen_lat ( id_id , cen_lat )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: cen_lat
  INTEGER id_id
  model_config_rec%cen_lat(id_id) = cen_lat
  RETURN
END SUBROUTINE nl_set_cen_lat
SUBROUTINE nl_set_cen_lon ( id_id , cen_lon )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: cen_lon
  INTEGER id_id
  model_config_rec%cen_lon(id_id) = cen_lon
  RETURN
END SUBROUTINE nl_set_cen_lon
SUBROUTINE nl_set_truelat1 ( id_id , truelat1 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: truelat1
  INTEGER id_id
  model_config_rec%truelat1(id_id) = truelat1
  RETURN
END SUBROUTINE nl_set_truelat1
SUBROUTINE nl_set_truelat2 ( id_id , truelat2 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: truelat2
  INTEGER id_id
  model_config_rec%truelat2(id_id) = truelat2
  RETURN
END SUBROUTINE nl_set_truelat2
SUBROUTINE nl_set_moad_cen_lat ( id_id , moad_cen_lat )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: moad_cen_lat
  INTEGER id_id
  model_config_rec%moad_cen_lat(id_id) = moad_cen_lat
  RETURN
END SUBROUTINE nl_set_moad_cen_lat
SUBROUTINE nl_set_stand_lon ( id_id , stand_lon )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: stand_lon
  INTEGER id_id
  model_config_rec%stand_lon(id_id) = stand_lon
  RETURN
END SUBROUTINE nl_set_stand_lon
SUBROUTINE nl_set_pole_lat ( id_id , pole_lat )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: pole_lat
  INTEGER id_id
  model_config_rec%pole_lat(id_id) = pole_lat
  RETURN
END SUBROUTINE nl_set_pole_lat
SUBROUTINE nl_set_pole_lon ( id_id , pole_lon )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: pole_lon
  INTEGER id_id
  model_config_rec%pole_lon(id_id) = pole_lon
  RETURN
END SUBROUTINE nl_set_pole_lon
SUBROUTINE nl_set_flag_metgrid ( id_id , flag_metgrid )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: flag_metgrid
  INTEGER id_id
  model_config_rec%flag_metgrid = flag_metgrid 
  RETURN
END SUBROUTINE nl_set_flag_metgrid
SUBROUTINE nl_set_flag_snow ( id_id , flag_snow )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: flag_snow
  INTEGER id_id
  model_config_rec%flag_snow = flag_snow 
  RETURN
END SUBROUTINE nl_set_flag_snow
SUBROUTINE nl_set_flag_psfc ( id_id , flag_psfc )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: flag_psfc
  INTEGER id_id
  model_config_rec%flag_psfc = flag_psfc 
  RETURN
END SUBROUTINE nl_set_flag_psfc
SUBROUTINE nl_set_flag_sm000010 ( id_id , flag_sm000010 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: flag_sm000010
  INTEGER id_id
  model_config_rec%flag_sm000010 = flag_sm000010 
  RETURN
END SUBROUTINE nl_set_flag_sm000010
SUBROUTINE nl_set_flag_sm010040 ( id_id , flag_sm010040 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: flag_sm010040
  INTEGER id_id
  model_config_rec%flag_sm010040 = flag_sm010040 
  RETURN
END SUBROUTINE nl_set_flag_sm010040
SUBROUTINE nl_set_flag_sm040100 ( id_id , flag_sm040100 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: flag_sm040100
  INTEGER id_id
  model_config_rec%flag_sm040100 = flag_sm040100 
  RETURN
END SUBROUTINE nl_set_flag_sm040100
SUBROUTINE nl_set_flag_sm100200 ( id_id , flag_sm100200 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: flag_sm100200
  INTEGER id_id
  model_config_rec%flag_sm100200 = flag_sm100200 
  RETURN
END SUBROUTINE nl_set_flag_sm100200
SUBROUTINE nl_set_flag_st000010 ( id_id , flag_st000010 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: flag_st000010
  INTEGER id_id
  model_config_rec%flag_st000010 = flag_st000010 
  RETURN
END SUBROUTINE nl_set_flag_st000010
SUBROUTINE nl_set_flag_st010040 ( id_id , flag_st010040 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: flag_st010040
  INTEGER id_id
  model_config_rec%flag_st010040 = flag_st010040 
  RETURN
END SUBROUTINE nl_set_flag_st010040
SUBROUTINE nl_set_flag_st040100 ( id_id , flag_st040100 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: flag_st040100
  INTEGER id_id
  model_config_rec%flag_st040100 = flag_st040100 
  RETURN
END SUBROUTINE nl_set_flag_st040100
SUBROUTINE nl_set_flag_st100200 ( id_id , flag_st100200 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: flag_st100200
  INTEGER id_id
  model_config_rec%flag_st100200 = flag_st100200 
  RETURN
END SUBROUTINE nl_set_flag_st100200
SUBROUTINE nl_set_flag_soil_layers ( id_id , flag_soil_layers )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: flag_soil_layers
  INTEGER id_id
  model_config_rec%flag_soil_layers = flag_soil_layers 
  RETURN
END SUBROUTINE nl_set_flag_soil_layers
SUBROUTINE nl_set_flag_slp ( id_id , flag_slp )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: flag_slp
  INTEGER id_id
  model_config_rec%flag_slp = flag_slp 
  RETURN
END SUBROUTINE nl_set_flag_slp
SUBROUTINE nl_set_flag_soilhgt ( id_id , flag_soilhgt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: flag_soilhgt
  INTEGER id_id
  model_config_rec%flag_soilhgt = flag_soilhgt 
  RETURN
END SUBROUTINE nl_set_flag_soilhgt
SUBROUTINE nl_set_flag_mf_xy ( id_id , flag_mf_xy )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: flag_mf_xy
  INTEGER id_id
  model_config_rec%flag_mf_xy = flag_mf_xy 
  RETURN
END SUBROUTINE nl_set_flag_mf_xy
SUBROUTINE nl_set_flag_um_soil ( id_id , flag_um_soil )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: flag_um_soil
  INTEGER id_id
  model_config_rec%flag_um_soil = flag_um_soil 
  RETURN
END SUBROUTINE nl_set_flag_um_soil
SUBROUTINE nl_set_bdyfrq ( id_id , bdyfrq )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: bdyfrq
  INTEGER id_id
  model_config_rec%bdyfrq(id_id) = bdyfrq
  RETURN
END SUBROUTINE nl_set_bdyfrq
SUBROUTINE nl_set_mminlu ( id_id , mminlu )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: mminlu
  INTEGER id_id
  model_config_rec%mminlu(id_id) = mminlu
  RETURN
END SUBROUTINE nl_set_mminlu
SUBROUTINE nl_set_iswater ( id_id , iswater )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: iswater
  INTEGER id_id
  model_config_rec%iswater(id_id) = iswater
  RETURN
END SUBROUTINE nl_set_iswater
SUBROUTINE nl_set_islake ( id_id , islake )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: islake
  INTEGER id_id
  model_config_rec%islake(id_id) = islake
  RETURN
END SUBROUTINE nl_set_islake
SUBROUTINE nl_set_isice ( id_id , isice )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: isice
  INTEGER id_id
  model_config_rec%isice(id_id) = isice
  RETURN
END SUBROUTINE nl_set_isice
SUBROUTINE nl_set_isurban ( id_id , isurban )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: isurban
  INTEGER id_id
  model_config_rec%isurban(id_id) = isurban
  RETURN
END SUBROUTINE nl_set_isurban
SUBROUTINE nl_set_isoilwater ( id_id , isoilwater )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: isoilwater
  INTEGER id_id
  model_config_rec%isoilwater(id_id) = isoilwater
  RETURN
END SUBROUTINE nl_set_isoilwater
SUBROUTINE nl_set_map_proj ( id_id , map_proj )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: map_proj
  INTEGER id_id
  model_config_rec%map_proj(id_id) = map_proj
  RETURN
END SUBROUTINE nl_set_map_proj
SUBROUTINE nl_set_use_wps_input ( id_id , use_wps_input )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: use_wps_input
  INTEGER id_id
  model_config_rec%use_wps_input = use_wps_input 
  RETURN
END SUBROUTINE nl_set_use_wps_input
SUBROUTINE nl_set_dfi_stage ( id_id , dfi_stage )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: dfi_stage
  INTEGER id_id
  model_config_rec%dfi_stage(id_id) = dfi_stage
  RETURN
END SUBROUTINE nl_set_dfi_stage
SUBROUTINE nl_set_mp_physics_dfi ( id_id , mp_physics_dfi )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: mp_physics_dfi
  INTEGER id_id
  model_config_rec%mp_physics_dfi(id_id) = mp_physics_dfi
  RETURN
END SUBROUTINE nl_set_mp_physics_dfi
SUBROUTINE nl_set_bl_pbl_physics_dfi ( id_id , bl_pbl_physics_dfi )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: bl_pbl_physics_dfi
  INTEGER id_id
  model_config_rec%bl_pbl_physics_dfi(id_id) = bl_pbl_physics_dfi
  RETURN
END SUBROUTINE nl_set_bl_pbl_physics_dfi
SUBROUTINE nl_set_windfarm_opt ( id_id , windfarm_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: windfarm_opt
  INTEGER id_id
  model_config_rec%windfarm_opt(id_id) = windfarm_opt
  RETURN
END SUBROUTINE nl_set_windfarm_opt
SUBROUTINE nl_set_windfarm_ij ( id_id , windfarm_ij )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: windfarm_ij
  INTEGER id_id
  model_config_rec%windfarm_ij = windfarm_ij 
  RETURN
END SUBROUTINE nl_set_windfarm_ij
SUBROUTINE nl_set_ideal_case ( id_id , ideal_case )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: ideal_case
  INTEGER id_id
  model_config_rec%ideal_case = ideal_case 
  RETURN
END SUBROUTINE nl_set_ideal_case
SUBROUTINE nl_set_hailcast_opt ( id_id , hailcast_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: hailcast_opt
  INTEGER id_id
  model_config_rec%hailcast_opt(id_id) = hailcast_opt
  RETURN
END SUBROUTINE nl_set_hailcast_opt
SUBROUTINE nl_set_haildt ( id_id , haildt )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: haildt
  INTEGER id_id
  model_config_rec%haildt(id_id) = haildt
  RETURN
END SUBROUTINE nl_set_haildt
SUBROUTINE nl_set_lightning_option ( id_id , lightning_option )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: lightning_option
  INTEGER id_id
  model_config_rec%lightning_option(id_id) = lightning_option
  RETURN
END SUBROUTINE nl_set_lightning_option
SUBROUTINE nl_set_lightning_dt ( id_id , lightning_dt )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: lightning_dt
  INTEGER id_id
  model_config_rec%lightning_dt(id_id) = lightning_dt
  RETURN
END SUBROUTINE nl_set_lightning_dt
SUBROUTINE nl_set_lightning_start_seconds ( id_id , lightning_start_seconds )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: lightning_start_seconds
  INTEGER id_id
  model_config_rec%lightning_start_seconds(id_id) = lightning_start_seconds
  RETURN
END SUBROUTINE nl_set_lightning_start_seconds
SUBROUTINE nl_set_flashrate_factor ( id_id , flashrate_factor )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: flashrate_factor
  INTEGER id_id
  model_config_rec%flashrate_factor(id_id) = flashrate_factor
  RETURN
END SUBROUTINE nl_set_flashrate_factor
SUBROUTINE nl_set_iccg_method ( id_id , iccg_method )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: iccg_method
  INTEGER id_id
  model_config_rec%iccg_method(id_id) = iccg_method
  RETURN
END SUBROUTINE nl_set_iccg_method
SUBROUTINE nl_set_iccg_prescribed_num ( id_id , iccg_prescribed_num )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: iccg_prescribed_num
  INTEGER id_id
  model_config_rec%iccg_prescribed_num(id_id) = iccg_prescribed_num
  RETURN
END SUBROUTINE nl_set_iccg_prescribed_num
SUBROUTINE nl_set_iccg_prescribed_den ( id_id , iccg_prescribed_den )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: iccg_prescribed_den
  INTEGER id_id
  model_config_rec%iccg_prescribed_den(id_id) = iccg_prescribed_den
  RETURN
END SUBROUTINE nl_set_iccg_prescribed_den
SUBROUTINE nl_set_cellcount_method ( id_id , cellcount_method )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: cellcount_method
  INTEGER id_id
  model_config_rec%cellcount_method(id_id) = cellcount_method
  RETURN
END SUBROUTINE nl_set_cellcount_method
SUBROUTINE nl_set_cldtop_adjustment ( id_id , cldtop_adjustment )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: cldtop_adjustment
  INTEGER id_id
  model_config_rec%cldtop_adjustment(id_id) = cldtop_adjustment
  RETURN
END SUBROUTINE nl_set_cldtop_adjustment
SUBROUTINE nl_set_sf_lake_physics ( id_id , sf_lake_physics )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: sf_lake_physics
  INTEGER id_id
  model_config_rec%sf_lake_physics(id_id) = sf_lake_physics
  RETURN
END SUBROUTINE nl_set_sf_lake_physics
SUBROUTINE nl_set_auxinput1_inname ( id_id , auxinput1_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput1_inname
  INTEGER id_id
  model_config_rec%auxinput1_inname = trim(auxinput1_inname) 
  RETURN
END SUBROUTINE nl_set_auxinput1_inname
SUBROUTINE nl_set_io_form_auxinput1 ( id_id , io_form_auxinput1 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxinput1
  INTEGER id_id
  model_config_rec%io_form_auxinput1 = io_form_auxinput1 
  RETURN
END SUBROUTINE nl_set_io_form_auxinput1
SUBROUTINE nl_set_override_restart_timers ( id_id , override_restart_timers )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: override_restart_timers
  INTEGER id_id
  model_config_rec%override_restart_timers = override_restart_timers 
  RETURN
END SUBROUTINE nl_set_override_restart_timers
SUBROUTINE nl_set_auxhist1_inname ( id_id , auxhist1_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist1_inname
  INTEGER id_id
  model_config_rec%auxhist1_inname = trim(auxhist1_inname) 
  RETURN
END SUBROUTINE nl_set_auxhist1_inname
SUBROUTINE nl_set_auxhist1_outname ( id_id , auxhist1_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist1_outname
  INTEGER id_id
  model_config_rec%auxhist1_outname = trim(auxhist1_outname) 
  RETURN
END SUBROUTINE nl_set_auxhist1_outname
SUBROUTINE nl_set_auxhist1_interval_y ( id_id , auxhist1_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist1_interval_y
  INTEGER id_id
  model_config_rec%auxhist1_interval_y(id_id) = auxhist1_interval_y
  RETURN
END SUBROUTINE nl_set_auxhist1_interval_y
SUBROUTINE nl_set_auxhist1_interval_d ( id_id , auxhist1_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist1_interval_d
  INTEGER id_id
  model_config_rec%auxhist1_interval_d(id_id) = auxhist1_interval_d
  RETURN
END SUBROUTINE nl_set_auxhist1_interval_d
SUBROUTINE nl_set_auxhist1_interval_h ( id_id , auxhist1_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist1_interval_h
  INTEGER id_id
  model_config_rec%auxhist1_interval_h(id_id) = auxhist1_interval_h
  RETURN
END SUBROUTINE nl_set_auxhist1_interval_h
SUBROUTINE nl_set_auxhist1_interval_m ( id_id , auxhist1_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist1_interval_m
  INTEGER id_id
  model_config_rec%auxhist1_interval_m(id_id) = auxhist1_interval_m
  RETURN
END SUBROUTINE nl_set_auxhist1_interval_m
SUBROUTINE nl_set_auxhist1_interval_s ( id_id , auxhist1_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist1_interval_s
  INTEGER id_id
  model_config_rec%auxhist1_interval_s(id_id) = auxhist1_interval_s
  RETURN
END SUBROUTINE nl_set_auxhist1_interval_s
SUBROUTINE nl_set_auxhist1_interval ( id_id , auxhist1_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist1_interval
  INTEGER id_id
  model_config_rec%auxhist1_interval(id_id) = auxhist1_interval
  RETURN
END SUBROUTINE nl_set_auxhist1_interval
SUBROUTINE nl_set_auxhist1_begin_y ( id_id , auxhist1_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist1_begin_y
  INTEGER id_id
  model_config_rec%auxhist1_begin_y(id_id) = auxhist1_begin_y
  RETURN
END SUBROUTINE nl_set_auxhist1_begin_y
SUBROUTINE nl_set_auxhist1_begin_d ( id_id , auxhist1_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist1_begin_d
  INTEGER id_id
  model_config_rec%auxhist1_begin_d(id_id) = auxhist1_begin_d
  RETURN
END SUBROUTINE nl_set_auxhist1_begin_d
SUBROUTINE nl_set_auxhist1_begin_h ( id_id , auxhist1_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist1_begin_h
  INTEGER id_id
  model_config_rec%auxhist1_begin_h(id_id) = auxhist1_begin_h
  RETURN
END SUBROUTINE nl_set_auxhist1_begin_h
SUBROUTINE nl_set_auxhist1_begin_m ( id_id , auxhist1_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist1_begin_m
  INTEGER id_id
  model_config_rec%auxhist1_begin_m(id_id) = auxhist1_begin_m
  RETURN
END SUBROUTINE nl_set_auxhist1_begin_m
SUBROUTINE nl_set_auxhist1_begin_s ( id_id , auxhist1_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist1_begin_s
  INTEGER id_id
  model_config_rec%auxhist1_begin_s(id_id) = auxhist1_begin_s
  RETURN
END SUBROUTINE nl_set_auxhist1_begin_s
SUBROUTINE nl_set_auxhist1_begin ( id_id , auxhist1_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist1_begin
  INTEGER id_id
  model_config_rec%auxhist1_begin(id_id) = auxhist1_begin
  RETURN
END SUBROUTINE nl_set_auxhist1_begin
SUBROUTINE nl_set_auxhist1_end_y ( id_id , auxhist1_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist1_end_y
  INTEGER id_id
  model_config_rec%auxhist1_end_y(id_id) = auxhist1_end_y
  RETURN
END SUBROUTINE nl_set_auxhist1_end_y
SUBROUTINE nl_set_auxhist1_end_d ( id_id , auxhist1_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist1_end_d
  INTEGER id_id
  model_config_rec%auxhist1_end_d(id_id) = auxhist1_end_d
  RETURN
END SUBROUTINE nl_set_auxhist1_end_d
SUBROUTINE nl_set_auxhist1_end_h ( id_id , auxhist1_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist1_end_h
  INTEGER id_id
  model_config_rec%auxhist1_end_h(id_id) = auxhist1_end_h
  RETURN
END SUBROUTINE nl_set_auxhist1_end_h
SUBROUTINE nl_set_auxhist1_end_m ( id_id , auxhist1_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist1_end_m
  INTEGER id_id
  model_config_rec%auxhist1_end_m(id_id) = auxhist1_end_m
  RETURN
END SUBROUTINE nl_set_auxhist1_end_m
SUBROUTINE nl_set_auxhist1_end_s ( id_id , auxhist1_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist1_end_s
  INTEGER id_id
  model_config_rec%auxhist1_end_s(id_id) = auxhist1_end_s
  RETURN
END SUBROUTINE nl_set_auxhist1_end_s
SUBROUTINE nl_set_auxhist1_end ( id_id , auxhist1_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist1_end
  INTEGER id_id
  model_config_rec%auxhist1_end(id_id) = auxhist1_end
  RETURN
END SUBROUTINE nl_set_auxhist1_end
SUBROUTINE nl_set_io_form_auxhist1 ( id_id , io_form_auxhist1 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxhist1
  INTEGER id_id
  model_config_rec%io_form_auxhist1 = io_form_auxhist1 
  RETURN
END SUBROUTINE nl_set_io_form_auxhist1
SUBROUTINE nl_set_frames_per_auxhist1 ( id_id , frames_per_auxhist1 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxhist1
  INTEGER id_id
  model_config_rec%frames_per_auxhist1(id_id) = frames_per_auxhist1
  RETURN
END SUBROUTINE nl_set_frames_per_auxhist1
SUBROUTINE nl_set_auxhist2_inname ( id_id , auxhist2_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist2_inname
  INTEGER id_id
  model_config_rec%auxhist2_inname = trim(auxhist2_inname) 
  RETURN
END SUBROUTINE nl_set_auxhist2_inname
SUBROUTINE nl_set_auxhist2_outname ( id_id , auxhist2_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist2_outname
  INTEGER id_id
  model_config_rec%auxhist2_outname = trim(auxhist2_outname) 
  RETURN
END SUBROUTINE nl_set_auxhist2_outname
SUBROUTINE nl_set_auxhist2_interval_y ( id_id , auxhist2_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist2_interval_y
  INTEGER id_id
  model_config_rec%auxhist2_interval_y(id_id) = auxhist2_interval_y
  RETURN
END SUBROUTINE nl_set_auxhist2_interval_y
SUBROUTINE nl_set_auxhist2_interval_d ( id_id , auxhist2_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist2_interval_d
  INTEGER id_id
  model_config_rec%auxhist2_interval_d(id_id) = auxhist2_interval_d
  RETURN
END SUBROUTINE nl_set_auxhist2_interval_d
SUBROUTINE nl_set_auxhist2_interval_h ( id_id , auxhist2_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist2_interval_h
  INTEGER id_id
  model_config_rec%auxhist2_interval_h(id_id) = auxhist2_interval_h
  RETURN
END SUBROUTINE nl_set_auxhist2_interval_h
SUBROUTINE nl_set_auxhist2_interval_m ( id_id , auxhist2_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist2_interval_m
  INTEGER id_id
  model_config_rec%auxhist2_interval_m(id_id) = auxhist2_interval_m
  RETURN
END SUBROUTINE nl_set_auxhist2_interval_m
SUBROUTINE nl_set_auxhist2_interval_s ( id_id , auxhist2_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist2_interval_s
  INTEGER id_id
  model_config_rec%auxhist2_interval_s(id_id) = auxhist2_interval_s
  RETURN
END SUBROUTINE nl_set_auxhist2_interval_s
SUBROUTINE nl_set_auxhist2_interval ( id_id , auxhist2_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist2_interval
  INTEGER id_id
  model_config_rec%auxhist2_interval(id_id) = auxhist2_interval
  RETURN
END SUBROUTINE nl_set_auxhist2_interval
SUBROUTINE nl_set_auxhist2_begin_y ( id_id , auxhist2_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist2_begin_y
  INTEGER id_id
  model_config_rec%auxhist2_begin_y(id_id) = auxhist2_begin_y
  RETURN
END SUBROUTINE nl_set_auxhist2_begin_y
SUBROUTINE nl_set_auxhist2_begin_d ( id_id , auxhist2_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist2_begin_d
  INTEGER id_id
  model_config_rec%auxhist2_begin_d(id_id) = auxhist2_begin_d
  RETURN
END SUBROUTINE nl_set_auxhist2_begin_d
SUBROUTINE nl_set_auxhist2_begin_h ( id_id , auxhist2_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist2_begin_h
  INTEGER id_id
  model_config_rec%auxhist2_begin_h(id_id) = auxhist2_begin_h
  RETURN
END SUBROUTINE nl_set_auxhist2_begin_h
SUBROUTINE nl_set_auxhist2_begin_m ( id_id , auxhist2_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist2_begin_m
  INTEGER id_id
  model_config_rec%auxhist2_begin_m(id_id) = auxhist2_begin_m
  RETURN
END SUBROUTINE nl_set_auxhist2_begin_m
SUBROUTINE nl_set_auxhist2_begin_s ( id_id , auxhist2_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist2_begin_s
  INTEGER id_id
  model_config_rec%auxhist2_begin_s(id_id) = auxhist2_begin_s
  RETURN
END SUBROUTINE nl_set_auxhist2_begin_s
SUBROUTINE nl_set_auxhist2_begin ( id_id , auxhist2_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist2_begin
  INTEGER id_id
  model_config_rec%auxhist2_begin(id_id) = auxhist2_begin
  RETURN
END SUBROUTINE nl_set_auxhist2_begin
SUBROUTINE nl_set_auxhist2_end_y ( id_id , auxhist2_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist2_end_y
  INTEGER id_id
  model_config_rec%auxhist2_end_y(id_id) = auxhist2_end_y
  RETURN
END SUBROUTINE nl_set_auxhist2_end_y
SUBROUTINE nl_set_auxhist2_end_d ( id_id , auxhist2_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist2_end_d
  INTEGER id_id
  model_config_rec%auxhist2_end_d(id_id) = auxhist2_end_d
  RETURN
END SUBROUTINE nl_set_auxhist2_end_d
SUBROUTINE nl_set_auxhist2_end_h ( id_id , auxhist2_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist2_end_h
  INTEGER id_id
  model_config_rec%auxhist2_end_h(id_id) = auxhist2_end_h
  RETURN
END SUBROUTINE nl_set_auxhist2_end_h
SUBROUTINE nl_set_auxhist2_end_m ( id_id , auxhist2_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist2_end_m
  INTEGER id_id
  model_config_rec%auxhist2_end_m(id_id) = auxhist2_end_m
  RETURN
END SUBROUTINE nl_set_auxhist2_end_m
SUBROUTINE nl_set_auxhist2_end_s ( id_id , auxhist2_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist2_end_s
  INTEGER id_id
  model_config_rec%auxhist2_end_s(id_id) = auxhist2_end_s
  RETURN
END SUBROUTINE nl_set_auxhist2_end_s
SUBROUTINE nl_set_auxhist2_end ( id_id , auxhist2_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist2_end
  INTEGER id_id
  model_config_rec%auxhist2_end(id_id) = auxhist2_end
  RETURN
END SUBROUTINE nl_set_auxhist2_end
SUBROUTINE nl_set_io_form_auxhist2 ( id_id , io_form_auxhist2 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxhist2
  INTEGER id_id
  model_config_rec%io_form_auxhist2 = io_form_auxhist2 
  RETURN
END SUBROUTINE nl_set_io_form_auxhist2
SUBROUTINE nl_set_frames_per_auxhist2 ( id_id , frames_per_auxhist2 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxhist2
  INTEGER id_id
  model_config_rec%frames_per_auxhist2(id_id) = frames_per_auxhist2
  RETURN
END SUBROUTINE nl_set_frames_per_auxhist2
SUBROUTINE nl_set_auxhist3_inname ( id_id , auxhist3_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist3_inname
  INTEGER id_id
  model_config_rec%auxhist3_inname = trim(auxhist3_inname) 
  RETURN
END SUBROUTINE nl_set_auxhist3_inname
SUBROUTINE nl_set_auxhist3_outname ( id_id , auxhist3_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist3_outname
  INTEGER id_id
  model_config_rec%auxhist3_outname = trim(auxhist3_outname) 
  RETURN
END SUBROUTINE nl_set_auxhist3_outname
SUBROUTINE nl_set_auxhist3_interval_y ( id_id , auxhist3_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist3_interval_y
  INTEGER id_id
  model_config_rec%auxhist3_interval_y(id_id) = auxhist3_interval_y
  RETURN
END SUBROUTINE nl_set_auxhist3_interval_y
SUBROUTINE nl_set_auxhist3_interval_d ( id_id , auxhist3_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist3_interval_d
  INTEGER id_id
  model_config_rec%auxhist3_interval_d(id_id) = auxhist3_interval_d
  RETURN
END SUBROUTINE nl_set_auxhist3_interval_d
SUBROUTINE nl_set_auxhist3_interval_h ( id_id , auxhist3_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist3_interval_h
  INTEGER id_id
  model_config_rec%auxhist3_interval_h(id_id) = auxhist3_interval_h
  RETURN
END SUBROUTINE nl_set_auxhist3_interval_h
SUBROUTINE nl_set_auxhist3_interval_m ( id_id , auxhist3_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist3_interval_m
  INTEGER id_id
  model_config_rec%auxhist3_interval_m(id_id) = auxhist3_interval_m
  RETURN
END SUBROUTINE nl_set_auxhist3_interval_m
SUBROUTINE nl_set_auxhist3_interval_s ( id_id , auxhist3_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist3_interval_s
  INTEGER id_id
  model_config_rec%auxhist3_interval_s(id_id) = auxhist3_interval_s
  RETURN
END SUBROUTINE nl_set_auxhist3_interval_s
SUBROUTINE nl_set_auxhist3_interval ( id_id , auxhist3_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist3_interval
  INTEGER id_id
  model_config_rec%auxhist3_interval(id_id) = auxhist3_interval
  RETURN
END SUBROUTINE nl_set_auxhist3_interval
SUBROUTINE nl_set_auxhist3_begin_y ( id_id , auxhist3_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist3_begin_y
  INTEGER id_id
  model_config_rec%auxhist3_begin_y(id_id) = auxhist3_begin_y
  RETURN
END SUBROUTINE nl_set_auxhist3_begin_y
SUBROUTINE nl_set_auxhist3_begin_d ( id_id , auxhist3_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist3_begin_d
  INTEGER id_id
  model_config_rec%auxhist3_begin_d(id_id) = auxhist3_begin_d
  RETURN
END SUBROUTINE nl_set_auxhist3_begin_d
SUBROUTINE nl_set_auxhist3_begin_h ( id_id , auxhist3_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist3_begin_h
  INTEGER id_id
  model_config_rec%auxhist3_begin_h(id_id) = auxhist3_begin_h
  RETURN
END SUBROUTINE nl_set_auxhist3_begin_h
SUBROUTINE nl_set_auxhist3_begin_m ( id_id , auxhist3_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist3_begin_m
  INTEGER id_id
  model_config_rec%auxhist3_begin_m(id_id) = auxhist3_begin_m
  RETURN
END SUBROUTINE nl_set_auxhist3_begin_m
SUBROUTINE nl_set_auxhist3_begin_s ( id_id , auxhist3_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist3_begin_s
  INTEGER id_id
  model_config_rec%auxhist3_begin_s(id_id) = auxhist3_begin_s
  RETURN
END SUBROUTINE nl_set_auxhist3_begin_s
SUBROUTINE nl_set_auxhist3_begin ( id_id , auxhist3_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist3_begin
  INTEGER id_id
  model_config_rec%auxhist3_begin(id_id) = auxhist3_begin
  RETURN
END SUBROUTINE nl_set_auxhist3_begin
SUBROUTINE nl_set_auxhist3_end_y ( id_id , auxhist3_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist3_end_y
  INTEGER id_id
  model_config_rec%auxhist3_end_y(id_id) = auxhist3_end_y
  RETURN
END SUBROUTINE nl_set_auxhist3_end_y
SUBROUTINE nl_set_auxhist3_end_d ( id_id , auxhist3_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist3_end_d
  INTEGER id_id
  model_config_rec%auxhist3_end_d(id_id) = auxhist3_end_d
  RETURN
END SUBROUTINE nl_set_auxhist3_end_d
SUBROUTINE nl_set_auxhist3_end_h ( id_id , auxhist3_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist3_end_h
  INTEGER id_id
  model_config_rec%auxhist3_end_h(id_id) = auxhist3_end_h
  RETURN
END SUBROUTINE nl_set_auxhist3_end_h
SUBROUTINE nl_set_auxhist3_end_m ( id_id , auxhist3_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist3_end_m
  INTEGER id_id
  model_config_rec%auxhist3_end_m(id_id) = auxhist3_end_m
  RETURN
END SUBROUTINE nl_set_auxhist3_end_m
SUBROUTINE nl_set_auxhist3_end_s ( id_id , auxhist3_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist3_end_s
  INTEGER id_id
  model_config_rec%auxhist3_end_s(id_id) = auxhist3_end_s
  RETURN
END SUBROUTINE nl_set_auxhist3_end_s
SUBROUTINE nl_set_auxhist3_end ( id_id , auxhist3_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist3_end
  INTEGER id_id
  model_config_rec%auxhist3_end(id_id) = auxhist3_end
  RETURN
END SUBROUTINE nl_set_auxhist3_end
SUBROUTINE nl_set_io_form_auxhist3 ( id_id , io_form_auxhist3 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxhist3
  INTEGER id_id
  model_config_rec%io_form_auxhist3 = io_form_auxhist3 
  RETURN
END SUBROUTINE nl_set_io_form_auxhist3
SUBROUTINE nl_set_frames_per_auxhist3 ( id_id , frames_per_auxhist3 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxhist3
  INTEGER id_id
  model_config_rec%frames_per_auxhist3(id_id) = frames_per_auxhist3
  RETURN
END SUBROUTINE nl_set_frames_per_auxhist3
SUBROUTINE nl_set_auxhist4_inname ( id_id , auxhist4_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist4_inname
  INTEGER id_id
  model_config_rec%auxhist4_inname = trim(auxhist4_inname) 
  RETURN
END SUBROUTINE nl_set_auxhist4_inname
SUBROUTINE nl_set_auxhist4_outname ( id_id , auxhist4_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist4_outname
  INTEGER id_id
  model_config_rec%auxhist4_outname = trim(auxhist4_outname) 
  RETURN
END SUBROUTINE nl_set_auxhist4_outname
SUBROUTINE nl_set_auxhist4_interval_y ( id_id , auxhist4_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist4_interval_y
  INTEGER id_id
  model_config_rec%auxhist4_interval_y(id_id) = auxhist4_interval_y
  RETURN
END SUBROUTINE nl_set_auxhist4_interval_y
SUBROUTINE nl_set_auxhist4_interval_d ( id_id , auxhist4_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist4_interval_d
  INTEGER id_id
  model_config_rec%auxhist4_interval_d(id_id) = auxhist4_interval_d
  RETURN
END SUBROUTINE nl_set_auxhist4_interval_d
SUBROUTINE nl_set_auxhist4_interval_h ( id_id , auxhist4_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist4_interval_h
  INTEGER id_id
  model_config_rec%auxhist4_interval_h(id_id) = auxhist4_interval_h
  RETURN
END SUBROUTINE nl_set_auxhist4_interval_h
SUBROUTINE nl_set_auxhist4_interval_m ( id_id , auxhist4_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist4_interval_m
  INTEGER id_id
  model_config_rec%auxhist4_interval_m(id_id) = auxhist4_interval_m
  RETURN
END SUBROUTINE nl_set_auxhist4_interval_m
SUBROUTINE nl_set_auxhist4_interval_s ( id_id , auxhist4_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist4_interval_s
  INTEGER id_id
  model_config_rec%auxhist4_interval_s(id_id) = auxhist4_interval_s
  RETURN
END SUBROUTINE nl_set_auxhist4_interval_s
SUBROUTINE nl_set_auxhist4_interval ( id_id , auxhist4_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist4_interval
  INTEGER id_id
  model_config_rec%auxhist4_interval(id_id) = auxhist4_interval
  RETURN
END SUBROUTINE nl_set_auxhist4_interval
SUBROUTINE nl_set_auxhist4_begin_y ( id_id , auxhist4_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist4_begin_y
  INTEGER id_id
  model_config_rec%auxhist4_begin_y(id_id) = auxhist4_begin_y
  RETURN
END SUBROUTINE nl_set_auxhist4_begin_y
SUBROUTINE nl_set_auxhist4_begin_d ( id_id , auxhist4_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist4_begin_d
  INTEGER id_id
  model_config_rec%auxhist4_begin_d(id_id) = auxhist4_begin_d
  RETURN
END SUBROUTINE nl_set_auxhist4_begin_d
SUBROUTINE nl_set_auxhist4_begin_h ( id_id , auxhist4_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist4_begin_h
  INTEGER id_id
  model_config_rec%auxhist4_begin_h(id_id) = auxhist4_begin_h
  RETURN
END SUBROUTINE nl_set_auxhist4_begin_h
SUBROUTINE nl_set_auxhist4_begin_m ( id_id , auxhist4_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist4_begin_m
  INTEGER id_id
  model_config_rec%auxhist4_begin_m(id_id) = auxhist4_begin_m
  RETURN
END SUBROUTINE nl_set_auxhist4_begin_m
SUBROUTINE nl_set_auxhist4_begin_s ( id_id , auxhist4_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist4_begin_s
  INTEGER id_id
  model_config_rec%auxhist4_begin_s(id_id) = auxhist4_begin_s
  RETURN
END SUBROUTINE nl_set_auxhist4_begin_s
SUBROUTINE nl_set_auxhist4_begin ( id_id , auxhist4_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist4_begin
  INTEGER id_id
  model_config_rec%auxhist4_begin(id_id) = auxhist4_begin
  RETURN
END SUBROUTINE nl_set_auxhist4_begin
SUBROUTINE nl_set_auxhist4_end_y ( id_id , auxhist4_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist4_end_y
  INTEGER id_id
  model_config_rec%auxhist4_end_y(id_id) = auxhist4_end_y
  RETURN
END SUBROUTINE nl_set_auxhist4_end_y
SUBROUTINE nl_set_auxhist4_end_d ( id_id , auxhist4_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist4_end_d
  INTEGER id_id
  model_config_rec%auxhist4_end_d(id_id) = auxhist4_end_d
  RETURN
END SUBROUTINE nl_set_auxhist4_end_d
SUBROUTINE nl_set_auxhist4_end_h ( id_id , auxhist4_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist4_end_h
  INTEGER id_id
  model_config_rec%auxhist4_end_h(id_id) = auxhist4_end_h
  RETURN
END SUBROUTINE nl_set_auxhist4_end_h
SUBROUTINE nl_set_auxhist4_end_m ( id_id , auxhist4_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist4_end_m
  INTEGER id_id
  model_config_rec%auxhist4_end_m(id_id) = auxhist4_end_m
  RETURN
END SUBROUTINE nl_set_auxhist4_end_m
SUBROUTINE nl_set_auxhist4_end_s ( id_id , auxhist4_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist4_end_s
  INTEGER id_id
  model_config_rec%auxhist4_end_s(id_id) = auxhist4_end_s
  RETURN
END SUBROUTINE nl_set_auxhist4_end_s
SUBROUTINE nl_set_auxhist4_end ( id_id , auxhist4_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist4_end
  INTEGER id_id
  model_config_rec%auxhist4_end(id_id) = auxhist4_end
  RETURN
END SUBROUTINE nl_set_auxhist4_end
SUBROUTINE nl_set_io_form_auxhist4 ( id_id , io_form_auxhist4 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxhist4
  INTEGER id_id
  model_config_rec%io_form_auxhist4 = io_form_auxhist4 
  RETURN
END SUBROUTINE nl_set_io_form_auxhist4
SUBROUTINE nl_set_frames_per_auxhist4 ( id_id , frames_per_auxhist4 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxhist4
  INTEGER id_id
  model_config_rec%frames_per_auxhist4(id_id) = frames_per_auxhist4
  RETURN
END SUBROUTINE nl_set_frames_per_auxhist4
SUBROUTINE nl_set_auxhist5_inname ( id_id , auxhist5_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist5_inname
  INTEGER id_id
  model_config_rec%auxhist5_inname = trim(auxhist5_inname) 
  RETURN
END SUBROUTINE nl_set_auxhist5_inname
SUBROUTINE nl_set_auxhist5_outname ( id_id , auxhist5_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist5_outname
  INTEGER id_id
  model_config_rec%auxhist5_outname = trim(auxhist5_outname) 
  RETURN
END SUBROUTINE nl_set_auxhist5_outname
SUBROUTINE nl_set_auxhist5_interval_y ( id_id , auxhist5_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist5_interval_y
  INTEGER id_id
  model_config_rec%auxhist5_interval_y(id_id) = auxhist5_interval_y
  RETURN
END SUBROUTINE nl_set_auxhist5_interval_y
SUBROUTINE nl_set_auxhist5_interval_d ( id_id , auxhist5_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist5_interval_d
  INTEGER id_id
  model_config_rec%auxhist5_interval_d(id_id) = auxhist5_interval_d
  RETURN
END SUBROUTINE nl_set_auxhist5_interval_d
SUBROUTINE nl_set_auxhist5_interval_h ( id_id , auxhist5_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist5_interval_h
  INTEGER id_id
  model_config_rec%auxhist5_interval_h(id_id) = auxhist5_interval_h
  RETURN
END SUBROUTINE nl_set_auxhist5_interval_h
SUBROUTINE nl_set_auxhist5_interval_m ( id_id , auxhist5_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist5_interval_m
  INTEGER id_id
  model_config_rec%auxhist5_interval_m(id_id) = auxhist5_interval_m
  RETURN
END SUBROUTINE nl_set_auxhist5_interval_m
SUBROUTINE nl_set_auxhist5_interval_s ( id_id , auxhist5_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist5_interval_s
  INTEGER id_id
  model_config_rec%auxhist5_interval_s(id_id) = auxhist5_interval_s
  RETURN
END SUBROUTINE nl_set_auxhist5_interval_s
SUBROUTINE nl_set_auxhist5_interval ( id_id , auxhist5_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist5_interval
  INTEGER id_id
  model_config_rec%auxhist5_interval(id_id) = auxhist5_interval
  RETURN
END SUBROUTINE nl_set_auxhist5_interval
SUBROUTINE nl_set_auxhist5_begin_y ( id_id , auxhist5_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist5_begin_y
  INTEGER id_id
  model_config_rec%auxhist5_begin_y(id_id) = auxhist5_begin_y
  RETURN
END SUBROUTINE nl_set_auxhist5_begin_y
SUBROUTINE nl_set_auxhist5_begin_d ( id_id , auxhist5_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist5_begin_d
  INTEGER id_id
  model_config_rec%auxhist5_begin_d(id_id) = auxhist5_begin_d
  RETURN
END SUBROUTINE nl_set_auxhist5_begin_d
SUBROUTINE nl_set_auxhist5_begin_h ( id_id , auxhist5_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist5_begin_h
  INTEGER id_id
  model_config_rec%auxhist5_begin_h(id_id) = auxhist5_begin_h
  RETURN
END SUBROUTINE nl_set_auxhist5_begin_h
SUBROUTINE nl_set_auxhist5_begin_m ( id_id , auxhist5_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist5_begin_m
  INTEGER id_id
  model_config_rec%auxhist5_begin_m(id_id) = auxhist5_begin_m
  RETURN
END SUBROUTINE nl_set_auxhist5_begin_m
SUBROUTINE nl_set_auxhist5_begin_s ( id_id , auxhist5_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist5_begin_s
  INTEGER id_id
  model_config_rec%auxhist5_begin_s(id_id) = auxhist5_begin_s
  RETURN
END SUBROUTINE nl_set_auxhist5_begin_s
SUBROUTINE nl_set_auxhist5_begin ( id_id , auxhist5_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist5_begin
  INTEGER id_id
  model_config_rec%auxhist5_begin(id_id) = auxhist5_begin
  RETURN
END SUBROUTINE nl_set_auxhist5_begin
SUBROUTINE nl_set_auxhist5_end_y ( id_id , auxhist5_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist5_end_y
  INTEGER id_id
  model_config_rec%auxhist5_end_y(id_id) = auxhist5_end_y
  RETURN
END SUBROUTINE nl_set_auxhist5_end_y
SUBROUTINE nl_set_auxhist5_end_d ( id_id , auxhist5_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist5_end_d
  INTEGER id_id
  model_config_rec%auxhist5_end_d(id_id) = auxhist5_end_d
  RETURN
END SUBROUTINE nl_set_auxhist5_end_d
SUBROUTINE nl_set_auxhist5_end_h ( id_id , auxhist5_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist5_end_h
  INTEGER id_id
  model_config_rec%auxhist5_end_h(id_id) = auxhist5_end_h
  RETURN
END SUBROUTINE nl_set_auxhist5_end_h
SUBROUTINE nl_set_auxhist5_end_m ( id_id , auxhist5_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist5_end_m
  INTEGER id_id
  model_config_rec%auxhist5_end_m(id_id) = auxhist5_end_m
  RETURN
END SUBROUTINE nl_set_auxhist5_end_m
SUBROUTINE nl_set_auxhist5_end_s ( id_id , auxhist5_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist5_end_s
  INTEGER id_id
  model_config_rec%auxhist5_end_s(id_id) = auxhist5_end_s
  RETURN
END SUBROUTINE nl_set_auxhist5_end_s
SUBROUTINE nl_set_auxhist5_end ( id_id , auxhist5_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist5_end
  INTEGER id_id
  model_config_rec%auxhist5_end(id_id) = auxhist5_end
  RETURN
END SUBROUTINE nl_set_auxhist5_end
#endif
#if (NNN == 3)
SUBROUTINE nl_set_io_form_auxhist5 ( id_id , io_form_auxhist5 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxhist5
  INTEGER id_id
  model_config_rec%io_form_auxhist5 = io_form_auxhist5 
  RETURN
END SUBROUTINE nl_set_io_form_auxhist5
SUBROUTINE nl_set_frames_per_auxhist5 ( id_id , frames_per_auxhist5 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxhist5
  INTEGER id_id
  model_config_rec%frames_per_auxhist5(id_id) = frames_per_auxhist5
  RETURN
END SUBROUTINE nl_set_frames_per_auxhist5
SUBROUTINE nl_set_auxhist6_inname ( id_id , auxhist6_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist6_inname
  INTEGER id_id
  model_config_rec%auxhist6_inname = trim(auxhist6_inname) 
  RETURN
END SUBROUTINE nl_set_auxhist6_inname
SUBROUTINE nl_set_auxhist6_outname ( id_id , auxhist6_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist6_outname
  INTEGER id_id
  model_config_rec%auxhist6_outname = trim(auxhist6_outname) 
  RETURN
END SUBROUTINE nl_set_auxhist6_outname
SUBROUTINE nl_set_auxhist6_interval_y ( id_id , auxhist6_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist6_interval_y
  INTEGER id_id
  model_config_rec%auxhist6_interval_y(id_id) = auxhist6_interval_y
  RETURN
END SUBROUTINE nl_set_auxhist6_interval_y
SUBROUTINE nl_set_auxhist6_interval_d ( id_id , auxhist6_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist6_interval_d
  INTEGER id_id
  model_config_rec%auxhist6_interval_d(id_id) = auxhist6_interval_d
  RETURN
END SUBROUTINE nl_set_auxhist6_interval_d
SUBROUTINE nl_set_auxhist6_interval_h ( id_id , auxhist6_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist6_interval_h
  INTEGER id_id
  model_config_rec%auxhist6_interval_h(id_id) = auxhist6_interval_h
  RETURN
END SUBROUTINE nl_set_auxhist6_interval_h
SUBROUTINE nl_set_auxhist6_interval_m ( id_id , auxhist6_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist6_interval_m
  INTEGER id_id
  model_config_rec%auxhist6_interval_m(id_id) = auxhist6_interval_m
  RETURN
END SUBROUTINE nl_set_auxhist6_interval_m
SUBROUTINE nl_set_auxhist6_interval_s ( id_id , auxhist6_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist6_interval_s
  INTEGER id_id
  model_config_rec%auxhist6_interval_s(id_id) = auxhist6_interval_s
  RETURN
END SUBROUTINE nl_set_auxhist6_interval_s
SUBROUTINE nl_set_auxhist6_interval ( id_id , auxhist6_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist6_interval
  INTEGER id_id
  model_config_rec%auxhist6_interval(id_id) = auxhist6_interval
  RETURN
END SUBROUTINE nl_set_auxhist6_interval
SUBROUTINE nl_set_auxhist6_begin_y ( id_id , auxhist6_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist6_begin_y
  INTEGER id_id
  model_config_rec%auxhist6_begin_y(id_id) = auxhist6_begin_y
  RETURN
END SUBROUTINE nl_set_auxhist6_begin_y
SUBROUTINE nl_set_auxhist6_begin_d ( id_id , auxhist6_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist6_begin_d
  INTEGER id_id
  model_config_rec%auxhist6_begin_d(id_id) = auxhist6_begin_d
  RETURN
END SUBROUTINE nl_set_auxhist6_begin_d
SUBROUTINE nl_set_auxhist6_begin_h ( id_id , auxhist6_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist6_begin_h
  INTEGER id_id
  model_config_rec%auxhist6_begin_h(id_id) = auxhist6_begin_h
  RETURN
END SUBROUTINE nl_set_auxhist6_begin_h
SUBROUTINE nl_set_auxhist6_begin_m ( id_id , auxhist6_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist6_begin_m
  INTEGER id_id
  model_config_rec%auxhist6_begin_m(id_id) = auxhist6_begin_m
  RETURN
END SUBROUTINE nl_set_auxhist6_begin_m
SUBROUTINE nl_set_auxhist6_begin_s ( id_id , auxhist6_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist6_begin_s
  INTEGER id_id
  model_config_rec%auxhist6_begin_s(id_id) = auxhist6_begin_s
  RETURN
END SUBROUTINE nl_set_auxhist6_begin_s
SUBROUTINE nl_set_auxhist6_begin ( id_id , auxhist6_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist6_begin
  INTEGER id_id
  model_config_rec%auxhist6_begin(id_id) = auxhist6_begin
  RETURN
END SUBROUTINE nl_set_auxhist6_begin
SUBROUTINE nl_set_auxhist6_end_y ( id_id , auxhist6_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist6_end_y
  INTEGER id_id
  model_config_rec%auxhist6_end_y(id_id) = auxhist6_end_y
  RETURN
END SUBROUTINE nl_set_auxhist6_end_y
SUBROUTINE nl_set_auxhist6_end_d ( id_id , auxhist6_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist6_end_d
  INTEGER id_id
  model_config_rec%auxhist6_end_d(id_id) = auxhist6_end_d
  RETURN
END SUBROUTINE nl_set_auxhist6_end_d
SUBROUTINE nl_set_auxhist6_end_h ( id_id , auxhist6_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist6_end_h
  INTEGER id_id
  model_config_rec%auxhist6_end_h(id_id) = auxhist6_end_h
  RETURN
END SUBROUTINE nl_set_auxhist6_end_h
SUBROUTINE nl_set_auxhist6_end_m ( id_id , auxhist6_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist6_end_m
  INTEGER id_id
  model_config_rec%auxhist6_end_m(id_id) = auxhist6_end_m
  RETURN
END SUBROUTINE nl_set_auxhist6_end_m
SUBROUTINE nl_set_auxhist6_end_s ( id_id , auxhist6_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist6_end_s
  INTEGER id_id
  model_config_rec%auxhist6_end_s(id_id) = auxhist6_end_s
  RETURN
END SUBROUTINE nl_set_auxhist6_end_s
SUBROUTINE nl_set_auxhist6_end ( id_id , auxhist6_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist6_end
  INTEGER id_id
  model_config_rec%auxhist6_end(id_id) = auxhist6_end
  RETURN
END SUBROUTINE nl_set_auxhist6_end
SUBROUTINE nl_set_io_form_auxhist6 ( id_id , io_form_auxhist6 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxhist6
  INTEGER id_id
  model_config_rec%io_form_auxhist6 = io_form_auxhist6 
  RETURN
END SUBROUTINE nl_set_io_form_auxhist6
SUBROUTINE nl_set_frames_per_auxhist6 ( id_id , frames_per_auxhist6 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxhist6
  INTEGER id_id
  model_config_rec%frames_per_auxhist6(id_id) = frames_per_auxhist6
  RETURN
END SUBROUTINE nl_set_frames_per_auxhist6
SUBROUTINE nl_set_auxhist7_inname ( id_id , auxhist7_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist7_inname
  INTEGER id_id
  model_config_rec%auxhist7_inname = trim(auxhist7_inname) 
  RETURN
END SUBROUTINE nl_set_auxhist7_inname
SUBROUTINE nl_set_auxhist7_outname ( id_id , auxhist7_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist7_outname
  INTEGER id_id
  model_config_rec%auxhist7_outname = trim(auxhist7_outname) 
  RETURN
END SUBROUTINE nl_set_auxhist7_outname
SUBROUTINE nl_set_auxhist7_interval_y ( id_id , auxhist7_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist7_interval_y
  INTEGER id_id
  model_config_rec%auxhist7_interval_y(id_id) = auxhist7_interval_y
  RETURN
END SUBROUTINE nl_set_auxhist7_interval_y
SUBROUTINE nl_set_auxhist7_interval_d ( id_id , auxhist7_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist7_interval_d
  INTEGER id_id
  model_config_rec%auxhist7_interval_d(id_id) = auxhist7_interval_d
  RETURN
END SUBROUTINE nl_set_auxhist7_interval_d
SUBROUTINE nl_set_auxhist7_interval_h ( id_id , auxhist7_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist7_interval_h
  INTEGER id_id
  model_config_rec%auxhist7_interval_h(id_id) = auxhist7_interval_h
  RETURN
END SUBROUTINE nl_set_auxhist7_interval_h
SUBROUTINE nl_set_auxhist7_interval_m ( id_id , auxhist7_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist7_interval_m
  INTEGER id_id
  model_config_rec%auxhist7_interval_m(id_id) = auxhist7_interval_m
  RETURN
END SUBROUTINE nl_set_auxhist7_interval_m
SUBROUTINE nl_set_auxhist7_interval_s ( id_id , auxhist7_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist7_interval_s
  INTEGER id_id
  model_config_rec%auxhist7_interval_s(id_id) = auxhist7_interval_s
  RETURN
END SUBROUTINE nl_set_auxhist7_interval_s
SUBROUTINE nl_set_auxhist7_interval ( id_id , auxhist7_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist7_interval
  INTEGER id_id
  model_config_rec%auxhist7_interval(id_id) = auxhist7_interval
  RETURN
END SUBROUTINE nl_set_auxhist7_interval
SUBROUTINE nl_set_auxhist7_begin_y ( id_id , auxhist7_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist7_begin_y
  INTEGER id_id
  model_config_rec%auxhist7_begin_y(id_id) = auxhist7_begin_y
  RETURN
END SUBROUTINE nl_set_auxhist7_begin_y
SUBROUTINE nl_set_auxhist7_begin_d ( id_id , auxhist7_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist7_begin_d
  INTEGER id_id
  model_config_rec%auxhist7_begin_d(id_id) = auxhist7_begin_d
  RETURN
END SUBROUTINE nl_set_auxhist7_begin_d
SUBROUTINE nl_set_auxhist7_begin_h ( id_id , auxhist7_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist7_begin_h
  INTEGER id_id
  model_config_rec%auxhist7_begin_h(id_id) = auxhist7_begin_h
  RETURN
END SUBROUTINE nl_set_auxhist7_begin_h
SUBROUTINE nl_set_auxhist7_begin_m ( id_id , auxhist7_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist7_begin_m
  INTEGER id_id
  model_config_rec%auxhist7_begin_m(id_id) = auxhist7_begin_m
  RETURN
END SUBROUTINE nl_set_auxhist7_begin_m
SUBROUTINE nl_set_auxhist7_begin_s ( id_id , auxhist7_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist7_begin_s
  INTEGER id_id
  model_config_rec%auxhist7_begin_s(id_id) = auxhist7_begin_s
  RETURN
END SUBROUTINE nl_set_auxhist7_begin_s
SUBROUTINE nl_set_auxhist7_begin ( id_id , auxhist7_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist7_begin
  INTEGER id_id
  model_config_rec%auxhist7_begin(id_id) = auxhist7_begin
  RETURN
END SUBROUTINE nl_set_auxhist7_begin
SUBROUTINE nl_set_auxhist7_end_y ( id_id , auxhist7_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist7_end_y
  INTEGER id_id
  model_config_rec%auxhist7_end_y(id_id) = auxhist7_end_y
  RETURN
END SUBROUTINE nl_set_auxhist7_end_y
SUBROUTINE nl_set_auxhist7_end_d ( id_id , auxhist7_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist7_end_d
  INTEGER id_id
  model_config_rec%auxhist7_end_d(id_id) = auxhist7_end_d
  RETURN
END SUBROUTINE nl_set_auxhist7_end_d
SUBROUTINE nl_set_auxhist7_end_h ( id_id , auxhist7_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist7_end_h
  INTEGER id_id
  model_config_rec%auxhist7_end_h(id_id) = auxhist7_end_h
  RETURN
END SUBROUTINE nl_set_auxhist7_end_h
SUBROUTINE nl_set_auxhist7_end_m ( id_id , auxhist7_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist7_end_m
  INTEGER id_id
  model_config_rec%auxhist7_end_m(id_id) = auxhist7_end_m
  RETURN
END SUBROUTINE nl_set_auxhist7_end_m
SUBROUTINE nl_set_auxhist7_end_s ( id_id , auxhist7_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist7_end_s
  INTEGER id_id
  model_config_rec%auxhist7_end_s(id_id) = auxhist7_end_s
  RETURN
END SUBROUTINE nl_set_auxhist7_end_s
SUBROUTINE nl_set_auxhist7_end ( id_id , auxhist7_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist7_end
  INTEGER id_id
  model_config_rec%auxhist7_end(id_id) = auxhist7_end
  RETURN
END SUBROUTINE nl_set_auxhist7_end
SUBROUTINE nl_set_io_form_auxhist7 ( id_id , io_form_auxhist7 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxhist7
  INTEGER id_id
  model_config_rec%io_form_auxhist7 = io_form_auxhist7 
  RETURN
END SUBROUTINE nl_set_io_form_auxhist7
SUBROUTINE nl_set_frames_per_auxhist7 ( id_id , frames_per_auxhist7 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxhist7
  INTEGER id_id
  model_config_rec%frames_per_auxhist7(id_id) = frames_per_auxhist7
  RETURN
END SUBROUTINE nl_set_frames_per_auxhist7
SUBROUTINE nl_set_auxhist8_inname ( id_id , auxhist8_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist8_inname
  INTEGER id_id
  model_config_rec%auxhist8_inname = trim(auxhist8_inname) 
  RETURN
END SUBROUTINE nl_set_auxhist8_inname
SUBROUTINE nl_set_auxhist8_outname ( id_id , auxhist8_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist8_outname
  INTEGER id_id
  model_config_rec%auxhist8_outname = trim(auxhist8_outname) 
  RETURN
END SUBROUTINE nl_set_auxhist8_outname
SUBROUTINE nl_set_auxhist8_interval_y ( id_id , auxhist8_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist8_interval_y
  INTEGER id_id
  model_config_rec%auxhist8_interval_y(id_id) = auxhist8_interval_y
  RETURN
END SUBROUTINE nl_set_auxhist8_interval_y
SUBROUTINE nl_set_auxhist8_interval_d ( id_id , auxhist8_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist8_interval_d
  INTEGER id_id
  model_config_rec%auxhist8_interval_d(id_id) = auxhist8_interval_d
  RETURN
END SUBROUTINE nl_set_auxhist8_interval_d
SUBROUTINE nl_set_auxhist8_interval_h ( id_id , auxhist8_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist8_interval_h
  INTEGER id_id
  model_config_rec%auxhist8_interval_h(id_id) = auxhist8_interval_h
  RETURN
END SUBROUTINE nl_set_auxhist8_interval_h
SUBROUTINE nl_set_auxhist8_interval_m ( id_id , auxhist8_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist8_interval_m
  INTEGER id_id
  model_config_rec%auxhist8_interval_m(id_id) = auxhist8_interval_m
  RETURN
END SUBROUTINE nl_set_auxhist8_interval_m
SUBROUTINE nl_set_auxhist8_interval_s ( id_id , auxhist8_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist8_interval_s
  INTEGER id_id
  model_config_rec%auxhist8_interval_s(id_id) = auxhist8_interval_s
  RETURN
END SUBROUTINE nl_set_auxhist8_interval_s
SUBROUTINE nl_set_auxhist8_interval ( id_id , auxhist8_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist8_interval
  INTEGER id_id
  model_config_rec%auxhist8_interval(id_id) = auxhist8_interval
  RETURN
END SUBROUTINE nl_set_auxhist8_interval
SUBROUTINE nl_set_auxhist8_begin_y ( id_id , auxhist8_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist8_begin_y
  INTEGER id_id
  model_config_rec%auxhist8_begin_y(id_id) = auxhist8_begin_y
  RETURN
END SUBROUTINE nl_set_auxhist8_begin_y
SUBROUTINE nl_set_auxhist8_begin_d ( id_id , auxhist8_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist8_begin_d
  INTEGER id_id
  model_config_rec%auxhist8_begin_d(id_id) = auxhist8_begin_d
  RETURN
END SUBROUTINE nl_set_auxhist8_begin_d
SUBROUTINE nl_set_auxhist8_begin_h ( id_id , auxhist8_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist8_begin_h
  INTEGER id_id
  model_config_rec%auxhist8_begin_h(id_id) = auxhist8_begin_h
  RETURN
END SUBROUTINE nl_set_auxhist8_begin_h
SUBROUTINE nl_set_auxhist8_begin_m ( id_id , auxhist8_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist8_begin_m
  INTEGER id_id
  model_config_rec%auxhist8_begin_m(id_id) = auxhist8_begin_m
  RETURN
END SUBROUTINE nl_set_auxhist8_begin_m
SUBROUTINE nl_set_auxhist8_begin_s ( id_id , auxhist8_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist8_begin_s
  INTEGER id_id
  model_config_rec%auxhist8_begin_s(id_id) = auxhist8_begin_s
  RETURN
END SUBROUTINE nl_set_auxhist8_begin_s
SUBROUTINE nl_set_auxhist8_begin ( id_id , auxhist8_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist8_begin
  INTEGER id_id
  model_config_rec%auxhist8_begin(id_id) = auxhist8_begin
  RETURN
END SUBROUTINE nl_set_auxhist8_begin
SUBROUTINE nl_set_auxhist8_end_y ( id_id , auxhist8_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist8_end_y
  INTEGER id_id
  model_config_rec%auxhist8_end_y(id_id) = auxhist8_end_y
  RETURN
END SUBROUTINE nl_set_auxhist8_end_y
SUBROUTINE nl_set_auxhist8_end_d ( id_id , auxhist8_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist8_end_d
  INTEGER id_id
  model_config_rec%auxhist8_end_d(id_id) = auxhist8_end_d
  RETURN
END SUBROUTINE nl_set_auxhist8_end_d
SUBROUTINE nl_set_auxhist8_end_h ( id_id , auxhist8_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist8_end_h
  INTEGER id_id
  model_config_rec%auxhist8_end_h(id_id) = auxhist8_end_h
  RETURN
END SUBROUTINE nl_set_auxhist8_end_h
SUBROUTINE nl_set_auxhist8_end_m ( id_id , auxhist8_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist8_end_m
  INTEGER id_id
  model_config_rec%auxhist8_end_m(id_id) = auxhist8_end_m
  RETURN
END SUBROUTINE nl_set_auxhist8_end_m
SUBROUTINE nl_set_auxhist8_end_s ( id_id , auxhist8_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist8_end_s
  INTEGER id_id
  model_config_rec%auxhist8_end_s(id_id) = auxhist8_end_s
  RETURN
END SUBROUTINE nl_set_auxhist8_end_s
SUBROUTINE nl_set_auxhist8_end ( id_id , auxhist8_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist8_end
  INTEGER id_id
  model_config_rec%auxhist8_end(id_id) = auxhist8_end
  RETURN
END SUBROUTINE nl_set_auxhist8_end
SUBROUTINE nl_set_io_form_auxhist8 ( id_id , io_form_auxhist8 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxhist8
  INTEGER id_id
  model_config_rec%io_form_auxhist8 = io_form_auxhist8 
  RETURN
END SUBROUTINE nl_set_io_form_auxhist8
SUBROUTINE nl_set_frames_per_auxhist8 ( id_id , frames_per_auxhist8 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxhist8
  INTEGER id_id
  model_config_rec%frames_per_auxhist8(id_id) = frames_per_auxhist8
  RETURN
END SUBROUTINE nl_set_frames_per_auxhist8
SUBROUTINE nl_set_auxhist9_inname ( id_id , auxhist9_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist9_inname
  INTEGER id_id
  model_config_rec%auxhist9_inname = trim(auxhist9_inname) 
  RETURN
END SUBROUTINE nl_set_auxhist9_inname
SUBROUTINE nl_set_auxhist9_outname ( id_id , auxhist9_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist9_outname
  INTEGER id_id
  model_config_rec%auxhist9_outname = trim(auxhist9_outname) 
  RETURN
END SUBROUTINE nl_set_auxhist9_outname
SUBROUTINE nl_set_auxhist9_interval_y ( id_id , auxhist9_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist9_interval_y
  INTEGER id_id
  model_config_rec%auxhist9_interval_y(id_id) = auxhist9_interval_y
  RETURN
END SUBROUTINE nl_set_auxhist9_interval_y
SUBROUTINE nl_set_auxhist9_interval_d ( id_id , auxhist9_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist9_interval_d
  INTEGER id_id
  model_config_rec%auxhist9_interval_d(id_id) = auxhist9_interval_d
  RETURN
END SUBROUTINE nl_set_auxhist9_interval_d
SUBROUTINE nl_set_auxhist9_interval_h ( id_id , auxhist9_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist9_interval_h
  INTEGER id_id
  model_config_rec%auxhist9_interval_h(id_id) = auxhist9_interval_h
  RETURN
END SUBROUTINE nl_set_auxhist9_interval_h
SUBROUTINE nl_set_auxhist9_interval_m ( id_id , auxhist9_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist9_interval_m
  INTEGER id_id
  model_config_rec%auxhist9_interval_m(id_id) = auxhist9_interval_m
  RETURN
END SUBROUTINE nl_set_auxhist9_interval_m
SUBROUTINE nl_set_auxhist9_interval_s ( id_id , auxhist9_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist9_interval_s
  INTEGER id_id
  model_config_rec%auxhist9_interval_s(id_id) = auxhist9_interval_s
  RETURN
END SUBROUTINE nl_set_auxhist9_interval_s
SUBROUTINE nl_set_auxhist9_interval ( id_id , auxhist9_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist9_interval
  INTEGER id_id
  model_config_rec%auxhist9_interval(id_id) = auxhist9_interval
  RETURN
END SUBROUTINE nl_set_auxhist9_interval
SUBROUTINE nl_set_auxhist9_begin_y ( id_id , auxhist9_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist9_begin_y
  INTEGER id_id
  model_config_rec%auxhist9_begin_y(id_id) = auxhist9_begin_y
  RETURN
END SUBROUTINE nl_set_auxhist9_begin_y
SUBROUTINE nl_set_auxhist9_begin_d ( id_id , auxhist9_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist9_begin_d
  INTEGER id_id
  model_config_rec%auxhist9_begin_d(id_id) = auxhist9_begin_d
  RETURN
END SUBROUTINE nl_set_auxhist9_begin_d
SUBROUTINE nl_set_auxhist9_begin_h ( id_id , auxhist9_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist9_begin_h
  INTEGER id_id
  model_config_rec%auxhist9_begin_h(id_id) = auxhist9_begin_h
  RETURN
END SUBROUTINE nl_set_auxhist9_begin_h
SUBROUTINE nl_set_auxhist9_begin_m ( id_id , auxhist9_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist9_begin_m
  INTEGER id_id
  model_config_rec%auxhist9_begin_m(id_id) = auxhist9_begin_m
  RETURN
END SUBROUTINE nl_set_auxhist9_begin_m
SUBROUTINE nl_set_auxhist9_begin_s ( id_id , auxhist9_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist9_begin_s
  INTEGER id_id
  model_config_rec%auxhist9_begin_s(id_id) = auxhist9_begin_s
  RETURN
END SUBROUTINE nl_set_auxhist9_begin_s
SUBROUTINE nl_set_auxhist9_begin ( id_id , auxhist9_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist9_begin
  INTEGER id_id
  model_config_rec%auxhist9_begin(id_id) = auxhist9_begin
  RETURN
END SUBROUTINE nl_set_auxhist9_begin
SUBROUTINE nl_set_auxhist9_end_y ( id_id , auxhist9_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist9_end_y
  INTEGER id_id
  model_config_rec%auxhist9_end_y(id_id) = auxhist9_end_y
  RETURN
END SUBROUTINE nl_set_auxhist9_end_y
SUBROUTINE nl_set_auxhist9_end_d ( id_id , auxhist9_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist9_end_d
  INTEGER id_id
  model_config_rec%auxhist9_end_d(id_id) = auxhist9_end_d
  RETURN
END SUBROUTINE nl_set_auxhist9_end_d
SUBROUTINE nl_set_auxhist9_end_h ( id_id , auxhist9_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist9_end_h
  INTEGER id_id
  model_config_rec%auxhist9_end_h(id_id) = auxhist9_end_h
  RETURN
END SUBROUTINE nl_set_auxhist9_end_h
SUBROUTINE nl_set_auxhist9_end_m ( id_id , auxhist9_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist9_end_m
  INTEGER id_id
  model_config_rec%auxhist9_end_m(id_id) = auxhist9_end_m
  RETURN
END SUBROUTINE nl_set_auxhist9_end_m
SUBROUTINE nl_set_auxhist9_end_s ( id_id , auxhist9_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist9_end_s
  INTEGER id_id
  model_config_rec%auxhist9_end_s(id_id) = auxhist9_end_s
  RETURN
END SUBROUTINE nl_set_auxhist9_end_s
SUBROUTINE nl_set_auxhist9_end ( id_id , auxhist9_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist9_end
  INTEGER id_id
  model_config_rec%auxhist9_end(id_id) = auxhist9_end
  RETURN
END SUBROUTINE nl_set_auxhist9_end
SUBROUTINE nl_set_io_form_auxhist9 ( id_id , io_form_auxhist9 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxhist9
  INTEGER id_id
  model_config_rec%io_form_auxhist9 = io_form_auxhist9 
  RETURN
END SUBROUTINE nl_set_io_form_auxhist9
SUBROUTINE nl_set_frames_per_auxhist9 ( id_id , frames_per_auxhist9 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxhist9
  INTEGER id_id
  model_config_rec%frames_per_auxhist9(id_id) = frames_per_auxhist9
  RETURN
END SUBROUTINE nl_set_frames_per_auxhist9
SUBROUTINE nl_set_auxhist10_inname ( id_id , auxhist10_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist10_inname
  INTEGER id_id
  model_config_rec%auxhist10_inname = trim(auxhist10_inname) 
  RETURN
END SUBROUTINE nl_set_auxhist10_inname
SUBROUTINE nl_set_auxhist10_outname ( id_id , auxhist10_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist10_outname
  INTEGER id_id
  model_config_rec%auxhist10_outname = trim(auxhist10_outname) 
  RETURN
END SUBROUTINE nl_set_auxhist10_outname
SUBROUTINE nl_set_auxhist10_interval_y ( id_id , auxhist10_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist10_interval_y
  INTEGER id_id
  model_config_rec%auxhist10_interval_y(id_id) = auxhist10_interval_y
  RETURN
END SUBROUTINE nl_set_auxhist10_interval_y
SUBROUTINE nl_set_auxhist10_interval_d ( id_id , auxhist10_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist10_interval_d
  INTEGER id_id
  model_config_rec%auxhist10_interval_d(id_id) = auxhist10_interval_d
  RETURN
END SUBROUTINE nl_set_auxhist10_interval_d
SUBROUTINE nl_set_auxhist10_interval_h ( id_id , auxhist10_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist10_interval_h
  INTEGER id_id
  model_config_rec%auxhist10_interval_h(id_id) = auxhist10_interval_h
  RETURN
END SUBROUTINE nl_set_auxhist10_interval_h
SUBROUTINE nl_set_auxhist10_interval_m ( id_id , auxhist10_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist10_interval_m
  INTEGER id_id
  model_config_rec%auxhist10_interval_m(id_id) = auxhist10_interval_m
  RETURN
END SUBROUTINE nl_set_auxhist10_interval_m
SUBROUTINE nl_set_auxhist10_interval_s ( id_id , auxhist10_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist10_interval_s
  INTEGER id_id
  model_config_rec%auxhist10_interval_s(id_id) = auxhist10_interval_s
  RETURN
END SUBROUTINE nl_set_auxhist10_interval_s
SUBROUTINE nl_set_auxhist10_interval ( id_id , auxhist10_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist10_interval
  INTEGER id_id
  model_config_rec%auxhist10_interval(id_id) = auxhist10_interval
  RETURN
END SUBROUTINE nl_set_auxhist10_interval
SUBROUTINE nl_set_auxhist10_begin_y ( id_id , auxhist10_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist10_begin_y
  INTEGER id_id
  model_config_rec%auxhist10_begin_y(id_id) = auxhist10_begin_y
  RETURN
END SUBROUTINE nl_set_auxhist10_begin_y
SUBROUTINE nl_set_auxhist10_begin_d ( id_id , auxhist10_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist10_begin_d
  INTEGER id_id
  model_config_rec%auxhist10_begin_d(id_id) = auxhist10_begin_d
  RETURN
END SUBROUTINE nl_set_auxhist10_begin_d
SUBROUTINE nl_set_auxhist10_begin_h ( id_id , auxhist10_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist10_begin_h
  INTEGER id_id
  model_config_rec%auxhist10_begin_h(id_id) = auxhist10_begin_h
  RETURN
END SUBROUTINE nl_set_auxhist10_begin_h
SUBROUTINE nl_set_auxhist10_begin_m ( id_id , auxhist10_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist10_begin_m
  INTEGER id_id
  model_config_rec%auxhist10_begin_m(id_id) = auxhist10_begin_m
  RETURN
END SUBROUTINE nl_set_auxhist10_begin_m
SUBROUTINE nl_set_auxhist10_begin_s ( id_id , auxhist10_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist10_begin_s
  INTEGER id_id
  model_config_rec%auxhist10_begin_s(id_id) = auxhist10_begin_s
  RETURN
END SUBROUTINE nl_set_auxhist10_begin_s
SUBROUTINE nl_set_auxhist10_begin ( id_id , auxhist10_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist10_begin
  INTEGER id_id
  model_config_rec%auxhist10_begin(id_id) = auxhist10_begin
  RETURN
END SUBROUTINE nl_set_auxhist10_begin
SUBROUTINE nl_set_auxhist10_end_y ( id_id , auxhist10_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist10_end_y
  INTEGER id_id
  model_config_rec%auxhist10_end_y(id_id) = auxhist10_end_y
  RETURN
END SUBROUTINE nl_set_auxhist10_end_y
SUBROUTINE nl_set_auxhist10_end_d ( id_id , auxhist10_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist10_end_d
  INTEGER id_id
  model_config_rec%auxhist10_end_d(id_id) = auxhist10_end_d
  RETURN
END SUBROUTINE nl_set_auxhist10_end_d
SUBROUTINE nl_set_auxhist10_end_h ( id_id , auxhist10_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist10_end_h
  INTEGER id_id
  model_config_rec%auxhist10_end_h(id_id) = auxhist10_end_h
  RETURN
END SUBROUTINE nl_set_auxhist10_end_h
SUBROUTINE nl_set_auxhist10_end_m ( id_id , auxhist10_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist10_end_m
  INTEGER id_id
  model_config_rec%auxhist10_end_m(id_id) = auxhist10_end_m
  RETURN
END SUBROUTINE nl_set_auxhist10_end_m
SUBROUTINE nl_set_auxhist10_end_s ( id_id , auxhist10_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist10_end_s
  INTEGER id_id
  model_config_rec%auxhist10_end_s(id_id) = auxhist10_end_s
  RETURN
END SUBROUTINE nl_set_auxhist10_end_s
SUBROUTINE nl_set_auxhist10_end ( id_id , auxhist10_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist10_end
  INTEGER id_id
  model_config_rec%auxhist10_end(id_id) = auxhist10_end
  RETURN
END SUBROUTINE nl_set_auxhist10_end
SUBROUTINE nl_set_io_form_auxhist10 ( id_id , io_form_auxhist10 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxhist10
  INTEGER id_id
  model_config_rec%io_form_auxhist10 = io_form_auxhist10 
  RETURN
END SUBROUTINE nl_set_io_form_auxhist10
SUBROUTINE nl_set_frames_per_auxhist10 ( id_id , frames_per_auxhist10 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxhist10
  INTEGER id_id
  model_config_rec%frames_per_auxhist10(id_id) = frames_per_auxhist10
  RETURN
END SUBROUTINE nl_set_frames_per_auxhist10
SUBROUTINE nl_set_auxhist11_inname ( id_id , auxhist11_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist11_inname
  INTEGER id_id
  model_config_rec%auxhist11_inname = trim(auxhist11_inname) 
  RETURN
END SUBROUTINE nl_set_auxhist11_inname
SUBROUTINE nl_set_auxhist11_outname ( id_id , auxhist11_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist11_outname
  INTEGER id_id
  model_config_rec%auxhist11_outname = trim(auxhist11_outname) 
  RETURN
END SUBROUTINE nl_set_auxhist11_outname
SUBROUTINE nl_set_auxhist11_interval_y ( id_id , auxhist11_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist11_interval_y
  INTEGER id_id
  model_config_rec%auxhist11_interval_y(id_id) = auxhist11_interval_y
  RETURN
END SUBROUTINE nl_set_auxhist11_interval_y
SUBROUTINE nl_set_auxhist11_interval_d ( id_id , auxhist11_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist11_interval_d
  INTEGER id_id
  model_config_rec%auxhist11_interval_d(id_id) = auxhist11_interval_d
  RETURN
END SUBROUTINE nl_set_auxhist11_interval_d
SUBROUTINE nl_set_auxhist11_interval_h ( id_id , auxhist11_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist11_interval_h
  INTEGER id_id
  model_config_rec%auxhist11_interval_h(id_id) = auxhist11_interval_h
  RETURN
END SUBROUTINE nl_set_auxhist11_interval_h
SUBROUTINE nl_set_auxhist11_interval_m ( id_id , auxhist11_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist11_interval_m
  INTEGER id_id
  model_config_rec%auxhist11_interval_m(id_id) = auxhist11_interval_m
  RETURN
END SUBROUTINE nl_set_auxhist11_interval_m
SUBROUTINE nl_set_auxhist11_interval_s ( id_id , auxhist11_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist11_interval_s
  INTEGER id_id
  model_config_rec%auxhist11_interval_s(id_id) = auxhist11_interval_s
  RETURN
END SUBROUTINE nl_set_auxhist11_interval_s
SUBROUTINE nl_set_auxhist11_interval ( id_id , auxhist11_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist11_interval
  INTEGER id_id
  model_config_rec%auxhist11_interval(id_id) = auxhist11_interval
  RETURN
END SUBROUTINE nl_set_auxhist11_interval
SUBROUTINE nl_set_auxhist11_begin_y ( id_id , auxhist11_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist11_begin_y
  INTEGER id_id
  model_config_rec%auxhist11_begin_y(id_id) = auxhist11_begin_y
  RETURN
END SUBROUTINE nl_set_auxhist11_begin_y
SUBROUTINE nl_set_auxhist11_begin_d ( id_id , auxhist11_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist11_begin_d
  INTEGER id_id
  model_config_rec%auxhist11_begin_d(id_id) = auxhist11_begin_d
  RETURN
END SUBROUTINE nl_set_auxhist11_begin_d
SUBROUTINE nl_set_auxhist11_begin_h ( id_id , auxhist11_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist11_begin_h
  INTEGER id_id
  model_config_rec%auxhist11_begin_h(id_id) = auxhist11_begin_h
  RETURN
END SUBROUTINE nl_set_auxhist11_begin_h
SUBROUTINE nl_set_auxhist11_begin_m ( id_id , auxhist11_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist11_begin_m
  INTEGER id_id
  model_config_rec%auxhist11_begin_m(id_id) = auxhist11_begin_m
  RETURN
END SUBROUTINE nl_set_auxhist11_begin_m
SUBROUTINE nl_set_auxhist11_begin_s ( id_id , auxhist11_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist11_begin_s
  INTEGER id_id
  model_config_rec%auxhist11_begin_s(id_id) = auxhist11_begin_s
  RETURN
END SUBROUTINE nl_set_auxhist11_begin_s
SUBROUTINE nl_set_auxhist11_begin ( id_id , auxhist11_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist11_begin
  INTEGER id_id
  model_config_rec%auxhist11_begin(id_id) = auxhist11_begin
  RETURN
END SUBROUTINE nl_set_auxhist11_begin
SUBROUTINE nl_set_auxhist11_end_y ( id_id , auxhist11_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist11_end_y
  INTEGER id_id
  model_config_rec%auxhist11_end_y(id_id) = auxhist11_end_y
  RETURN
END SUBROUTINE nl_set_auxhist11_end_y
SUBROUTINE nl_set_auxhist11_end_d ( id_id , auxhist11_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist11_end_d
  INTEGER id_id
  model_config_rec%auxhist11_end_d(id_id) = auxhist11_end_d
  RETURN
END SUBROUTINE nl_set_auxhist11_end_d
SUBROUTINE nl_set_auxhist11_end_h ( id_id , auxhist11_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist11_end_h
  INTEGER id_id
  model_config_rec%auxhist11_end_h(id_id) = auxhist11_end_h
  RETURN
END SUBROUTINE nl_set_auxhist11_end_h
SUBROUTINE nl_set_auxhist11_end_m ( id_id , auxhist11_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist11_end_m
  INTEGER id_id
  model_config_rec%auxhist11_end_m(id_id) = auxhist11_end_m
  RETURN
END SUBROUTINE nl_set_auxhist11_end_m
SUBROUTINE nl_set_auxhist11_end_s ( id_id , auxhist11_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist11_end_s
  INTEGER id_id
  model_config_rec%auxhist11_end_s(id_id) = auxhist11_end_s
  RETURN
END SUBROUTINE nl_set_auxhist11_end_s
SUBROUTINE nl_set_auxhist11_end ( id_id , auxhist11_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist11_end
  INTEGER id_id
  model_config_rec%auxhist11_end(id_id) = auxhist11_end
  RETURN
END SUBROUTINE nl_set_auxhist11_end
SUBROUTINE nl_set_io_form_auxhist11 ( id_id , io_form_auxhist11 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxhist11
  INTEGER id_id
  model_config_rec%io_form_auxhist11 = io_form_auxhist11 
  RETURN
END SUBROUTINE nl_set_io_form_auxhist11
SUBROUTINE nl_set_frames_per_auxhist11 ( id_id , frames_per_auxhist11 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxhist11
  INTEGER id_id
  model_config_rec%frames_per_auxhist11(id_id) = frames_per_auxhist11
  RETURN
END SUBROUTINE nl_set_frames_per_auxhist11
SUBROUTINE nl_set_auxhist12_inname ( id_id , auxhist12_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist12_inname
  INTEGER id_id
  model_config_rec%auxhist12_inname = trim(auxhist12_inname) 
  RETURN
END SUBROUTINE nl_set_auxhist12_inname
SUBROUTINE nl_set_auxhist12_outname ( id_id , auxhist12_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist12_outname
  INTEGER id_id
  model_config_rec%auxhist12_outname = trim(auxhist12_outname) 
  RETURN
END SUBROUTINE nl_set_auxhist12_outname
SUBROUTINE nl_set_auxhist12_interval_y ( id_id , auxhist12_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist12_interval_y
  INTEGER id_id
  model_config_rec%auxhist12_interval_y(id_id) = auxhist12_interval_y
  RETURN
END SUBROUTINE nl_set_auxhist12_interval_y
SUBROUTINE nl_set_auxhist12_interval_d ( id_id , auxhist12_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist12_interval_d
  INTEGER id_id
  model_config_rec%auxhist12_interval_d(id_id) = auxhist12_interval_d
  RETURN
END SUBROUTINE nl_set_auxhist12_interval_d
SUBROUTINE nl_set_auxhist12_interval_h ( id_id , auxhist12_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist12_interval_h
  INTEGER id_id
  model_config_rec%auxhist12_interval_h(id_id) = auxhist12_interval_h
  RETURN
END SUBROUTINE nl_set_auxhist12_interval_h
SUBROUTINE nl_set_auxhist12_interval_m ( id_id , auxhist12_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist12_interval_m
  INTEGER id_id
  model_config_rec%auxhist12_interval_m(id_id) = auxhist12_interval_m
  RETURN
END SUBROUTINE nl_set_auxhist12_interval_m
SUBROUTINE nl_set_auxhist12_interval_s ( id_id , auxhist12_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist12_interval_s
  INTEGER id_id
  model_config_rec%auxhist12_interval_s(id_id) = auxhist12_interval_s
  RETURN
END SUBROUTINE nl_set_auxhist12_interval_s
SUBROUTINE nl_set_auxhist12_interval ( id_id , auxhist12_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist12_interval
  INTEGER id_id
  model_config_rec%auxhist12_interval(id_id) = auxhist12_interval
  RETURN
END SUBROUTINE nl_set_auxhist12_interval
SUBROUTINE nl_set_auxhist12_begin_y ( id_id , auxhist12_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist12_begin_y
  INTEGER id_id
  model_config_rec%auxhist12_begin_y(id_id) = auxhist12_begin_y
  RETURN
END SUBROUTINE nl_set_auxhist12_begin_y
SUBROUTINE nl_set_auxhist12_begin_d ( id_id , auxhist12_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist12_begin_d
  INTEGER id_id
  model_config_rec%auxhist12_begin_d(id_id) = auxhist12_begin_d
  RETURN
END SUBROUTINE nl_set_auxhist12_begin_d
SUBROUTINE nl_set_auxhist12_begin_h ( id_id , auxhist12_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist12_begin_h
  INTEGER id_id
  model_config_rec%auxhist12_begin_h(id_id) = auxhist12_begin_h
  RETURN
END SUBROUTINE nl_set_auxhist12_begin_h
SUBROUTINE nl_set_auxhist12_begin_m ( id_id , auxhist12_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist12_begin_m
  INTEGER id_id
  model_config_rec%auxhist12_begin_m(id_id) = auxhist12_begin_m
  RETURN
END SUBROUTINE nl_set_auxhist12_begin_m
SUBROUTINE nl_set_auxhist12_begin_s ( id_id , auxhist12_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist12_begin_s
  INTEGER id_id
  model_config_rec%auxhist12_begin_s(id_id) = auxhist12_begin_s
  RETURN
END SUBROUTINE nl_set_auxhist12_begin_s
SUBROUTINE nl_set_auxhist12_begin ( id_id , auxhist12_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist12_begin
  INTEGER id_id
  model_config_rec%auxhist12_begin(id_id) = auxhist12_begin
  RETURN
END SUBROUTINE nl_set_auxhist12_begin
SUBROUTINE nl_set_auxhist12_end_y ( id_id , auxhist12_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist12_end_y
  INTEGER id_id
  model_config_rec%auxhist12_end_y(id_id) = auxhist12_end_y
  RETURN
END SUBROUTINE nl_set_auxhist12_end_y
SUBROUTINE nl_set_auxhist12_end_d ( id_id , auxhist12_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist12_end_d
  INTEGER id_id
  model_config_rec%auxhist12_end_d(id_id) = auxhist12_end_d
  RETURN
END SUBROUTINE nl_set_auxhist12_end_d
SUBROUTINE nl_set_auxhist12_end_h ( id_id , auxhist12_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist12_end_h
  INTEGER id_id
  model_config_rec%auxhist12_end_h(id_id) = auxhist12_end_h
  RETURN
END SUBROUTINE nl_set_auxhist12_end_h
SUBROUTINE nl_set_auxhist12_end_m ( id_id , auxhist12_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist12_end_m
  INTEGER id_id
  model_config_rec%auxhist12_end_m(id_id) = auxhist12_end_m
  RETURN
END SUBROUTINE nl_set_auxhist12_end_m
SUBROUTINE nl_set_auxhist12_end_s ( id_id , auxhist12_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist12_end_s
  INTEGER id_id
  model_config_rec%auxhist12_end_s(id_id) = auxhist12_end_s
  RETURN
END SUBROUTINE nl_set_auxhist12_end_s
SUBROUTINE nl_set_auxhist12_end ( id_id , auxhist12_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist12_end
  INTEGER id_id
  model_config_rec%auxhist12_end(id_id) = auxhist12_end
  RETURN
END SUBROUTINE nl_set_auxhist12_end
SUBROUTINE nl_set_io_form_auxhist12 ( id_id , io_form_auxhist12 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxhist12
  INTEGER id_id
  model_config_rec%io_form_auxhist12 = io_form_auxhist12 
  RETURN
END SUBROUTINE nl_set_io_form_auxhist12
SUBROUTINE nl_set_frames_per_auxhist12 ( id_id , frames_per_auxhist12 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxhist12
  INTEGER id_id
  model_config_rec%frames_per_auxhist12(id_id) = frames_per_auxhist12
  RETURN
END SUBROUTINE nl_set_frames_per_auxhist12
SUBROUTINE nl_set_auxhist13_inname ( id_id , auxhist13_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist13_inname
  INTEGER id_id
  model_config_rec%auxhist13_inname = trim(auxhist13_inname) 
  RETURN
END SUBROUTINE nl_set_auxhist13_inname
SUBROUTINE nl_set_auxhist13_outname ( id_id , auxhist13_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist13_outname
  INTEGER id_id
  model_config_rec%auxhist13_outname = trim(auxhist13_outname) 
  RETURN
END SUBROUTINE nl_set_auxhist13_outname
SUBROUTINE nl_set_auxhist13_interval_y ( id_id , auxhist13_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist13_interval_y
  INTEGER id_id
  model_config_rec%auxhist13_interval_y(id_id) = auxhist13_interval_y
  RETURN
END SUBROUTINE nl_set_auxhist13_interval_y
SUBROUTINE nl_set_auxhist13_interval_d ( id_id , auxhist13_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist13_interval_d
  INTEGER id_id
  model_config_rec%auxhist13_interval_d(id_id) = auxhist13_interval_d
  RETURN
END SUBROUTINE nl_set_auxhist13_interval_d
SUBROUTINE nl_set_auxhist13_interval_h ( id_id , auxhist13_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist13_interval_h
  INTEGER id_id
  model_config_rec%auxhist13_interval_h(id_id) = auxhist13_interval_h
  RETURN
END SUBROUTINE nl_set_auxhist13_interval_h
SUBROUTINE nl_set_auxhist13_interval_m ( id_id , auxhist13_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist13_interval_m
  INTEGER id_id
  model_config_rec%auxhist13_interval_m(id_id) = auxhist13_interval_m
  RETURN
END SUBROUTINE nl_set_auxhist13_interval_m
SUBROUTINE nl_set_auxhist13_interval_s ( id_id , auxhist13_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist13_interval_s
  INTEGER id_id
  model_config_rec%auxhist13_interval_s(id_id) = auxhist13_interval_s
  RETURN
END SUBROUTINE nl_set_auxhist13_interval_s
SUBROUTINE nl_set_auxhist13_interval ( id_id , auxhist13_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist13_interval
  INTEGER id_id
  model_config_rec%auxhist13_interval(id_id) = auxhist13_interval
  RETURN
END SUBROUTINE nl_set_auxhist13_interval
SUBROUTINE nl_set_auxhist13_begin_y ( id_id , auxhist13_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist13_begin_y
  INTEGER id_id
  model_config_rec%auxhist13_begin_y(id_id) = auxhist13_begin_y
  RETURN
END SUBROUTINE nl_set_auxhist13_begin_y
SUBROUTINE nl_set_auxhist13_begin_d ( id_id , auxhist13_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist13_begin_d
  INTEGER id_id
  model_config_rec%auxhist13_begin_d(id_id) = auxhist13_begin_d
  RETURN
END SUBROUTINE nl_set_auxhist13_begin_d
SUBROUTINE nl_set_auxhist13_begin_h ( id_id , auxhist13_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist13_begin_h
  INTEGER id_id
  model_config_rec%auxhist13_begin_h(id_id) = auxhist13_begin_h
  RETURN
END SUBROUTINE nl_set_auxhist13_begin_h
SUBROUTINE nl_set_auxhist13_begin_m ( id_id , auxhist13_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist13_begin_m
  INTEGER id_id
  model_config_rec%auxhist13_begin_m(id_id) = auxhist13_begin_m
  RETURN
END SUBROUTINE nl_set_auxhist13_begin_m
SUBROUTINE nl_set_auxhist13_begin_s ( id_id , auxhist13_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist13_begin_s
  INTEGER id_id
  model_config_rec%auxhist13_begin_s(id_id) = auxhist13_begin_s
  RETURN
END SUBROUTINE nl_set_auxhist13_begin_s
SUBROUTINE nl_set_auxhist13_begin ( id_id , auxhist13_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist13_begin
  INTEGER id_id
  model_config_rec%auxhist13_begin(id_id) = auxhist13_begin
  RETURN
END SUBROUTINE nl_set_auxhist13_begin
SUBROUTINE nl_set_auxhist13_end_y ( id_id , auxhist13_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist13_end_y
  INTEGER id_id
  model_config_rec%auxhist13_end_y(id_id) = auxhist13_end_y
  RETURN
END SUBROUTINE nl_set_auxhist13_end_y
SUBROUTINE nl_set_auxhist13_end_d ( id_id , auxhist13_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist13_end_d
  INTEGER id_id
  model_config_rec%auxhist13_end_d(id_id) = auxhist13_end_d
  RETURN
END SUBROUTINE nl_set_auxhist13_end_d
SUBROUTINE nl_set_auxhist13_end_h ( id_id , auxhist13_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist13_end_h
  INTEGER id_id
  model_config_rec%auxhist13_end_h(id_id) = auxhist13_end_h
  RETURN
END SUBROUTINE nl_set_auxhist13_end_h
SUBROUTINE nl_set_auxhist13_end_m ( id_id , auxhist13_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist13_end_m
  INTEGER id_id
  model_config_rec%auxhist13_end_m(id_id) = auxhist13_end_m
  RETURN
END SUBROUTINE nl_set_auxhist13_end_m
SUBROUTINE nl_set_auxhist13_end_s ( id_id , auxhist13_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist13_end_s
  INTEGER id_id
  model_config_rec%auxhist13_end_s(id_id) = auxhist13_end_s
  RETURN
END SUBROUTINE nl_set_auxhist13_end_s
SUBROUTINE nl_set_auxhist13_end ( id_id , auxhist13_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist13_end
  INTEGER id_id
  model_config_rec%auxhist13_end(id_id) = auxhist13_end
  RETURN
END SUBROUTINE nl_set_auxhist13_end
SUBROUTINE nl_set_io_form_auxhist13 ( id_id , io_form_auxhist13 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxhist13
  INTEGER id_id
  model_config_rec%io_form_auxhist13 = io_form_auxhist13 
  RETURN
END SUBROUTINE nl_set_io_form_auxhist13
SUBROUTINE nl_set_frames_per_auxhist13 ( id_id , frames_per_auxhist13 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxhist13
  INTEGER id_id
  model_config_rec%frames_per_auxhist13(id_id) = frames_per_auxhist13
  RETURN
END SUBROUTINE nl_set_frames_per_auxhist13
SUBROUTINE nl_set_auxhist14_inname ( id_id , auxhist14_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist14_inname
  INTEGER id_id
  model_config_rec%auxhist14_inname = trim(auxhist14_inname) 
  RETURN
END SUBROUTINE nl_set_auxhist14_inname
SUBROUTINE nl_set_auxhist14_outname ( id_id , auxhist14_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist14_outname
  INTEGER id_id
  model_config_rec%auxhist14_outname = trim(auxhist14_outname) 
  RETURN
END SUBROUTINE nl_set_auxhist14_outname
SUBROUTINE nl_set_auxhist14_interval_y ( id_id , auxhist14_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist14_interval_y
  INTEGER id_id
  model_config_rec%auxhist14_interval_y(id_id) = auxhist14_interval_y
  RETURN
END SUBROUTINE nl_set_auxhist14_interval_y
SUBROUTINE nl_set_auxhist14_interval_d ( id_id , auxhist14_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist14_interval_d
  INTEGER id_id
  model_config_rec%auxhist14_interval_d(id_id) = auxhist14_interval_d
  RETURN
END SUBROUTINE nl_set_auxhist14_interval_d
SUBROUTINE nl_set_auxhist14_interval_h ( id_id , auxhist14_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist14_interval_h
  INTEGER id_id
  model_config_rec%auxhist14_interval_h(id_id) = auxhist14_interval_h
  RETURN
END SUBROUTINE nl_set_auxhist14_interval_h
SUBROUTINE nl_set_auxhist14_interval_m ( id_id , auxhist14_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist14_interval_m
  INTEGER id_id
  model_config_rec%auxhist14_interval_m(id_id) = auxhist14_interval_m
  RETURN
END SUBROUTINE nl_set_auxhist14_interval_m
SUBROUTINE nl_set_auxhist14_interval_s ( id_id , auxhist14_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist14_interval_s
  INTEGER id_id
  model_config_rec%auxhist14_interval_s(id_id) = auxhist14_interval_s
  RETURN
END SUBROUTINE nl_set_auxhist14_interval_s
SUBROUTINE nl_set_auxhist14_interval ( id_id , auxhist14_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist14_interval
  INTEGER id_id
  model_config_rec%auxhist14_interval(id_id) = auxhist14_interval
  RETURN
END SUBROUTINE nl_set_auxhist14_interval
SUBROUTINE nl_set_auxhist14_begin_y ( id_id , auxhist14_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist14_begin_y
  INTEGER id_id
  model_config_rec%auxhist14_begin_y(id_id) = auxhist14_begin_y
  RETURN
END SUBROUTINE nl_set_auxhist14_begin_y
SUBROUTINE nl_set_auxhist14_begin_d ( id_id , auxhist14_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist14_begin_d
  INTEGER id_id
  model_config_rec%auxhist14_begin_d(id_id) = auxhist14_begin_d
  RETURN
END SUBROUTINE nl_set_auxhist14_begin_d
SUBROUTINE nl_set_auxhist14_begin_h ( id_id , auxhist14_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist14_begin_h
  INTEGER id_id
  model_config_rec%auxhist14_begin_h(id_id) = auxhist14_begin_h
  RETURN
END SUBROUTINE nl_set_auxhist14_begin_h
SUBROUTINE nl_set_auxhist14_begin_m ( id_id , auxhist14_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist14_begin_m
  INTEGER id_id
  model_config_rec%auxhist14_begin_m(id_id) = auxhist14_begin_m
  RETURN
END SUBROUTINE nl_set_auxhist14_begin_m
SUBROUTINE nl_set_auxhist14_begin_s ( id_id , auxhist14_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist14_begin_s
  INTEGER id_id
  model_config_rec%auxhist14_begin_s(id_id) = auxhist14_begin_s
  RETURN
END SUBROUTINE nl_set_auxhist14_begin_s
SUBROUTINE nl_set_auxhist14_begin ( id_id , auxhist14_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist14_begin
  INTEGER id_id
  model_config_rec%auxhist14_begin(id_id) = auxhist14_begin
  RETURN
END SUBROUTINE nl_set_auxhist14_begin
SUBROUTINE nl_set_auxhist14_end_y ( id_id , auxhist14_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist14_end_y
  INTEGER id_id
  model_config_rec%auxhist14_end_y(id_id) = auxhist14_end_y
  RETURN
END SUBROUTINE nl_set_auxhist14_end_y
SUBROUTINE nl_set_auxhist14_end_d ( id_id , auxhist14_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist14_end_d
  INTEGER id_id
  model_config_rec%auxhist14_end_d(id_id) = auxhist14_end_d
  RETURN
END SUBROUTINE nl_set_auxhist14_end_d
SUBROUTINE nl_set_auxhist14_end_h ( id_id , auxhist14_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist14_end_h
  INTEGER id_id
  model_config_rec%auxhist14_end_h(id_id) = auxhist14_end_h
  RETURN
END SUBROUTINE nl_set_auxhist14_end_h
SUBROUTINE nl_set_auxhist14_end_m ( id_id , auxhist14_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist14_end_m
  INTEGER id_id
  model_config_rec%auxhist14_end_m(id_id) = auxhist14_end_m
  RETURN
END SUBROUTINE nl_set_auxhist14_end_m
SUBROUTINE nl_set_auxhist14_end_s ( id_id , auxhist14_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist14_end_s
  INTEGER id_id
  model_config_rec%auxhist14_end_s(id_id) = auxhist14_end_s
  RETURN
END SUBROUTINE nl_set_auxhist14_end_s
SUBROUTINE nl_set_auxhist14_end ( id_id , auxhist14_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist14_end
  INTEGER id_id
  model_config_rec%auxhist14_end(id_id) = auxhist14_end
  RETURN
END SUBROUTINE nl_set_auxhist14_end
SUBROUTINE nl_set_io_form_auxhist14 ( id_id , io_form_auxhist14 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxhist14
  INTEGER id_id
  model_config_rec%io_form_auxhist14 = io_form_auxhist14 
  RETURN
END SUBROUTINE nl_set_io_form_auxhist14
SUBROUTINE nl_set_frames_per_auxhist14 ( id_id , frames_per_auxhist14 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxhist14
  INTEGER id_id
  model_config_rec%frames_per_auxhist14(id_id) = frames_per_auxhist14
  RETURN
END SUBROUTINE nl_set_frames_per_auxhist14
SUBROUTINE nl_set_auxhist15_inname ( id_id , auxhist15_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist15_inname
  INTEGER id_id
  model_config_rec%auxhist15_inname = trim(auxhist15_inname) 
  RETURN
END SUBROUTINE nl_set_auxhist15_inname
SUBROUTINE nl_set_auxhist15_outname ( id_id , auxhist15_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist15_outname
  INTEGER id_id
  model_config_rec%auxhist15_outname = trim(auxhist15_outname) 
  RETURN
END SUBROUTINE nl_set_auxhist15_outname
SUBROUTINE nl_set_auxhist15_interval_y ( id_id , auxhist15_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist15_interval_y
  INTEGER id_id
  model_config_rec%auxhist15_interval_y(id_id) = auxhist15_interval_y
  RETURN
END SUBROUTINE nl_set_auxhist15_interval_y
SUBROUTINE nl_set_auxhist15_interval_d ( id_id , auxhist15_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist15_interval_d
  INTEGER id_id
  model_config_rec%auxhist15_interval_d(id_id) = auxhist15_interval_d
  RETURN
END SUBROUTINE nl_set_auxhist15_interval_d
SUBROUTINE nl_set_auxhist15_interval_h ( id_id , auxhist15_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist15_interval_h
  INTEGER id_id
  model_config_rec%auxhist15_interval_h(id_id) = auxhist15_interval_h
  RETURN
END SUBROUTINE nl_set_auxhist15_interval_h
SUBROUTINE nl_set_auxhist15_interval_m ( id_id , auxhist15_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist15_interval_m
  INTEGER id_id
  model_config_rec%auxhist15_interval_m(id_id) = auxhist15_interval_m
  RETURN
END SUBROUTINE nl_set_auxhist15_interval_m
SUBROUTINE nl_set_auxhist15_interval_s ( id_id , auxhist15_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist15_interval_s
  INTEGER id_id
  model_config_rec%auxhist15_interval_s(id_id) = auxhist15_interval_s
  RETURN
END SUBROUTINE nl_set_auxhist15_interval_s
SUBROUTINE nl_set_auxhist15_interval ( id_id , auxhist15_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist15_interval
  INTEGER id_id
  model_config_rec%auxhist15_interval(id_id) = auxhist15_interval
  RETURN
END SUBROUTINE nl_set_auxhist15_interval
SUBROUTINE nl_set_auxhist15_begin_y ( id_id , auxhist15_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist15_begin_y
  INTEGER id_id
  model_config_rec%auxhist15_begin_y(id_id) = auxhist15_begin_y
  RETURN
END SUBROUTINE nl_set_auxhist15_begin_y
SUBROUTINE nl_set_auxhist15_begin_d ( id_id , auxhist15_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist15_begin_d
  INTEGER id_id
  model_config_rec%auxhist15_begin_d(id_id) = auxhist15_begin_d
  RETURN
END SUBROUTINE nl_set_auxhist15_begin_d
SUBROUTINE nl_set_auxhist15_begin_h ( id_id , auxhist15_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist15_begin_h
  INTEGER id_id
  model_config_rec%auxhist15_begin_h(id_id) = auxhist15_begin_h
  RETURN
END SUBROUTINE nl_set_auxhist15_begin_h
SUBROUTINE nl_set_auxhist15_begin_m ( id_id , auxhist15_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist15_begin_m
  INTEGER id_id
  model_config_rec%auxhist15_begin_m(id_id) = auxhist15_begin_m
  RETURN
END SUBROUTINE nl_set_auxhist15_begin_m
SUBROUTINE nl_set_auxhist15_begin_s ( id_id , auxhist15_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist15_begin_s
  INTEGER id_id
  model_config_rec%auxhist15_begin_s(id_id) = auxhist15_begin_s
  RETURN
END SUBROUTINE nl_set_auxhist15_begin_s
SUBROUTINE nl_set_auxhist15_begin ( id_id , auxhist15_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist15_begin
  INTEGER id_id
  model_config_rec%auxhist15_begin(id_id) = auxhist15_begin
  RETURN
END SUBROUTINE nl_set_auxhist15_begin
SUBROUTINE nl_set_auxhist15_end_y ( id_id , auxhist15_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist15_end_y
  INTEGER id_id
  model_config_rec%auxhist15_end_y(id_id) = auxhist15_end_y
  RETURN
END SUBROUTINE nl_set_auxhist15_end_y
SUBROUTINE nl_set_auxhist15_end_d ( id_id , auxhist15_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist15_end_d
  INTEGER id_id
  model_config_rec%auxhist15_end_d(id_id) = auxhist15_end_d
  RETURN
END SUBROUTINE nl_set_auxhist15_end_d
SUBROUTINE nl_set_auxhist15_end_h ( id_id , auxhist15_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist15_end_h
  INTEGER id_id
  model_config_rec%auxhist15_end_h(id_id) = auxhist15_end_h
  RETURN
END SUBROUTINE nl_set_auxhist15_end_h
SUBROUTINE nl_set_auxhist15_end_m ( id_id , auxhist15_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist15_end_m
  INTEGER id_id
  model_config_rec%auxhist15_end_m(id_id) = auxhist15_end_m
  RETURN
END SUBROUTINE nl_set_auxhist15_end_m
SUBROUTINE nl_set_auxhist15_end_s ( id_id , auxhist15_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist15_end_s
  INTEGER id_id
  model_config_rec%auxhist15_end_s(id_id) = auxhist15_end_s
  RETURN
END SUBROUTINE nl_set_auxhist15_end_s
SUBROUTINE nl_set_auxhist15_end ( id_id , auxhist15_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist15_end
  INTEGER id_id
  model_config_rec%auxhist15_end(id_id) = auxhist15_end
  RETURN
END SUBROUTINE nl_set_auxhist15_end
SUBROUTINE nl_set_io_form_auxhist15 ( id_id , io_form_auxhist15 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxhist15
  INTEGER id_id
  model_config_rec%io_form_auxhist15 = io_form_auxhist15 
  RETURN
END SUBROUTINE nl_set_io_form_auxhist15
SUBROUTINE nl_set_frames_per_auxhist15 ( id_id , frames_per_auxhist15 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxhist15
  INTEGER id_id
  model_config_rec%frames_per_auxhist15(id_id) = frames_per_auxhist15
  RETURN
END SUBROUTINE nl_set_frames_per_auxhist15
SUBROUTINE nl_set_auxhist16_inname ( id_id , auxhist16_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist16_inname
  INTEGER id_id
  model_config_rec%auxhist16_inname = trim(auxhist16_inname) 
  RETURN
END SUBROUTINE nl_set_auxhist16_inname
SUBROUTINE nl_set_auxhist16_outname ( id_id , auxhist16_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist16_outname
  INTEGER id_id
  model_config_rec%auxhist16_outname = trim(auxhist16_outname) 
  RETURN
END SUBROUTINE nl_set_auxhist16_outname
SUBROUTINE nl_set_auxhist16_interval_y ( id_id , auxhist16_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist16_interval_y
  INTEGER id_id
  model_config_rec%auxhist16_interval_y(id_id) = auxhist16_interval_y
  RETURN
END SUBROUTINE nl_set_auxhist16_interval_y
SUBROUTINE nl_set_auxhist16_interval_d ( id_id , auxhist16_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist16_interval_d
  INTEGER id_id
  model_config_rec%auxhist16_interval_d(id_id) = auxhist16_interval_d
  RETURN
END SUBROUTINE nl_set_auxhist16_interval_d
SUBROUTINE nl_set_auxhist16_interval_h ( id_id , auxhist16_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist16_interval_h
  INTEGER id_id
  model_config_rec%auxhist16_interval_h(id_id) = auxhist16_interval_h
  RETURN
END SUBROUTINE nl_set_auxhist16_interval_h
SUBROUTINE nl_set_auxhist16_interval_m ( id_id , auxhist16_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist16_interval_m
  INTEGER id_id
  model_config_rec%auxhist16_interval_m(id_id) = auxhist16_interval_m
  RETURN
END SUBROUTINE nl_set_auxhist16_interval_m
SUBROUTINE nl_set_auxhist16_interval_s ( id_id , auxhist16_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist16_interval_s
  INTEGER id_id
  model_config_rec%auxhist16_interval_s(id_id) = auxhist16_interval_s
  RETURN
END SUBROUTINE nl_set_auxhist16_interval_s
SUBROUTINE nl_set_auxhist16_interval ( id_id , auxhist16_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist16_interval
  INTEGER id_id
  model_config_rec%auxhist16_interval(id_id) = auxhist16_interval
  RETURN
END SUBROUTINE nl_set_auxhist16_interval
SUBROUTINE nl_set_auxhist16_begin_y ( id_id , auxhist16_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist16_begin_y
  INTEGER id_id
  model_config_rec%auxhist16_begin_y(id_id) = auxhist16_begin_y
  RETURN
END SUBROUTINE nl_set_auxhist16_begin_y
SUBROUTINE nl_set_auxhist16_begin_d ( id_id , auxhist16_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist16_begin_d
  INTEGER id_id
  model_config_rec%auxhist16_begin_d(id_id) = auxhist16_begin_d
  RETURN
END SUBROUTINE nl_set_auxhist16_begin_d
SUBROUTINE nl_set_auxhist16_begin_h ( id_id , auxhist16_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist16_begin_h
  INTEGER id_id
  model_config_rec%auxhist16_begin_h(id_id) = auxhist16_begin_h
  RETURN
END SUBROUTINE nl_set_auxhist16_begin_h
SUBROUTINE nl_set_auxhist16_begin_m ( id_id , auxhist16_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist16_begin_m
  INTEGER id_id
  model_config_rec%auxhist16_begin_m(id_id) = auxhist16_begin_m
  RETURN
END SUBROUTINE nl_set_auxhist16_begin_m
SUBROUTINE nl_set_auxhist16_begin_s ( id_id , auxhist16_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist16_begin_s
  INTEGER id_id
  model_config_rec%auxhist16_begin_s(id_id) = auxhist16_begin_s
  RETURN
END SUBROUTINE nl_set_auxhist16_begin_s
SUBROUTINE nl_set_auxhist16_begin ( id_id , auxhist16_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist16_begin
  INTEGER id_id
  model_config_rec%auxhist16_begin(id_id) = auxhist16_begin
  RETURN
END SUBROUTINE nl_set_auxhist16_begin
SUBROUTINE nl_set_auxhist16_end_y ( id_id , auxhist16_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist16_end_y
  INTEGER id_id
  model_config_rec%auxhist16_end_y(id_id) = auxhist16_end_y
  RETURN
END SUBROUTINE nl_set_auxhist16_end_y
SUBROUTINE nl_set_auxhist16_end_d ( id_id , auxhist16_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist16_end_d
  INTEGER id_id
  model_config_rec%auxhist16_end_d(id_id) = auxhist16_end_d
  RETURN
END SUBROUTINE nl_set_auxhist16_end_d
SUBROUTINE nl_set_auxhist16_end_h ( id_id , auxhist16_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist16_end_h
  INTEGER id_id
  model_config_rec%auxhist16_end_h(id_id) = auxhist16_end_h
  RETURN
END SUBROUTINE nl_set_auxhist16_end_h
SUBROUTINE nl_set_auxhist16_end_m ( id_id , auxhist16_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist16_end_m
  INTEGER id_id
  model_config_rec%auxhist16_end_m(id_id) = auxhist16_end_m
  RETURN
END SUBROUTINE nl_set_auxhist16_end_m
SUBROUTINE nl_set_auxhist16_end_s ( id_id , auxhist16_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist16_end_s
  INTEGER id_id
  model_config_rec%auxhist16_end_s(id_id) = auxhist16_end_s
  RETURN
END SUBROUTINE nl_set_auxhist16_end_s
SUBROUTINE nl_set_auxhist16_end ( id_id , auxhist16_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist16_end
  INTEGER id_id
  model_config_rec%auxhist16_end(id_id) = auxhist16_end
  RETURN
END SUBROUTINE nl_set_auxhist16_end
SUBROUTINE nl_set_io_form_auxhist16 ( id_id , io_form_auxhist16 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxhist16
  INTEGER id_id
  model_config_rec%io_form_auxhist16 = io_form_auxhist16 
  RETURN
END SUBROUTINE nl_set_io_form_auxhist16
SUBROUTINE nl_set_frames_per_auxhist16 ( id_id , frames_per_auxhist16 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxhist16
  INTEGER id_id
  model_config_rec%frames_per_auxhist16(id_id) = frames_per_auxhist16
  RETURN
END SUBROUTINE nl_set_frames_per_auxhist16
SUBROUTINE nl_set_auxhist17_inname ( id_id , auxhist17_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist17_inname
  INTEGER id_id
  model_config_rec%auxhist17_inname = trim(auxhist17_inname) 
  RETURN
END SUBROUTINE nl_set_auxhist17_inname
SUBROUTINE nl_set_auxhist17_outname ( id_id , auxhist17_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist17_outname
  INTEGER id_id
  model_config_rec%auxhist17_outname = trim(auxhist17_outname) 
  RETURN
END SUBROUTINE nl_set_auxhist17_outname
SUBROUTINE nl_set_auxhist17_interval_y ( id_id , auxhist17_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist17_interval_y
  INTEGER id_id
  model_config_rec%auxhist17_interval_y(id_id) = auxhist17_interval_y
  RETURN
END SUBROUTINE nl_set_auxhist17_interval_y
SUBROUTINE nl_set_auxhist17_interval_d ( id_id , auxhist17_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist17_interval_d
  INTEGER id_id
  model_config_rec%auxhist17_interval_d(id_id) = auxhist17_interval_d
  RETURN
END SUBROUTINE nl_set_auxhist17_interval_d
SUBROUTINE nl_set_auxhist17_interval_h ( id_id , auxhist17_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist17_interval_h
  INTEGER id_id
  model_config_rec%auxhist17_interval_h(id_id) = auxhist17_interval_h
  RETURN
END SUBROUTINE nl_set_auxhist17_interval_h
SUBROUTINE nl_set_auxhist17_interval_m ( id_id , auxhist17_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist17_interval_m
  INTEGER id_id
  model_config_rec%auxhist17_interval_m(id_id) = auxhist17_interval_m
  RETURN
END SUBROUTINE nl_set_auxhist17_interval_m
SUBROUTINE nl_set_auxhist17_interval_s ( id_id , auxhist17_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist17_interval_s
  INTEGER id_id
  model_config_rec%auxhist17_interval_s(id_id) = auxhist17_interval_s
  RETURN
END SUBROUTINE nl_set_auxhist17_interval_s
SUBROUTINE nl_set_auxhist17_interval ( id_id , auxhist17_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist17_interval
  INTEGER id_id
  model_config_rec%auxhist17_interval(id_id) = auxhist17_interval
  RETURN
END SUBROUTINE nl_set_auxhist17_interval
SUBROUTINE nl_set_auxhist17_begin_y ( id_id , auxhist17_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist17_begin_y
  INTEGER id_id
  model_config_rec%auxhist17_begin_y(id_id) = auxhist17_begin_y
  RETURN
END SUBROUTINE nl_set_auxhist17_begin_y
SUBROUTINE nl_set_auxhist17_begin_d ( id_id , auxhist17_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist17_begin_d
  INTEGER id_id
  model_config_rec%auxhist17_begin_d(id_id) = auxhist17_begin_d
  RETURN
END SUBROUTINE nl_set_auxhist17_begin_d
SUBROUTINE nl_set_auxhist17_begin_h ( id_id , auxhist17_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist17_begin_h
  INTEGER id_id
  model_config_rec%auxhist17_begin_h(id_id) = auxhist17_begin_h
  RETURN
END SUBROUTINE nl_set_auxhist17_begin_h
SUBROUTINE nl_set_auxhist17_begin_m ( id_id , auxhist17_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist17_begin_m
  INTEGER id_id
  model_config_rec%auxhist17_begin_m(id_id) = auxhist17_begin_m
  RETURN
END SUBROUTINE nl_set_auxhist17_begin_m
SUBROUTINE nl_set_auxhist17_begin_s ( id_id , auxhist17_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist17_begin_s
  INTEGER id_id
  model_config_rec%auxhist17_begin_s(id_id) = auxhist17_begin_s
  RETURN
END SUBROUTINE nl_set_auxhist17_begin_s
SUBROUTINE nl_set_auxhist17_begin ( id_id , auxhist17_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist17_begin
  INTEGER id_id
  model_config_rec%auxhist17_begin(id_id) = auxhist17_begin
  RETURN
END SUBROUTINE nl_set_auxhist17_begin
SUBROUTINE nl_set_auxhist17_end_y ( id_id , auxhist17_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist17_end_y
  INTEGER id_id
  model_config_rec%auxhist17_end_y(id_id) = auxhist17_end_y
  RETURN
END SUBROUTINE nl_set_auxhist17_end_y
SUBROUTINE nl_set_auxhist17_end_d ( id_id , auxhist17_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist17_end_d
  INTEGER id_id
  model_config_rec%auxhist17_end_d(id_id) = auxhist17_end_d
  RETURN
END SUBROUTINE nl_set_auxhist17_end_d
SUBROUTINE nl_set_auxhist17_end_h ( id_id , auxhist17_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist17_end_h
  INTEGER id_id
  model_config_rec%auxhist17_end_h(id_id) = auxhist17_end_h
  RETURN
END SUBROUTINE nl_set_auxhist17_end_h
SUBROUTINE nl_set_auxhist17_end_m ( id_id , auxhist17_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist17_end_m
  INTEGER id_id
  model_config_rec%auxhist17_end_m(id_id) = auxhist17_end_m
  RETURN
END SUBROUTINE nl_set_auxhist17_end_m
SUBROUTINE nl_set_auxhist17_end_s ( id_id , auxhist17_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist17_end_s
  INTEGER id_id
  model_config_rec%auxhist17_end_s(id_id) = auxhist17_end_s
  RETURN
END SUBROUTINE nl_set_auxhist17_end_s
#endif
#if (NNN == 4)
SUBROUTINE nl_set_auxhist17_end ( id_id , auxhist17_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist17_end
  INTEGER id_id
  model_config_rec%auxhist17_end(id_id) = auxhist17_end
  RETURN
END SUBROUTINE nl_set_auxhist17_end
SUBROUTINE nl_set_io_form_auxhist17 ( id_id , io_form_auxhist17 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxhist17
  INTEGER id_id
  model_config_rec%io_form_auxhist17 = io_form_auxhist17 
  RETURN
END SUBROUTINE nl_set_io_form_auxhist17
SUBROUTINE nl_set_frames_per_auxhist17 ( id_id , frames_per_auxhist17 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxhist17
  INTEGER id_id
  model_config_rec%frames_per_auxhist17(id_id) = frames_per_auxhist17
  RETURN
END SUBROUTINE nl_set_frames_per_auxhist17
SUBROUTINE nl_set_auxhist18_inname ( id_id , auxhist18_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist18_inname
  INTEGER id_id
  model_config_rec%auxhist18_inname = trim(auxhist18_inname) 
  RETURN
END SUBROUTINE nl_set_auxhist18_inname
SUBROUTINE nl_set_auxhist18_outname ( id_id , auxhist18_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist18_outname
  INTEGER id_id
  model_config_rec%auxhist18_outname = trim(auxhist18_outname) 
  RETURN
END SUBROUTINE nl_set_auxhist18_outname
SUBROUTINE nl_set_auxhist18_interval_y ( id_id , auxhist18_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist18_interval_y
  INTEGER id_id
  model_config_rec%auxhist18_interval_y(id_id) = auxhist18_interval_y
  RETURN
END SUBROUTINE nl_set_auxhist18_interval_y
SUBROUTINE nl_set_auxhist18_interval_d ( id_id , auxhist18_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist18_interval_d
  INTEGER id_id
  model_config_rec%auxhist18_interval_d(id_id) = auxhist18_interval_d
  RETURN
END SUBROUTINE nl_set_auxhist18_interval_d
SUBROUTINE nl_set_auxhist18_interval_h ( id_id , auxhist18_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist18_interval_h
  INTEGER id_id
  model_config_rec%auxhist18_interval_h(id_id) = auxhist18_interval_h
  RETURN
END SUBROUTINE nl_set_auxhist18_interval_h
SUBROUTINE nl_set_auxhist18_interval_m ( id_id , auxhist18_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist18_interval_m
  INTEGER id_id
  model_config_rec%auxhist18_interval_m(id_id) = auxhist18_interval_m
  RETURN
END SUBROUTINE nl_set_auxhist18_interval_m
SUBROUTINE nl_set_auxhist18_interval_s ( id_id , auxhist18_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist18_interval_s
  INTEGER id_id
  model_config_rec%auxhist18_interval_s(id_id) = auxhist18_interval_s
  RETURN
END SUBROUTINE nl_set_auxhist18_interval_s
SUBROUTINE nl_set_auxhist18_interval ( id_id , auxhist18_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist18_interval
  INTEGER id_id
  model_config_rec%auxhist18_interval(id_id) = auxhist18_interval
  RETURN
END SUBROUTINE nl_set_auxhist18_interval
SUBROUTINE nl_set_auxhist18_begin_y ( id_id , auxhist18_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist18_begin_y
  INTEGER id_id
  model_config_rec%auxhist18_begin_y(id_id) = auxhist18_begin_y
  RETURN
END SUBROUTINE nl_set_auxhist18_begin_y
SUBROUTINE nl_set_auxhist18_begin_d ( id_id , auxhist18_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist18_begin_d
  INTEGER id_id
  model_config_rec%auxhist18_begin_d(id_id) = auxhist18_begin_d
  RETURN
END SUBROUTINE nl_set_auxhist18_begin_d
SUBROUTINE nl_set_auxhist18_begin_h ( id_id , auxhist18_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist18_begin_h
  INTEGER id_id
  model_config_rec%auxhist18_begin_h(id_id) = auxhist18_begin_h
  RETURN
END SUBROUTINE nl_set_auxhist18_begin_h
SUBROUTINE nl_set_auxhist18_begin_m ( id_id , auxhist18_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist18_begin_m
  INTEGER id_id
  model_config_rec%auxhist18_begin_m(id_id) = auxhist18_begin_m
  RETURN
END SUBROUTINE nl_set_auxhist18_begin_m
SUBROUTINE nl_set_auxhist18_begin_s ( id_id , auxhist18_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist18_begin_s
  INTEGER id_id
  model_config_rec%auxhist18_begin_s(id_id) = auxhist18_begin_s
  RETURN
END SUBROUTINE nl_set_auxhist18_begin_s
SUBROUTINE nl_set_auxhist18_begin ( id_id , auxhist18_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist18_begin
  INTEGER id_id
  model_config_rec%auxhist18_begin(id_id) = auxhist18_begin
  RETURN
END SUBROUTINE nl_set_auxhist18_begin
SUBROUTINE nl_set_auxhist18_end_y ( id_id , auxhist18_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist18_end_y
  INTEGER id_id
  model_config_rec%auxhist18_end_y(id_id) = auxhist18_end_y
  RETURN
END SUBROUTINE nl_set_auxhist18_end_y
SUBROUTINE nl_set_auxhist18_end_d ( id_id , auxhist18_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist18_end_d
  INTEGER id_id
  model_config_rec%auxhist18_end_d(id_id) = auxhist18_end_d
  RETURN
END SUBROUTINE nl_set_auxhist18_end_d
SUBROUTINE nl_set_auxhist18_end_h ( id_id , auxhist18_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist18_end_h
  INTEGER id_id
  model_config_rec%auxhist18_end_h(id_id) = auxhist18_end_h
  RETURN
END SUBROUTINE nl_set_auxhist18_end_h
SUBROUTINE nl_set_auxhist18_end_m ( id_id , auxhist18_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist18_end_m
  INTEGER id_id
  model_config_rec%auxhist18_end_m(id_id) = auxhist18_end_m
  RETURN
END SUBROUTINE nl_set_auxhist18_end_m
SUBROUTINE nl_set_auxhist18_end_s ( id_id , auxhist18_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist18_end_s
  INTEGER id_id
  model_config_rec%auxhist18_end_s(id_id) = auxhist18_end_s
  RETURN
END SUBROUTINE nl_set_auxhist18_end_s
SUBROUTINE nl_set_auxhist18_end ( id_id , auxhist18_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist18_end
  INTEGER id_id
  model_config_rec%auxhist18_end(id_id) = auxhist18_end
  RETURN
END SUBROUTINE nl_set_auxhist18_end
SUBROUTINE nl_set_io_form_auxhist18 ( id_id , io_form_auxhist18 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxhist18
  INTEGER id_id
  model_config_rec%io_form_auxhist18 = io_form_auxhist18 
  RETURN
END SUBROUTINE nl_set_io_form_auxhist18
SUBROUTINE nl_set_frames_per_auxhist18 ( id_id , frames_per_auxhist18 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxhist18
  INTEGER id_id
  model_config_rec%frames_per_auxhist18(id_id) = frames_per_auxhist18
  RETURN
END SUBROUTINE nl_set_frames_per_auxhist18
SUBROUTINE nl_set_auxhist19_inname ( id_id , auxhist19_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist19_inname
  INTEGER id_id
  model_config_rec%auxhist19_inname = trim(auxhist19_inname) 
  RETURN
END SUBROUTINE nl_set_auxhist19_inname
SUBROUTINE nl_set_auxhist19_outname ( id_id , auxhist19_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist19_outname
  INTEGER id_id
  model_config_rec%auxhist19_outname = trim(auxhist19_outname) 
  RETURN
END SUBROUTINE nl_set_auxhist19_outname
SUBROUTINE nl_set_auxhist19_interval_y ( id_id , auxhist19_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist19_interval_y
  INTEGER id_id
  model_config_rec%auxhist19_interval_y(id_id) = auxhist19_interval_y
  RETURN
END SUBROUTINE nl_set_auxhist19_interval_y
SUBROUTINE nl_set_auxhist19_interval_d ( id_id , auxhist19_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist19_interval_d
  INTEGER id_id
  model_config_rec%auxhist19_interval_d(id_id) = auxhist19_interval_d
  RETURN
END SUBROUTINE nl_set_auxhist19_interval_d
SUBROUTINE nl_set_auxhist19_interval_h ( id_id , auxhist19_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist19_interval_h
  INTEGER id_id
  model_config_rec%auxhist19_interval_h(id_id) = auxhist19_interval_h
  RETURN
END SUBROUTINE nl_set_auxhist19_interval_h
SUBROUTINE nl_set_auxhist19_interval_m ( id_id , auxhist19_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist19_interval_m
  INTEGER id_id
  model_config_rec%auxhist19_interval_m(id_id) = auxhist19_interval_m
  RETURN
END SUBROUTINE nl_set_auxhist19_interval_m
SUBROUTINE nl_set_auxhist19_interval_s ( id_id , auxhist19_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist19_interval_s
  INTEGER id_id
  model_config_rec%auxhist19_interval_s(id_id) = auxhist19_interval_s
  RETURN
END SUBROUTINE nl_set_auxhist19_interval_s
SUBROUTINE nl_set_auxhist19_interval ( id_id , auxhist19_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist19_interval
  INTEGER id_id
  model_config_rec%auxhist19_interval(id_id) = auxhist19_interval
  RETURN
END SUBROUTINE nl_set_auxhist19_interval
SUBROUTINE nl_set_auxhist19_begin_y ( id_id , auxhist19_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist19_begin_y
  INTEGER id_id
  model_config_rec%auxhist19_begin_y(id_id) = auxhist19_begin_y
  RETURN
END SUBROUTINE nl_set_auxhist19_begin_y
SUBROUTINE nl_set_auxhist19_begin_d ( id_id , auxhist19_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist19_begin_d
  INTEGER id_id
  model_config_rec%auxhist19_begin_d(id_id) = auxhist19_begin_d
  RETURN
END SUBROUTINE nl_set_auxhist19_begin_d
SUBROUTINE nl_set_auxhist19_begin_h ( id_id , auxhist19_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist19_begin_h
  INTEGER id_id
  model_config_rec%auxhist19_begin_h(id_id) = auxhist19_begin_h
  RETURN
END SUBROUTINE nl_set_auxhist19_begin_h
SUBROUTINE nl_set_auxhist19_begin_m ( id_id , auxhist19_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist19_begin_m
  INTEGER id_id
  model_config_rec%auxhist19_begin_m(id_id) = auxhist19_begin_m
  RETURN
END SUBROUTINE nl_set_auxhist19_begin_m
SUBROUTINE nl_set_auxhist19_begin_s ( id_id , auxhist19_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist19_begin_s
  INTEGER id_id
  model_config_rec%auxhist19_begin_s(id_id) = auxhist19_begin_s
  RETURN
END SUBROUTINE nl_set_auxhist19_begin_s
SUBROUTINE nl_set_auxhist19_begin ( id_id , auxhist19_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist19_begin
  INTEGER id_id
  model_config_rec%auxhist19_begin(id_id) = auxhist19_begin
  RETURN
END SUBROUTINE nl_set_auxhist19_begin
SUBROUTINE nl_set_auxhist19_end_y ( id_id , auxhist19_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist19_end_y
  INTEGER id_id
  model_config_rec%auxhist19_end_y(id_id) = auxhist19_end_y
  RETURN
END SUBROUTINE nl_set_auxhist19_end_y
SUBROUTINE nl_set_auxhist19_end_d ( id_id , auxhist19_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist19_end_d
  INTEGER id_id
  model_config_rec%auxhist19_end_d(id_id) = auxhist19_end_d
  RETURN
END SUBROUTINE nl_set_auxhist19_end_d
SUBROUTINE nl_set_auxhist19_end_h ( id_id , auxhist19_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist19_end_h
  INTEGER id_id
  model_config_rec%auxhist19_end_h(id_id) = auxhist19_end_h
  RETURN
END SUBROUTINE nl_set_auxhist19_end_h
SUBROUTINE nl_set_auxhist19_end_m ( id_id , auxhist19_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist19_end_m
  INTEGER id_id
  model_config_rec%auxhist19_end_m(id_id) = auxhist19_end_m
  RETURN
END SUBROUTINE nl_set_auxhist19_end_m
SUBROUTINE nl_set_auxhist19_end_s ( id_id , auxhist19_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist19_end_s
  INTEGER id_id
  model_config_rec%auxhist19_end_s(id_id) = auxhist19_end_s
  RETURN
END SUBROUTINE nl_set_auxhist19_end_s
SUBROUTINE nl_set_auxhist19_end ( id_id , auxhist19_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist19_end
  INTEGER id_id
  model_config_rec%auxhist19_end(id_id) = auxhist19_end
  RETURN
END SUBROUTINE nl_set_auxhist19_end
SUBROUTINE nl_set_io_form_auxhist19 ( id_id , io_form_auxhist19 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxhist19
  INTEGER id_id
  model_config_rec%io_form_auxhist19 = io_form_auxhist19 
  RETURN
END SUBROUTINE nl_set_io_form_auxhist19
SUBROUTINE nl_set_frames_per_auxhist19 ( id_id , frames_per_auxhist19 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxhist19
  INTEGER id_id
  model_config_rec%frames_per_auxhist19(id_id) = frames_per_auxhist19
  RETURN
END SUBROUTINE nl_set_frames_per_auxhist19
SUBROUTINE nl_set_auxhist20_inname ( id_id , auxhist20_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist20_inname
  INTEGER id_id
  model_config_rec%auxhist20_inname = trim(auxhist20_inname) 
  RETURN
END SUBROUTINE nl_set_auxhist20_inname
SUBROUTINE nl_set_auxhist20_outname ( id_id , auxhist20_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist20_outname
  INTEGER id_id
  model_config_rec%auxhist20_outname = trim(auxhist20_outname) 
  RETURN
END SUBROUTINE nl_set_auxhist20_outname
SUBROUTINE nl_set_auxhist20_interval_y ( id_id , auxhist20_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist20_interval_y
  INTEGER id_id
  model_config_rec%auxhist20_interval_y(id_id) = auxhist20_interval_y
  RETURN
END SUBROUTINE nl_set_auxhist20_interval_y
SUBROUTINE nl_set_auxhist20_interval_d ( id_id , auxhist20_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist20_interval_d
  INTEGER id_id
  model_config_rec%auxhist20_interval_d(id_id) = auxhist20_interval_d
  RETURN
END SUBROUTINE nl_set_auxhist20_interval_d
SUBROUTINE nl_set_auxhist20_interval_h ( id_id , auxhist20_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist20_interval_h
  INTEGER id_id
  model_config_rec%auxhist20_interval_h(id_id) = auxhist20_interval_h
  RETURN
END SUBROUTINE nl_set_auxhist20_interval_h
SUBROUTINE nl_set_auxhist20_interval_m ( id_id , auxhist20_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist20_interval_m
  INTEGER id_id
  model_config_rec%auxhist20_interval_m(id_id) = auxhist20_interval_m
  RETURN
END SUBROUTINE nl_set_auxhist20_interval_m
SUBROUTINE nl_set_auxhist20_interval_s ( id_id , auxhist20_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist20_interval_s
  INTEGER id_id
  model_config_rec%auxhist20_interval_s(id_id) = auxhist20_interval_s
  RETURN
END SUBROUTINE nl_set_auxhist20_interval_s
SUBROUTINE nl_set_auxhist20_interval ( id_id , auxhist20_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist20_interval
  INTEGER id_id
  model_config_rec%auxhist20_interval(id_id) = auxhist20_interval
  RETURN
END SUBROUTINE nl_set_auxhist20_interval
SUBROUTINE nl_set_auxhist20_begin_y ( id_id , auxhist20_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist20_begin_y
  INTEGER id_id
  model_config_rec%auxhist20_begin_y(id_id) = auxhist20_begin_y
  RETURN
END SUBROUTINE nl_set_auxhist20_begin_y
SUBROUTINE nl_set_auxhist20_begin_d ( id_id , auxhist20_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist20_begin_d
  INTEGER id_id
  model_config_rec%auxhist20_begin_d(id_id) = auxhist20_begin_d
  RETURN
END SUBROUTINE nl_set_auxhist20_begin_d
SUBROUTINE nl_set_auxhist20_begin_h ( id_id , auxhist20_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist20_begin_h
  INTEGER id_id
  model_config_rec%auxhist20_begin_h(id_id) = auxhist20_begin_h
  RETURN
END SUBROUTINE nl_set_auxhist20_begin_h
SUBROUTINE nl_set_auxhist20_begin_m ( id_id , auxhist20_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist20_begin_m
  INTEGER id_id
  model_config_rec%auxhist20_begin_m(id_id) = auxhist20_begin_m
  RETURN
END SUBROUTINE nl_set_auxhist20_begin_m
SUBROUTINE nl_set_auxhist20_begin_s ( id_id , auxhist20_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist20_begin_s
  INTEGER id_id
  model_config_rec%auxhist20_begin_s(id_id) = auxhist20_begin_s
  RETURN
END SUBROUTINE nl_set_auxhist20_begin_s
SUBROUTINE nl_set_auxhist20_begin ( id_id , auxhist20_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist20_begin
  INTEGER id_id
  model_config_rec%auxhist20_begin(id_id) = auxhist20_begin
  RETURN
END SUBROUTINE nl_set_auxhist20_begin
SUBROUTINE nl_set_auxhist20_end_y ( id_id , auxhist20_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist20_end_y
  INTEGER id_id
  model_config_rec%auxhist20_end_y(id_id) = auxhist20_end_y
  RETURN
END SUBROUTINE nl_set_auxhist20_end_y
SUBROUTINE nl_set_auxhist20_end_d ( id_id , auxhist20_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist20_end_d
  INTEGER id_id
  model_config_rec%auxhist20_end_d(id_id) = auxhist20_end_d
  RETURN
END SUBROUTINE nl_set_auxhist20_end_d
SUBROUTINE nl_set_auxhist20_end_h ( id_id , auxhist20_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist20_end_h
  INTEGER id_id
  model_config_rec%auxhist20_end_h(id_id) = auxhist20_end_h
  RETURN
END SUBROUTINE nl_set_auxhist20_end_h
SUBROUTINE nl_set_auxhist20_end_m ( id_id , auxhist20_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist20_end_m
  INTEGER id_id
  model_config_rec%auxhist20_end_m(id_id) = auxhist20_end_m
  RETURN
END SUBROUTINE nl_set_auxhist20_end_m
SUBROUTINE nl_set_auxhist20_end_s ( id_id , auxhist20_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist20_end_s
  INTEGER id_id
  model_config_rec%auxhist20_end_s(id_id) = auxhist20_end_s
  RETURN
END SUBROUTINE nl_set_auxhist20_end_s
SUBROUTINE nl_set_auxhist20_end ( id_id , auxhist20_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist20_end
  INTEGER id_id
  model_config_rec%auxhist20_end(id_id) = auxhist20_end
  RETURN
END SUBROUTINE nl_set_auxhist20_end
SUBROUTINE nl_set_io_form_auxhist20 ( id_id , io_form_auxhist20 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxhist20
  INTEGER id_id
  model_config_rec%io_form_auxhist20 = io_form_auxhist20 
  RETURN
END SUBROUTINE nl_set_io_form_auxhist20
SUBROUTINE nl_set_frames_per_auxhist20 ( id_id , frames_per_auxhist20 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxhist20
  INTEGER id_id
  model_config_rec%frames_per_auxhist20(id_id) = frames_per_auxhist20
  RETURN
END SUBROUTINE nl_set_frames_per_auxhist20
SUBROUTINE nl_set_auxhist21_inname ( id_id , auxhist21_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist21_inname
  INTEGER id_id
  model_config_rec%auxhist21_inname = trim(auxhist21_inname) 
  RETURN
END SUBROUTINE nl_set_auxhist21_inname
SUBROUTINE nl_set_auxhist21_outname ( id_id , auxhist21_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist21_outname
  INTEGER id_id
  model_config_rec%auxhist21_outname = trim(auxhist21_outname) 
  RETURN
END SUBROUTINE nl_set_auxhist21_outname
SUBROUTINE nl_set_auxhist21_interval_y ( id_id , auxhist21_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist21_interval_y
  INTEGER id_id
  model_config_rec%auxhist21_interval_y(id_id) = auxhist21_interval_y
  RETURN
END SUBROUTINE nl_set_auxhist21_interval_y
SUBROUTINE nl_set_auxhist21_interval_d ( id_id , auxhist21_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist21_interval_d
  INTEGER id_id
  model_config_rec%auxhist21_interval_d(id_id) = auxhist21_interval_d
  RETURN
END SUBROUTINE nl_set_auxhist21_interval_d
SUBROUTINE nl_set_auxhist21_interval_h ( id_id , auxhist21_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist21_interval_h
  INTEGER id_id
  model_config_rec%auxhist21_interval_h(id_id) = auxhist21_interval_h
  RETURN
END SUBROUTINE nl_set_auxhist21_interval_h
SUBROUTINE nl_set_auxhist21_interval_m ( id_id , auxhist21_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist21_interval_m
  INTEGER id_id
  model_config_rec%auxhist21_interval_m(id_id) = auxhist21_interval_m
  RETURN
END SUBROUTINE nl_set_auxhist21_interval_m
SUBROUTINE nl_set_auxhist21_interval_s ( id_id , auxhist21_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist21_interval_s
  INTEGER id_id
  model_config_rec%auxhist21_interval_s(id_id) = auxhist21_interval_s
  RETURN
END SUBROUTINE nl_set_auxhist21_interval_s
SUBROUTINE nl_set_auxhist21_interval ( id_id , auxhist21_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist21_interval
  INTEGER id_id
  model_config_rec%auxhist21_interval(id_id) = auxhist21_interval
  RETURN
END SUBROUTINE nl_set_auxhist21_interval
SUBROUTINE nl_set_auxhist21_begin_y ( id_id , auxhist21_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist21_begin_y
  INTEGER id_id
  model_config_rec%auxhist21_begin_y(id_id) = auxhist21_begin_y
  RETURN
END SUBROUTINE nl_set_auxhist21_begin_y
SUBROUTINE nl_set_auxhist21_begin_d ( id_id , auxhist21_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist21_begin_d
  INTEGER id_id
  model_config_rec%auxhist21_begin_d(id_id) = auxhist21_begin_d
  RETURN
END SUBROUTINE nl_set_auxhist21_begin_d
SUBROUTINE nl_set_auxhist21_begin_h ( id_id , auxhist21_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist21_begin_h
  INTEGER id_id
  model_config_rec%auxhist21_begin_h(id_id) = auxhist21_begin_h
  RETURN
END SUBROUTINE nl_set_auxhist21_begin_h
SUBROUTINE nl_set_auxhist21_begin_m ( id_id , auxhist21_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist21_begin_m
  INTEGER id_id
  model_config_rec%auxhist21_begin_m(id_id) = auxhist21_begin_m
  RETURN
END SUBROUTINE nl_set_auxhist21_begin_m
SUBROUTINE nl_set_auxhist21_begin_s ( id_id , auxhist21_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist21_begin_s
  INTEGER id_id
  model_config_rec%auxhist21_begin_s(id_id) = auxhist21_begin_s
  RETURN
END SUBROUTINE nl_set_auxhist21_begin_s
SUBROUTINE nl_set_auxhist21_begin ( id_id , auxhist21_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist21_begin
  INTEGER id_id
  model_config_rec%auxhist21_begin(id_id) = auxhist21_begin
  RETURN
END SUBROUTINE nl_set_auxhist21_begin
SUBROUTINE nl_set_auxhist21_end_y ( id_id , auxhist21_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist21_end_y
  INTEGER id_id
  model_config_rec%auxhist21_end_y(id_id) = auxhist21_end_y
  RETURN
END SUBROUTINE nl_set_auxhist21_end_y
SUBROUTINE nl_set_auxhist21_end_d ( id_id , auxhist21_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist21_end_d
  INTEGER id_id
  model_config_rec%auxhist21_end_d(id_id) = auxhist21_end_d
  RETURN
END SUBROUTINE nl_set_auxhist21_end_d
SUBROUTINE nl_set_auxhist21_end_h ( id_id , auxhist21_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist21_end_h
  INTEGER id_id
  model_config_rec%auxhist21_end_h(id_id) = auxhist21_end_h
  RETURN
END SUBROUTINE nl_set_auxhist21_end_h
SUBROUTINE nl_set_auxhist21_end_m ( id_id , auxhist21_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist21_end_m
  INTEGER id_id
  model_config_rec%auxhist21_end_m(id_id) = auxhist21_end_m
  RETURN
END SUBROUTINE nl_set_auxhist21_end_m
SUBROUTINE nl_set_auxhist21_end_s ( id_id , auxhist21_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist21_end_s
  INTEGER id_id
  model_config_rec%auxhist21_end_s(id_id) = auxhist21_end_s
  RETURN
END SUBROUTINE nl_set_auxhist21_end_s
SUBROUTINE nl_set_auxhist21_end ( id_id , auxhist21_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist21_end
  INTEGER id_id
  model_config_rec%auxhist21_end(id_id) = auxhist21_end
  RETURN
END SUBROUTINE nl_set_auxhist21_end
SUBROUTINE nl_set_io_form_auxhist21 ( id_id , io_form_auxhist21 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxhist21
  INTEGER id_id
  model_config_rec%io_form_auxhist21 = io_form_auxhist21 
  RETURN
END SUBROUTINE nl_set_io_form_auxhist21
SUBROUTINE nl_set_frames_per_auxhist21 ( id_id , frames_per_auxhist21 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxhist21
  INTEGER id_id
  model_config_rec%frames_per_auxhist21(id_id) = frames_per_auxhist21
  RETURN
END SUBROUTINE nl_set_frames_per_auxhist21
SUBROUTINE nl_set_auxhist22_inname ( id_id , auxhist22_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist22_inname
  INTEGER id_id
  model_config_rec%auxhist22_inname = trim(auxhist22_inname) 
  RETURN
END SUBROUTINE nl_set_auxhist22_inname
SUBROUTINE nl_set_auxhist22_outname ( id_id , auxhist22_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist22_outname
  INTEGER id_id
  model_config_rec%auxhist22_outname = trim(auxhist22_outname) 
  RETURN
END SUBROUTINE nl_set_auxhist22_outname
SUBROUTINE nl_set_auxhist22_interval_y ( id_id , auxhist22_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist22_interval_y
  INTEGER id_id
  model_config_rec%auxhist22_interval_y(id_id) = auxhist22_interval_y
  RETURN
END SUBROUTINE nl_set_auxhist22_interval_y
SUBROUTINE nl_set_auxhist22_interval_d ( id_id , auxhist22_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist22_interval_d
  INTEGER id_id
  model_config_rec%auxhist22_interval_d(id_id) = auxhist22_interval_d
  RETURN
END SUBROUTINE nl_set_auxhist22_interval_d
SUBROUTINE nl_set_auxhist22_interval_h ( id_id , auxhist22_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist22_interval_h
  INTEGER id_id
  model_config_rec%auxhist22_interval_h(id_id) = auxhist22_interval_h
  RETURN
END SUBROUTINE nl_set_auxhist22_interval_h
SUBROUTINE nl_set_auxhist22_interval_m ( id_id , auxhist22_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist22_interval_m
  INTEGER id_id
  model_config_rec%auxhist22_interval_m(id_id) = auxhist22_interval_m
  RETURN
END SUBROUTINE nl_set_auxhist22_interval_m
SUBROUTINE nl_set_auxhist22_interval_s ( id_id , auxhist22_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist22_interval_s
  INTEGER id_id
  model_config_rec%auxhist22_interval_s(id_id) = auxhist22_interval_s
  RETURN
END SUBROUTINE nl_set_auxhist22_interval_s
SUBROUTINE nl_set_auxhist22_interval ( id_id , auxhist22_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist22_interval
  INTEGER id_id
  model_config_rec%auxhist22_interval(id_id) = auxhist22_interval
  RETURN
END SUBROUTINE nl_set_auxhist22_interval
SUBROUTINE nl_set_auxhist22_begin_y ( id_id , auxhist22_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist22_begin_y
  INTEGER id_id
  model_config_rec%auxhist22_begin_y(id_id) = auxhist22_begin_y
  RETURN
END SUBROUTINE nl_set_auxhist22_begin_y
SUBROUTINE nl_set_auxhist22_begin_d ( id_id , auxhist22_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist22_begin_d
  INTEGER id_id
  model_config_rec%auxhist22_begin_d(id_id) = auxhist22_begin_d
  RETURN
END SUBROUTINE nl_set_auxhist22_begin_d
SUBROUTINE nl_set_auxhist22_begin_h ( id_id , auxhist22_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist22_begin_h
  INTEGER id_id
  model_config_rec%auxhist22_begin_h(id_id) = auxhist22_begin_h
  RETURN
END SUBROUTINE nl_set_auxhist22_begin_h
SUBROUTINE nl_set_auxhist22_begin_m ( id_id , auxhist22_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist22_begin_m
  INTEGER id_id
  model_config_rec%auxhist22_begin_m(id_id) = auxhist22_begin_m
  RETURN
END SUBROUTINE nl_set_auxhist22_begin_m
SUBROUTINE nl_set_auxhist22_begin_s ( id_id , auxhist22_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist22_begin_s
  INTEGER id_id
  model_config_rec%auxhist22_begin_s(id_id) = auxhist22_begin_s
  RETURN
END SUBROUTINE nl_set_auxhist22_begin_s
SUBROUTINE nl_set_auxhist22_begin ( id_id , auxhist22_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist22_begin
  INTEGER id_id
  model_config_rec%auxhist22_begin(id_id) = auxhist22_begin
  RETURN
END SUBROUTINE nl_set_auxhist22_begin
SUBROUTINE nl_set_auxhist22_end_y ( id_id , auxhist22_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist22_end_y
  INTEGER id_id
  model_config_rec%auxhist22_end_y(id_id) = auxhist22_end_y
  RETURN
END SUBROUTINE nl_set_auxhist22_end_y
SUBROUTINE nl_set_auxhist22_end_d ( id_id , auxhist22_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist22_end_d
  INTEGER id_id
  model_config_rec%auxhist22_end_d(id_id) = auxhist22_end_d
  RETURN
END SUBROUTINE nl_set_auxhist22_end_d
SUBROUTINE nl_set_auxhist22_end_h ( id_id , auxhist22_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist22_end_h
  INTEGER id_id
  model_config_rec%auxhist22_end_h(id_id) = auxhist22_end_h
  RETURN
END SUBROUTINE nl_set_auxhist22_end_h
SUBROUTINE nl_set_auxhist22_end_m ( id_id , auxhist22_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist22_end_m
  INTEGER id_id
  model_config_rec%auxhist22_end_m(id_id) = auxhist22_end_m
  RETURN
END SUBROUTINE nl_set_auxhist22_end_m
SUBROUTINE nl_set_auxhist22_end_s ( id_id , auxhist22_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist22_end_s
  INTEGER id_id
  model_config_rec%auxhist22_end_s(id_id) = auxhist22_end_s
  RETURN
END SUBROUTINE nl_set_auxhist22_end_s
SUBROUTINE nl_set_auxhist22_end ( id_id , auxhist22_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist22_end
  INTEGER id_id
  model_config_rec%auxhist22_end(id_id) = auxhist22_end
  RETURN
END SUBROUTINE nl_set_auxhist22_end
SUBROUTINE nl_set_io_form_auxhist22 ( id_id , io_form_auxhist22 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxhist22
  INTEGER id_id
  model_config_rec%io_form_auxhist22 = io_form_auxhist22 
  RETURN
END SUBROUTINE nl_set_io_form_auxhist22
SUBROUTINE nl_set_frames_per_auxhist22 ( id_id , frames_per_auxhist22 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxhist22
  INTEGER id_id
  model_config_rec%frames_per_auxhist22(id_id) = frames_per_auxhist22
  RETURN
END SUBROUTINE nl_set_frames_per_auxhist22
SUBROUTINE nl_set_auxhist23_inname ( id_id , auxhist23_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist23_inname
  INTEGER id_id
  model_config_rec%auxhist23_inname = trim(auxhist23_inname) 
  RETURN
END SUBROUTINE nl_set_auxhist23_inname
SUBROUTINE nl_set_auxhist23_outname ( id_id , auxhist23_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist23_outname
  INTEGER id_id
  model_config_rec%auxhist23_outname = trim(auxhist23_outname) 
  RETURN
END SUBROUTINE nl_set_auxhist23_outname
SUBROUTINE nl_set_auxhist23_interval_y ( id_id , auxhist23_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist23_interval_y
  INTEGER id_id
  model_config_rec%auxhist23_interval_y(id_id) = auxhist23_interval_y
  RETURN
END SUBROUTINE nl_set_auxhist23_interval_y
SUBROUTINE nl_set_auxhist23_interval_d ( id_id , auxhist23_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist23_interval_d
  INTEGER id_id
  model_config_rec%auxhist23_interval_d(id_id) = auxhist23_interval_d
  RETURN
END SUBROUTINE nl_set_auxhist23_interval_d
SUBROUTINE nl_set_auxhist23_interval_h ( id_id , auxhist23_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist23_interval_h
  INTEGER id_id
  model_config_rec%auxhist23_interval_h(id_id) = auxhist23_interval_h
  RETURN
END SUBROUTINE nl_set_auxhist23_interval_h
SUBROUTINE nl_set_auxhist23_interval_m ( id_id , auxhist23_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist23_interval_m
  INTEGER id_id
  model_config_rec%auxhist23_interval_m(id_id) = auxhist23_interval_m
  RETURN
END SUBROUTINE nl_set_auxhist23_interval_m
SUBROUTINE nl_set_auxhist23_interval_s ( id_id , auxhist23_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist23_interval_s
  INTEGER id_id
  model_config_rec%auxhist23_interval_s(id_id) = auxhist23_interval_s
  RETURN
END SUBROUTINE nl_set_auxhist23_interval_s
SUBROUTINE nl_set_auxhist23_interval ( id_id , auxhist23_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist23_interval
  INTEGER id_id
  model_config_rec%auxhist23_interval(id_id) = auxhist23_interval
  RETURN
END SUBROUTINE nl_set_auxhist23_interval
SUBROUTINE nl_set_auxhist23_begin_y ( id_id , auxhist23_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist23_begin_y
  INTEGER id_id
  model_config_rec%auxhist23_begin_y(id_id) = auxhist23_begin_y
  RETURN
END SUBROUTINE nl_set_auxhist23_begin_y
SUBROUTINE nl_set_auxhist23_begin_d ( id_id , auxhist23_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist23_begin_d
  INTEGER id_id
  model_config_rec%auxhist23_begin_d(id_id) = auxhist23_begin_d
  RETURN
END SUBROUTINE nl_set_auxhist23_begin_d
SUBROUTINE nl_set_auxhist23_begin_h ( id_id , auxhist23_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist23_begin_h
  INTEGER id_id
  model_config_rec%auxhist23_begin_h(id_id) = auxhist23_begin_h
  RETURN
END SUBROUTINE nl_set_auxhist23_begin_h
SUBROUTINE nl_set_auxhist23_begin_m ( id_id , auxhist23_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist23_begin_m
  INTEGER id_id
  model_config_rec%auxhist23_begin_m(id_id) = auxhist23_begin_m
  RETURN
END SUBROUTINE nl_set_auxhist23_begin_m
SUBROUTINE nl_set_auxhist23_begin_s ( id_id , auxhist23_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist23_begin_s
  INTEGER id_id
  model_config_rec%auxhist23_begin_s(id_id) = auxhist23_begin_s
  RETURN
END SUBROUTINE nl_set_auxhist23_begin_s
SUBROUTINE nl_set_auxhist23_begin ( id_id , auxhist23_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist23_begin
  INTEGER id_id
  model_config_rec%auxhist23_begin(id_id) = auxhist23_begin
  RETURN
END SUBROUTINE nl_set_auxhist23_begin
SUBROUTINE nl_set_auxhist23_end_y ( id_id , auxhist23_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist23_end_y
  INTEGER id_id
  model_config_rec%auxhist23_end_y(id_id) = auxhist23_end_y
  RETURN
END SUBROUTINE nl_set_auxhist23_end_y
SUBROUTINE nl_set_auxhist23_end_d ( id_id , auxhist23_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist23_end_d
  INTEGER id_id
  model_config_rec%auxhist23_end_d(id_id) = auxhist23_end_d
  RETURN
END SUBROUTINE nl_set_auxhist23_end_d
SUBROUTINE nl_set_auxhist23_end_h ( id_id , auxhist23_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist23_end_h
  INTEGER id_id
  model_config_rec%auxhist23_end_h(id_id) = auxhist23_end_h
  RETURN
END SUBROUTINE nl_set_auxhist23_end_h
SUBROUTINE nl_set_auxhist23_end_m ( id_id , auxhist23_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist23_end_m
  INTEGER id_id
  model_config_rec%auxhist23_end_m(id_id) = auxhist23_end_m
  RETURN
END SUBROUTINE nl_set_auxhist23_end_m
SUBROUTINE nl_set_auxhist23_end_s ( id_id , auxhist23_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist23_end_s
  INTEGER id_id
  model_config_rec%auxhist23_end_s(id_id) = auxhist23_end_s
  RETURN
END SUBROUTINE nl_set_auxhist23_end_s
SUBROUTINE nl_set_auxhist23_end ( id_id , auxhist23_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist23_end
  INTEGER id_id
  model_config_rec%auxhist23_end(id_id) = auxhist23_end
  RETURN
END SUBROUTINE nl_set_auxhist23_end
SUBROUTINE nl_set_io_form_auxhist23 ( id_id , io_form_auxhist23 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxhist23
  INTEGER id_id
  model_config_rec%io_form_auxhist23 = io_form_auxhist23 
  RETURN
END SUBROUTINE nl_set_io_form_auxhist23
SUBROUTINE nl_set_frames_per_auxhist23 ( id_id , frames_per_auxhist23 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxhist23
  INTEGER id_id
  model_config_rec%frames_per_auxhist23(id_id) = frames_per_auxhist23
  RETURN
END SUBROUTINE nl_set_frames_per_auxhist23
SUBROUTINE nl_set_auxhist24_inname ( id_id , auxhist24_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist24_inname
  INTEGER id_id
  model_config_rec%auxhist24_inname = trim(auxhist24_inname) 
  RETURN
END SUBROUTINE nl_set_auxhist24_inname
SUBROUTINE nl_set_auxhist24_outname ( id_id , auxhist24_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxhist24_outname
  INTEGER id_id
  model_config_rec%auxhist24_outname = trim(auxhist24_outname) 
  RETURN
END SUBROUTINE nl_set_auxhist24_outname
SUBROUTINE nl_set_auxhist24_interval_y ( id_id , auxhist24_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist24_interval_y
  INTEGER id_id
  model_config_rec%auxhist24_interval_y(id_id) = auxhist24_interval_y
  RETURN
END SUBROUTINE nl_set_auxhist24_interval_y
SUBROUTINE nl_set_auxhist24_interval_d ( id_id , auxhist24_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist24_interval_d
  INTEGER id_id
  model_config_rec%auxhist24_interval_d(id_id) = auxhist24_interval_d
  RETURN
END SUBROUTINE nl_set_auxhist24_interval_d
SUBROUTINE nl_set_auxhist24_interval_h ( id_id , auxhist24_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist24_interval_h
  INTEGER id_id
  model_config_rec%auxhist24_interval_h(id_id) = auxhist24_interval_h
  RETURN
END SUBROUTINE nl_set_auxhist24_interval_h
SUBROUTINE nl_set_auxhist24_interval_m ( id_id , auxhist24_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist24_interval_m
  INTEGER id_id
  model_config_rec%auxhist24_interval_m(id_id) = auxhist24_interval_m
  RETURN
END SUBROUTINE nl_set_auxhist24_interval_m
SUBROUTINE nl_set_auxhist24_interval_s ( id_id , auxhist24_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist24_interval_s
  INTEGER id_id
  model_config_rec%auxhist24_interval_s(id_id) = auxhist24_interval_s
  RETURN
END SUBROUTINE nl_set_auxhist24_interval_s
SUBROUTINE nl_set_auxhist24_interval ( id_id , auxhist24_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist24_interval
  INTEGER id_id
  model_config_rec%auxhist24_interval(id_id) = auxhist24_interval
  RETURN
END SUBROUTINE nl_set_auxhist24_interval
SUBROUTINE nl_set_auxhist24_begin_y ( id_id , auxhist24_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist24_begin_y
  INTEGER id_id
  model_config_rec%auxhist24_begin_y(id_id) = auxhist24_begin_y
  RETURN
END SUBROUTINE nl_set_auxhist24_begin_y
SUBROUTINE nl_set_auxhist24_begin_d ( id_id , auxhist24_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist24_begin_d
  INTEGER id_id
  model_config_rec%auxhist24_begin_d(id_id) = auxhist24_begin_d
  RETURN
END SUBROUTINE nl_set_auxhist24_begin_d
SUBROUTINE nl_set_auxhist24_begin_h ( id_id , auxhist24_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist24_begin_h
  INTEGER id_id
  model_config_rec%auxhist24_begin_h(id_id) = auxhist24_begin_h
  RETURN
END SUBROUTINE nl_set_auxhist24_begin_h
SUBROUTINE nl_set_auxhist24_begin_m ( id_id , auxhist24_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist24_begin_m
  INTEGER id_id
  model_config_rec%auxhist24_begin_m(id_id) = auxhist24_begin_m
  RETURN
END SUBROUTINE nl_set_auxhist24_begin_m
SUBROUTINE nl_set_auxhist24_begin_s ( id_id , auxhist24_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist24_begin_s
  INTEGER id_id
  model_config_rec%auxhist24_begin_s(id_id) = auxhist24_begin_s
  RETURN
END SUBROUTINE nl_set_auxhist24_begin_s
SUBROUTINE nl_set_auxhist24_begin ( id_id , auxhist24_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist24_begin
  INTEGER id_id
  model_config_rec%auxhist24_begin(id_id) = auxhist24_begin
  RETURN
END SUBROUTINE nl_set_auxhist24_begin
SUBROUTINE nl_set_auxhist24_end_y ( id_id , auxhist24_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist24_end_y
  INTEGER id_id
  model_config_rec%auxhist24_end_y(id_id) = auxhist24_end_y
  RETURN
END SUBROUTINE nl_set_auxhist24_end_y
SUBROUTINE nl_set_auxhist24_end_d ( id_id , auxhist24_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist24_end_d
  INTEGER id_id
  model_config_rec%auxhist24_end_d(id_id) = auxhist24_end_d
  RETURN
END SUBROUTINE nl_set_auxhist24_end_d
SUBROUTINE nl_set_auxhist24_end_h ( id_id , auxhist24_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist24_end_h
  INTEGER id_id
  model_config_rec%auxhist24_end_h(id_id) = auxhist24_end_h
  RETURN
END SUBROUTINE nl_set_auxhist24_end_h
SUBROUTINE nl_set_auxhist24_end_m ( id_id , auxhist24_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist24_end_m
  INTEGER id_id
  model_config_rec%auxhist24_end_m(id_id) = auxhist24_end_m
  RETURN
END SUBROUTINE nl_set_auxhist24_end_m
SUBROUTINE nl_set_auxhist24_end_s ( id_id , auxhist24_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist24_end_s
  INTEGER id_id
  model_config_rec%auxhist24_end_s(id_id) = auxhist24_end_s
  RETURN
END SUBROUTINE nl_set_auxhist24_end_s
SUBROUTINE nl_set_auxhist24_end ( id_id , auxhist24_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxhist24_end
  INTEGER id_id
  model_config_rec%auxhist24_end(id_id) = auxhist24_end
  RETURN
END SUBROUTINE nl_set_auxhist24_end
SUBROUTINE nl_set_io_form_auxhist24 ( id_id , io_form_auxhist24 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxhist24
  INTEGER id_id
  model_config_rec%io_form_auxhist24 = io_form_auxhist24 
  RETURN
END SUBROUTINE nl_set_io_form_auxhist24
SUBROUTINE nl_set_frames_per_auxhist24 ( id_id , frames_per_auxhist24 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxhist24
  INTEGER id_id
  model_config_rec%frames_per_auxhist24(id_id) = frames_per_auxhist24
  RETURN
END SUBROUTINE nl_set_frames_per_auxhist24
SUBROUTINE nl_set_auxinput1_outname ( id_id , auxinput1_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput1_outname
  INTEGER id_id
  model_config_rec%auxinput1_outname = trim(auxinput1_outname) 
  RETURN
END SUBROUTINE nl_set_auxinput1_outname
SUBROUTINE nl_set_auxinput1_interval_y ( id_id , auxinput1_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput1_interval_y
  INTEGER id_id
  model_config_rec%auxinput1_interval_y(id_id) = auxinput1_interval_y
  RETURN
END SUBROUTINE nl_set_auxinput1_interval_y
SUBROUTINE nl_set_auxinput1_interval_d ( id_id , auxinput1_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput1_interval_d
  INTEGER id_id
  model_config_rec%auxinput1_interval_d(id_id) = auxinput1_interval_d
  RETURN
END SUBROUTINE nl_set_auxinput1_interval_d
SUBROUTINE nl_set_auxinput1_interval_h ( id_id , auxinput1_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput1_interval_h
  INTEGER id_id
  model_config_rec%auxinput1_interval_h(id_id) = auxinput1_interval_h
  RETURN
END SUBROUTINE nl_set_auxinput1_interval_h
SUBROUTINE nl_set_auxinput1_interval_m ( id_id , auxinput1_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput1_interval_m
  INTEGER id_id
  model_config_rec%auxinput1_interval_m(id_id) = auxinput1_interval_m
  RETURN
END SUBROUTINE nl_set_auxinput1_interval_m
SUBROUTINE nl_set_auxinput1_interval_s ( id_id , auxinput1_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput1_interval_s
  INTEGER id_id
  model_config_rec%auxinput1_interval_s(id_id) = auxinput1_interval_s
  RETURN
END SUBROUTINE nl_set_auxinput1_interval_s
SUBROUTINE nl_set_auxinput1_interval ( id_id , auxinput1_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput1_interval
  INTEGER id_id
  model_config_rec%auxinput1_interval(id_id) = auxinput1_interval
  RETURN
END SUBROUTINE nl_set_auxinput1_interval
SUBROUTINE nl_set_auxinput1_begin_y ( id_id , auxinput1_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput1_begin_y
  INTEGER id_id
  model_config_rec%auxinput1_begin_y(id_id) = auxinput1_begin_y
  RETURN
END SUBROUTINE nl_set_auxinput1_begin_y
SUBROUTINE nl_set_auxinput1_begin_d ( id_id , auxinput1_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput1_begin_d
  INTEGER id_id
  model_config_rec%auxinput1_begin_d(id_id) = auxinput1_begin_d
  RETURN
END SUBROUTINE nl_set_auxinput1_begin_d
SUBROUTINE nl_set_auxinput1_begin_h ( id_id , auxinput1_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput1_begin_h
  INTEGER id_id
  model_config_rec%auxinput1_begin_h(id_id) = auxinput1_begin_h
  RETURN
END SUBROUTINE nl_set_auxinput1_begin_h
SUBROUTINE nl_set_auxinput1_begin_m ( id_id , auxinput1_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput1_begin_m
  INTEGER id_id
  model_config_rec%auxinput1_begin_m(id_id) = auxinput1_begin_m
  RETURN
END SUBROUTINE nl_set_auxinput1_begin_m
SUBROUTINE nl_set_auxinput1_begin_s ( id_id , auxinput1_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput1_begin_s
  INTEGER id_id
  model_config_rec%auxinput1_begin_s(id_id) = auxinput1_begin_s
  RETURN
END SUBROUTINE nl_set_auxinput1_begin_s
SUBROUTINE nl_set_auxinput1_begin ( id_id , auxinput1_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput1_begin
  INTEGER id_id
  model_config_rec%auxinput1_begin(id_id) = auxinput1_begin
  RETURN
END SUBROUTINE nl_set_auxinput1_begin
SUBROUTINE nl_set_auxinput1_end_y ( id_id , auxinput1_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput1_end_y
  INTEGER id_id
  model_config_rec%auxinput1_end_y(id_id) = auxinput1_end_y
  RETURN
END SUBROUTINE nl_set_auxinput1_end_y
SUBROUTINE nl_set_auxinput1_end_d ( id_id , auxinput1_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput1_end_d
  INTEGER id_id
  model_config_rec%auxinput1_end_d(id_id) = auxinput1_end_d
  RETURN
END SUBROUTINE nl_set_auxinput1_end_d
SUBROUTINE nl_set_auxinput1_end_h ( id_id , auxinput1_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput1_end_h
  INTEGER id_id
  model_config_rec%auxinput1_end_h(id_id) = auxinput1_end_h
  RETURN
END SUBROUTINE nl_set_auxinput1_end_h
SUBROUTINE nl_set_auxinput1_end_m ( id_id , auxinput1_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput1_end_m
  INTEGER id_id
  model_config_rec%auxinput1_end_m(id_id) = auxinput1_end_m
  RETURN
END SUBROUTINE nl_set_auxinput1_end_m
SUBROUTINE nl_set_auxinput1_end_s ( id_id , auxinput1_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput1_end_s
  INTEGER id_id
  model_config_rec%auxinput1_end_s(id_id) = auxinput1_end_s
  RETURN
END SUBROUTINE nl_set_auxinput1_end_s
SUBROUTINE nl_set_auxinput1_end ( id_id , auxinput1_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput1_end
  INTEGER id_id
  model_config_rec%auxinput1_end(id_id) = auxinput1_end
  RETURN
END SUBROUTINE nl_set_auxinput1_end
SUBROUTINE nl_set_frames_per_auxinput1 ( id_id , frames_per_auxinput1 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxinput1
  INTEGER id_id
  model_config_rec%frames_per_auxinput1(id_id) = frames_per_auxinput1
  RETURN
END SUBROUTINE nl_set_frames_per_auxinput1
SUBROUTINE nl_set_auxinput2_inname ( id_id , auxinput2_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput2_inname
  INTEGER id_id
  model_config_rec%auxinput2_inname = trim(auxinput2_inname) 
  RETURN
END SUBROUTINE nl_set_auxinput2_inname
SUBROUTINE nl_set_auxinput2_outname ( id_id , auxinput2_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput2_outname
  INTEGER id_id
  model_config_rec%auxinput2_outname = trim(auxinput2_outname) 
  RETURN
END SUBROUTINE nl_set_auxinput2_outname
SUBROUTINE nl_set_auxinput2_interval_y ( id_id , auxinput2_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput2_interval_y
  INTEGER id_id
  model_config_rec%auxinput2_interval_y(id_id) = auxinput2_interval_y
  RETURN
END SUBROUTINE nl_set_auxinput2_interval_y
SUBROUTINE nl_set_auxinput2_interval_d ( id_id , auxinput2_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput2_interval_d
  INTEGER id_id
  model_config_rec%auxinput2_interval_d(id_id) = auxinput2_interval_d
  RETURN
END SUBROUTINE nl_set_auxinput2_interval_d
SUBROUTINE nl_set_auxinput2_interval_h ( id_id , auxinput2_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput2_interval_h
  INTEGER id_id
  model_config_rec%auxinput2_interval_h(id_id) = auxinput2_interval_h
  RETURN
END SUBROUTINE nl_set_auxinput2_interval_h
SUBROUTINE nl_set_auxinput2_interval_m ( id_id , auxinput2_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput2_interval_m
  INTEGER id_id
  model_config_rec%auxinput2_interval_m(id_id) = auxinput2_interval_m
  RETURN
END SUBROUTINE nl_set_auxinput2_interval_m
SUBROUTINE nl_set_auxinput2_interval_s ( id_id , auxinput2_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput2_interval_s
  INTEGER id_id
  model_config_rec%auxinput2_interval_s(id_id) = auxinput2_interval_s
  RETURN
END SUBROUTINE nl_set_auxinput2_interval_s
SUBROUTINE nl_set_auxinput2_interval ( id_id , auxinput2_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput2_interval
  INTEGER id_id
  model_config_rec%auxinput2_interval(id_id) = auxinput2_interval
  RETURN
END SUBROUTINE nl_set_auxinput2_interval
SUBROUTINE nl_set_auxinput2_begin_y ( id_id , auxinput2_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput2_begin_y
  INTEGER id_id
  model_config_rec%auxinput2_begin_y(id_id) = auxinput2_begin_y
  RETURN
END SUBROUTINE nl_set_auxinput2_begin_y
SUBROUTINE nl_set_auxinput2_begin_d ( id_id , auxinput2_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput2_begin_d
  INTEGER id_id
  model_config_rec%auxinput2_begin_d(id_id) = auxinput2_begin_d
  RETURN
END SUBROUTINE nl_set_auxinput2_begin_d
SUBROUTINE nl_set_auxinput2_begin_h ( id_id , auxinput2_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput2_begin_h
  INTEGER id_id
  model_config_rec%auxinput2_begin_h(id_id) = auxinput2_begin_h
  RETURN
END SUBROUTINE nl_set_auxinput2_begin_h
SUBROUTINE nl_set_auxinput2_begin_m ( id_id , auxinput2_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput2_begin_m
  INTEGER id_id
  model_config_rec%auxinput2_begin_m(id_id) = auxinput2_begin_m
  RETURN
END SUBROUTINE nl_set_auxinput2_begin_m
SUBROUTINE nl_set_auxinput2_begin_s ( id_id , auxinput2_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput2_begin_s
  INTEGER id_id
  model_config_rec%auxinput2_begin_s(id_id) = auxinput2_begin_s
  RETURN
END SUBROUTINE nl_set_auxinput2_begin_s
SUBROUTINE nl_set_auxinput2_begin ( id_id , auxinput2_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput2_begin
  INTEGER id_id
  model_config_rec%auxinput2_begin(id_id) = auxinput2_begin
  RETURN
END SUBROUTINE nl_set_auxinput2_begin
SUBROUTINE nl_set_auxinput2_end_y ( id_id , auxinput2_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput2_end_y
  INTEGER id_id
  model_config_rec%auxinput2_end_y(id_id) = auxinput2_end_y
  RETURN
END SUBROUTINE nl_set_auxinput2_end_y
SUBROUTINE nl_set_auxinput2_end_d ( id_id , auxinput2_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput2_end_d
  INTEGER id_id
  model_config_rec%auxinput2_end_d(id_id) = auxinput2_end_d
  RETURN
END SUBROUTINE nl_set_auxinput2_end_d
SUBROUTINE nl_set_auxinput2_end_h ( id_id , auxinput2_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput2_end_h
  INTEGER id_id
  model_config_rec%auxinput2_end_h(id_id) = auxinput2_end_h
  RETURN
END SUBROUTINE nl_set_auxinput2_end_h
SUBROUTINE nl_set_auxinput2_end_m ( id_id , auxinput2_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput2_end_m
  INTEGER id_id
  model_config_rec%auxinput2_end_m(id_id) = auxinput2_end_m
  RETURN
END SUBROUTINE nl_set_auxinput2_end_m
SUBROUTINE nl_set_auxinput2_end_s ( id_id , auxinput2_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput2_end_s
  INTEGER id_id
  model_config_rec%auxinput2_end_s(id_id) = auxinput2_end_s
  RETURN
END SUBROUTINE nl_set_auxinput2_end_s
SUBROUTINE nl_set_auxinput2_end ( id_id , auxinput2_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput2_end
  INTEGER id_id
  model_config_rec%auxinput2_end(id_id) = auxinput2_end
  RETURN
END SUBROUTINE nl_set_auxinput2_end
SUBROUTINE nl_set_io_form_auxinput2 ( id_id , io_form_auxinput2 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxinput2
  INTEGER id_id
  model_config_rec%io_form_auxinput2 = io_form_auxinput2 
  RETURN
END SUBROUTINE nl_set_io_form_auxinput2
SUBROUTINE nl_set_frames_per_auxinput2 ( id_id , frames_per_auxinput2 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxinput2
  INTEGER id_id
  model_config_rec%frames_per_auxinput2(id_id) = frames_per_auxinput2
  RETURN
END SUBROUTINE nl_set_frames_per_auxinput2
SUBROUTINE nl_set_auxinput3_inname ( id_id , auxinput3_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput3_inname
  INTEGER id_id
  model_config_rec%auxinput3_inname = trim(auxinput3_inname) 
  RETURN
END SUBROUTINE nl_set_auxinput3_inname
SUBROUTINE nl_set_auxinput3_outname ( id_id , auxinput3_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput3_outname
  INTEGER id_id
  model_config_rec%auxinput3_outname = trim(auxinput3_outname) 
  RETURN
END SUBROUTINE nl_set_auxinput3_outname
SUBROUTINE nl_set_auxinput3_interval_y ( id_id , auxinput3_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput3_interval_y
  INTEGER id_id
  model_config_rec%auxinput3_interval_y(id_id) = auxinput3_interval_y
  RETURN
END SUBROUTINE nl_set_auxinput3_interval_y
SUBROUTINE nl_set_auxinput3_interval_d ( id_id , auxinput3_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput3_interval_d
  INTEGER id_id
  model_config_rec%auxinput3_interval_d(id_id) = auxinput3_interval_d
  RETURN
END SUBROUTINE nl_set_auxinput3_interval_d
SUBROUTINE nl_set_auxinput3_interval_h ( id_id , auxinput3_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput3_interval_h
  INTEGER id_id
  model_config_rec%auxinput3_interval_h(id_id) = auxinput3_interval_h
  RETURN
END SUBROUTINE nl_set_auxinput3_interval_h
SUBROUTINE nl_set_auxinput3_interval_m ( id_id , auxinput3_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput3_interval_m
  INTEGER id_id
  model_config_rec%auxinput3_interval_m(id_id) = auxinput3_interval_m
  RETURN
END SUBROUTINE nl_set_auxinput3_interval_m
SUBROUTINE nl_set_auxinput3_interval_s ( id_id , auxinput3_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput3_interval_s
  INTEGER id_id
  model_config_rec%auxinput3_interval_s(id_id) = auxinput3_interval_s
  RETURN
END SUBROUTINE nl_set_auxinput3_interval_s
SUBROUTINE nl_set_auxinput3_interval ( id_id , auxinput3_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput3_interval
  INTEGER id_id
  model_config_rec%auxinput3_interval(id_id) = auxinput3_interval
  RETURN
END SUBROUTINE nl_set_auxinput3_interval
SUBROUTINE nl_set_auxinput3_begin_y ( id_id , auxinput3_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput3_begin_y
  INTEGER id_id
  model_config_rec%auxinput3_begin_y(id_id) = auxinput3_begin_y
  RETURN
END SUBROUTINE nl_set_auxinput3_begin_y
SUBROUTINE nl_set_auxinput3_begin_d ( id_id , auxinput3_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput3_begin_d
  INTEGER id_id
  model_config_rec%auxinput3_begin_d(id_id) = auxinput3_begin_d
  RETURN
END SUBROUTINE nl_set_auxinput3_begin_d
SUBROUTINE nl_set_auxinput3_begin_h ( id_id , auxinput3_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput3_begin_h
  INTEGER id_id
  model_config_rec%auxinput3_begin_h(id_id) = auxinput3_begin_h
  RETURN
END SUBROUTINE nl_set_auxinput3_begin_h
SUBROUTINE nl_set_auxinput3_begin_m ( id_id , auxinput3_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput3_begin_m
  INTEGER id_id
  model_config_rec%auxinput3_begin_m(id_id) = auxinput3_begin_m
  RETURN
END SUBROUTINE nl_set_auxinput3_begin_m
SUBROUTINE nl_set_auxinput3_begin_s ( id_id , auxinput3_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput3_begin_s
  INTEGER id_id
  model_config_rec%auxinput3_begin_s(id_id) = auxinput3_begin_s
  RETURN
END SUBROUTINE nl_set_auxinput3_begin_s
SUBROUTINE nl_set_auxinput3_begin ( id_id , auxinput3_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput3_begin
  INTEGER id_id
  model_config_rec%auxinput3_begin(id_id) = auxinput3_begin
  RETURN
END SUBROUTINE nl_set_auxinput3_begin
SUBROUTINE nl_set_auxinput3_end_y ( id_id , auxinput3_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput3_end_y
  INTEGER id_id
  model_config_rec%auxinput3_end_y(id_id) = auxinput3_end_y
  RETURN
END SUBROUTINE nl_set_auxinput3_end_y
SUBROUTINE nl_set_auxinput3_end_d ( id_id , auxinput3_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput3_end_d
  INTEGER id_id
  model_config_rec%auxinput3_end_d(id_id) = auxinput3_end_d
  RETURN
END SUBROUTINE nl_set_auxinput3_end_d
SUBROUTINE nl_set_auxinput3_end_h ( id_id , auxinput3_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput3_end_h
  INTEGER id_id
  model_config_rec%auxinput3_end_h(id_id) = auxinput3_end_h
  RETURN
END SUBROUTINE nl_set_auxinput3_end_h
SUBROUTINE nl_set_auxinput3_end_m ( id_id , auxinput3_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput3_end_m
  INTEGER id_id
  model_config_rec%auxinput3_end_m(id_id) = auxinput3_end_m
  RETURN
END SUBROUTINE nl_set_auxinput3_end_m
SUBROUTINE nl_set_auxinput3_end_s ( id_id , auxinput3_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput3_end_s
  INTEGER id_id
  model_config_rec%auxinput3_end_s(id_id) = auxinput3_end_s
  RETURN
END SUBROUTINE nl_set_auxinput3_end_s
SUBROUTINE nl_set_auxinput3_end ( id_id , auxinput3_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput3_end
  INTEGER id_id
  model_config_rec%auxinput3_end(id_id) = auxinput3_end
  RETURN
END SUBROUTINE nl_set_auxinput3_end
SUBROUTINE nl_set_io_form_auxinput3 ( id_id , io_form_auxinput3 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxinput3
  INTEGER id_id
  model_config_rec%io_form_auxinput3 = io_form_auxinput3 
  RETURN
END SUBROUTINE nl_set_io_form_auxinput3
SUBROUTINE nl_set_frames_per_auxinput3 ( id_id , frames_per_auxinput3 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxinput3
  INTEGER id_id
  model_config_rec%frames_per_auxinput3(id_id) = frames_per_auxinput3
  RETURN
END SUBROUTINE nl_set_frames_per_auxinput3
SUBROUTINE nl_set_auxinput4_inname ( id_id , auxinput4_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput4_inname
  INTEGER id_id
  model_config_rec%auxinput4_inname = trim(auxinput4_inname) 
  RETURN
END SUBROUTINE nl_set_auxinput4_inname
SUBROUTINE nl_set_auxinput4_outname ( id_id , auxinput4_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput4_outname
  INTEGER id_id
  model_config_rec%auxinput4_outname = trim(auxinput4_outname) 
  RETURN
END SUBROUTINE nl_set_auxinput4_outname
SUBROUTINE nl_set_auxinput4_interval_y ( id_id , auxinput4_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput4_interval_y
  INTEGER id_id
  model_config_rec%auxinput4_interval_y(id_id) = auxinput4_interval_y
  RETURN
END SUBROUTINE nl_set_auxinput4_interval_y
SUBROUTINE nl_set_auxinput4_interval_d ( id_id , auxinput4_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput4_interval_d
  INTEGER id_id
  model_config_rec%auxinput4_interval_d(id_id) = auxinput4_interval_d
  RETURN
END SUBROUTINE nl_set_auxinput4_interval_d
SUBROUTINE nl_set_auxinput4_interval_h ( id_id , auxinput4_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput4_interval_h
  INTEGER id_id
  model_config_rec%auxinput4_interval_h(id_id) = auxinput4_interval_h
  RETURN
END SUBROUTINE nl_set_auxinput4_interval_h
SUBROUTINE nl_set_auxinput4_interval_m ( id_id , auxinput4_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput4_interval_m
  INTEGER id_id
  model_config_rec%auxinput4_interval_m(id_id) = auxinput4_interval_m
  RETURN
END SUBROUTINE nl_set_auxinput4_interval_m
SUBROUTINE nl_set_auxinput4_interval_s ( id_id , auxinput4_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput4_interval_s
  INTEGER id_id
  model_config_rec%auxinput4_interval_s(id_id) = auxinput4_interval_s
  RETURN
END SUBROUTINE nl_set_auxinput4_interval_s
SUBROUTINE nl_set_auxinput4_interval ( id_id , auxinput4_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput4_interval
  INTEGER id_id
  model_config_rec%auxinput4_interval(id_id) = auxinput4_interval
  RETURN
END SUBROUTINE nl_set_auxinput4_interval
SUBROUTINE nl_set_auxinput4_begin_y ( id_id , auxinput4_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput4_begin_y
  INTEGER id_id
  model_config_rec%auxinput4_begin_y(id_id) = auxinput4_begin_y
  RETURN
END SUBROUTINE nl_set_auxinput4_begin_y
SUBROUTINE nl_set_auxinput4_begin_d ( id_id , auxinput4_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput4_begin_d
  INTEGER id_id
  model_config_rec%auxinput4_begin_d(id_id) = auxinput4_begin_d
  RETURN
END SUBROUTINE nl_set_auxinput4_begin_d
SUBROUTINE nl_set_auxinput4_begin_h ( id_id , auxinput4_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput4_begin_h
  INTEGER id_id
  model_config_rec%auxinput4_begin_h(id_id) = auxinput4_begin_h
  RETURN
END SUBROUTINE nl_set_auxinput4_begin_h
SUBROUTINE nl_set_auxinput4_begin_m ( id_id , auxinput4_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput4_begin_m
  INTEGER id_id
  model_config_rec%auxinput4_begin_m(id_id) = auxinput4_begin_m
  RETURN
END SUBROUTINE nl_set_auxinput4_begin_m
SUBROUTINE nl_set_auxinput4_begin_s ( id_id , auxinput4_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput4_begin_s
  INTEGER id_id
  model_config_rec%auxinput4_begin_s(id_id) = auxinput4_begin_s
  RETURN
END SUBROUTINE nl_set_auxinput4_begin_s
SUBROUTINE nl_set_auxinput4_begin ( id_id , auxinput4_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput4_begin
  INTEGER id_id
  model_config_rec%auxinput4_begin(id_id) = auxinput4_begin
  RETURN
END SUBROUTINE nl_set_auxinput4_begin
SUBROUTINE nl_set_auxinput4_end_y ( id_id , auxinput4_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput4_end_y
  INTEGER id_id
  model_config_rec%auxinput4_end_y(id_id) = auxinput4_end_y
  RETURN
END SUBROUTINE nl_set_auxinput4_end_y
SUBROUTINE nl_set_auxinput4_end_d ( id_id , auxinput4_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput4_end_d
  INTEGER id_id
  model_config_rec%auxinput4_end_d(id_id) = auxinput4_end_d
  RETURN
END SUBROUTINE nl_set_auxinput4_end_d
SUBROUTINE nl_set_auxinput4_end_h ( id_id , auxinput4_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput4_end_h
  INTEGER id_id
  model_config_rec%auxinput4_end_h(id_id) = auxinput4_end_h
  RETURN
END SUBROUTINE nl_set_auxinput4_end_h
SUBROUTINE nl_set_auxinput4_end_m ( id_id , auxinput4_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput4_end_m
  INTEGER id_id
  model_config_rec%auxinput4_end_m(id_id) = auxinput4_end_m
  RETURN
END SUBROUTINE nl_set_auxinput4_end_m
SUBROUTINE nl_set_auxinput4_end_s ( id_id , auxinput4_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput4_end_s
  INTEGER id_id
  model_config_rec%auxinput4_end_s(id_id) = auxinput4_end_s
  RETURN
END SUBROUTINE nl_set_auxinput4_end_s
SUBROUTINE nl_set_auxinput4_end ( id_id , auxinput4_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput4_end
  INTEGER id_id
  model_config_rec%auxinput4_end(id_id) = auxinput4_end
  RETURN
END SUBROUTINE nl_set_auxinput4_end
SUBROUTINE nl_set_io_form_auxinput4 ( id_id , io_form_auxinput4 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxinput4
  INTEGER id_id
  model_config_rec%io_form_auxinput4 = io_form_auxinput4 
  RETURN
END SUBROUTINE nl_set_io_form_auxinput4
SUBROUTINE nl_set_frames_per_auxinput4 ( id_id , frames_per_auxinput4 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxinput4
  INTEGER id_id
  model_config_rec%frames_per_auxinput4(id_id) = frames_per_auxinput4
  RETURN
END SUBROUTINE nl_set_frames_per_auxinput4
SUBROUTINE nl_set_auxinput5_inname ( id_id , auxinput5_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput5_inname
  INTEGER id_id
  model_config_rec%auxinput5_inname = trim(auxinput5_inname) 
  RETURN
END SUBROUTINE nl_set_auxinput5_inname
SUBROUTINE nl_set_auxinput5_outname ( id_id , auxinput5_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput5_outname
  INTEGER id_id
  model_config_rec%auxinput5_outname = trim(auxinput5_outname) 
  RETURN
END SUBROUTINE nl_set_auxinput5_outname
SUBROUTINE nl_set_auxinput5_interval_y ( id_id , auxinput5_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput5_interval_y
  INTEGER id_id
  model_config_rec%auxinput5_interval_y(id_id) = auxinput5_interval_y
  RETURN
END SUBROUTINE nl_set_auxinput5_interval_y
SUBROUTINE nl_set_auxinput5_interval_d ( id_id , auxinput5_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput5_interval_d
  INTEGER id_id
  model_config_rec%auxinput5_interval_d(id_id) = auxinput5_interval_d
  RETURN
END SUBROUTINE nl_set_auxinput5_interval_d
SUBROUTINE nl_set_auxinput5_interval_h ( id_id , auxinput5_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput5_interval_h
  INTEGER id_id
  model_config_rec%auxinput5_interval_h(id_id) = auxinput5_interval_h
  RETURN
END SUBROUTINE nl_set_auxinput5_interval_h
SUBROUTINE nl_set_auxinput5_interval_m ( id_id , auxinput5_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput5_interval_m
  INTEGER id_id
  model_config_rec%auxinput5_interval_m(id_id) = auxinput5_interval_m
  RETURN
END SUBROUTINE nl_set_auxinput5_interval_m
SUBROUTINE nl_set_auxinput5_interval_s ( id_id , auxinput5_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput5_interval_s
  INTEGER id_id
  model_config_rec%auxinput5_interval_s(id_id) = auxinput5_interval_s
  RETURN
END SUBROUTINE nl_set_auxinput5_interval_s
SUBROUTINE nl_set_auxinput5_interval ( id_id , auxinput5_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput5_interval
  INTEGER id_id
  model_config_rec%auxinput5_interval(id_id) = auxinput5_interval
  RETURN
END SUBROUTINE nl_set_auxinput5_interval
SUBROUTINE nl_set_auxinput5_begin_y ( id_id , auxinput5_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput5_begin_y
  INTEGER id_id
  model_config_rec%auxinput5_begin_y(id_id) = auxinput5_begin_y
  RETURN
END SUBROUTINE nl_set_auxinput5_begin_y
SUBROUTINE nl_set_auxinput5_begin_d ( id_id , auxinput5_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput5_begin_d
  INTEGER id_id
  model_config_rec%auxinput5_begin_d(id_id) = auxinput5_begin_d
  RETURN
END SUBROUTINE nl_set_auxinput5_begin_d
SUBROUTINE nl_set_auxinput5_begin_h ( id_id , auxinput5_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput5_begin_h
  INTEGER id_id
  model_config_rec%auxinput5_begin_h(id_id) = auxinput5_begin_h
  RETURN
END SUBROUTINE nl_set_auxinput5_begin_h
SUBROUTINE nl_set_auxinput5_begin_m ( id_id , auxinput5_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput5_begin_m
  INTEGER id_id
  model_config_rec%auxinput5_begin_m(id_id) = auxinput5_begin_m
  RETURN
END SUBROUTINE nl_set_auxinput5_begin_m
SUBROUTINE nl_set_auxinput5_begin_s ( id_id , auxinput5_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput5_begin_s
  INTEGER id_id
  model_config_rec%auxinput5_begin_s(id_id) = auxinput5_begin_s
  RETURN
END SUBROUTINE nl_set_auxinput5_begin_s
SUBROUTINE nl_set_auxinput5_begin ( id_id , auxinput5_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput5_begin
  INTEGER id_id
  model_config_rec%auxinput5_begin(id_id) = auxinput5_begin
  RETURN
END SUBROUTINE nl_set_auxinput5_begin
SUBROUTINE nl_set_auxinput5_end_y ( id_id , auxinput5_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput5_end_y
  INTEGER id_id
  model_config_rec%auxinput5_end_y(id_id) = auxinput5_end_y
  RETURN
END SUBROUTINE nl_set_auxinput5_end_y
SUBROUTINE nl_set_auxinput5_end_d ( id_id , auxinput5_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput5_end_d
  INTEGER id_id
  model_config_rec%auxinput5_end_d(id_id) = auxinput5_end_d
  RETURN
END SUBROUTINE nl_set_auxinput5_end_d
SUBROUTINE nl_set_auxinput5_end_h ( id_id , auxinput5_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput5_end_h
  INTEGER id_id
  model_config_rec%auxinput5_end_h(id_id) = auxinput5_end_h
  RETURN
END SUBROUTINE nl_set_auxinput5_end_h
SUBROUTINE nl_set_auxinput5_end_m ( id_id , auxinput5_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput5_end_m
  INTEGER id_id
  model_config_rec%auxinput5_end_m(id_id) = auxinput5_end_m
  RETURN
END SUBROUTINE nl_set_auxinput5_end_m
SUBROUTINE nl_set_auxinput5_end_s ( id_id , auxinput5_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput5_end_s
  INTEGER id_id
  model_config_rec%auxinput5_end_s(id_id) = auxinput5_end_s
  RETURN
END SUBROUTINE nl_set_auxinput5_end_s
SUBROUTINE nl_set_auxinput5_end ( id_id , auxinput5_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput5_end
  INTEGER id_id
  model_config_rec%auxinput5_end(id_id) = auxinput5_end
  RETURN
END SUBROUTINE nl_set_auxinput5_end
#endif
#if (NNN == 5)
SUBROUTINE nl_set_io_form_auxinput5 ( id_id , io_form_auxinput5 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxinput5
  INTEGER id_id
  model_config_rec%io_form_auxinput5 = io_form_auxinput5 
  RETURN
END SUBROUTINE nl_set_io_form_auxinput5
SUBROUTINE nl_set_frames_per_auxinput5 ( id_id , frames_per_auxinput5 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxinput5
  INTEGER id_id
  model_config_rec%frames_per_auxinput5(id_id) = frames_per_auxinput5
  RETURN
END SUBROUTINE nl_set_frames_per_auxinput5
SUBROUTINE nl_set_auxinput6_inname ( id_id , auxinput6_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput6_inname
  INTEGER id_id
  model_config_rec%auxinput6_inname = trim(auxinput6_inname) 
  RETURN
END SUBROUTINE nl_set_auxinput6_inname
SUBROUTINE nl_set_auxinput6_outname ( id_id , auxinput6_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput6_outname
  INTEGER id_id
  model_config_rec%auxinput6_outname = trim(auxinput6_outname) 
  RETURN
END SUBROUTINE nl_set_auxinput6_outname
SUBROUTINE nl_set_auxinput6_interval_y ( id_id , auxinput6_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput6_interval_y
  INTEGER id_id
  model_config_rec%auxinput6_interval_y(id_id) = auxinput6_interval_y
  RETURN
END SUBROUTINE nl_set_auxinput6_interval_y
SUBROUTINE nl_set_auxinput6_interval_d ( id_id , auxinput6_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput6_interval_d
  INTEGER id_id
  model_config_rec%auxinput6_interval_d(id_id) = auxinput6_interval_d
  RETURN
END SUBROUTINE nl_set_auxinput6_interval_d
SUBROUTINE nl_set_auxinput6_interval_h ( id_id , auxinput6_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput6_interval_h
  INTEGER id_id
  model_config_rec%auxinput6_interval_h(id_id) = auxinput6_interval_h
  RETURN
END SUBROUTINE nl_set_auxinput6_interval_h
SUBROUTINE nl_set_auxinput6_interval_m ( id_id , auxinput6_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput6_interval_m
  INTEGER id_id
  model_config_rec%auxinput6_interval_m(id_id) = auxinput6_interval_m
  RETURN
END SUBROUTINE nl_set_auxinput6_interval_m
SUBROUTINE nl_set_auxinput6_interval_s ( id_id , auxinput6_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput6_interval_s
  INTEGER id_id
  model_config_rec%auxinput6_interval_s(id_id) = auxinput6_interval_s
  RETURN
END SUBROUTINE nl_set_auxinput6_interval_s
SUBROUTINE nl_set_auxinput6_interval ( id_id , auxinput6_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput6_interval
  INTEGER id_id
  model_config_rec%auxinput6_interval(id_id) = auxinput6_interval
  RETURN
END SUBROUTINE nl_set_auxinput6_interval
SUBROUTINE nl_set_auxinput6_begin_y ( id_id , auxinput6_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput6_begin_y
  INTEGER id_id
  model_config_rec%auxinput6_begin_y(id_id) = auxinput6_begin_y
  RETURN
END SUBROUTINE nl_set_auxinput6_begin_y
SUBROUTINE nl_set_auxinput6_begin_d ( id_id , auxinput6_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput6_begin_d
  INTEGER id_id
  model_config_rec%auxinput6_begin_d(id_id) = auxinput6_begin_d
  RETURN
END SUBROUTINE nl_set_auxinput6_begin_d
SUBROUTINE nl_set_auxinput6_begin_h ( id_id , auxinput6_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput6_begin_h
  INTEGER id_id
  model_config_rec%auxinput6_begin_h(id_id) = auxinput6_begin_h
  RETURN
END SUBROUTINE nl_set_auxinput6_begin_h
SUBROUTINE nl_set_auxinput6_begin_m ( id_id , auxinput6_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput6_begin_m
  INTEGER id_id
  model_config_rec%auxinput6_begin_m(id_id) = auxinput6_begin_m
  RETURN
END SUBROUTINE nl_set_auxinput6_begin_m
SUBROUTINE nl_set_auxinput6_begin_s ( id_id , auxinput6_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput6_begin_s
  INTEGER id_id
  model_config_rec%auxinput6_begin_s(id_id) = auxinput6_begin_s
  RETURN
END SUBROUTINE nl_set_auxinput6_begin_s
SUBROUTINE nl_set_auxinput6_begin ( id_id , auxinput6_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput6_begin
  INTEGER id_id
  model_config_rec%auxinput6_begin(id_id) = auxinput6_begin
  RETURN
END SUBROUTINE nl_set_auxinput6_begin
SUBROUTINE nl_set_auxinput6_end_y ( id_id , auxinput6_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput6_end_y
  INTEGER id_id
  model_config_rec%auxinput6_end_y(id_id) = auxinput6_end_y
  RETURN
END SUBROUTINE nl_set_auxinput6_end_y
SUBROUTINE nl_set_auxinput6_end_d ( id_id , auxinput6_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput6_end_d
  INTEGER id_id
  model_config_rec%auxinput6_end_d(id_id) = auxinput6_end_d
  RETURN
END SUBROUTINE nl_set_auxinput6_end_d
SUBROUTINE nl_set_auxinput6_end_h ( id_id , auxinput6_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput6_end_h
  INTEGER id_id
  model_config_rec%auxinput6_end_h(id_id) = auxinput6_end_h
  RETURN
END SUBROUTINE nl_set_auxinput6_end_h
SUBROUTINE nl_set_auxinput6_end_m ( id_id , auxinput6_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput6_end_m
  INTEGER id_id
  model_config_rec%auxinput6_end_m(id_id) = auxinput6_end_m
  RETURN
END SUBROUTINE nl_set_auxinput6_end_m
SUBROUTINE nl_set_auxinput6_end_s ( id_id , auxinput6_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput6_end_s
  INTEGER id_id
  model_config_rec%auxinput6_end_s(id_id) = auxinput6_end_s
  RETURN
END SUBROUTINE nl_set_auxinput6_end_s
SUBROUTINE nl_set_auxinput6_end ( id_id , auxinput6_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput6_end
  INTEGER id_id
  model_config_rec%auxinput6_end(id_id) = auxinput6_end
  RETURN
END SUBROUTINE nl_set_auxinput6_end
SUBROUTINE nl_set_io_form_auxinput6 ( id_id , io_form_auxinput6 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxinput6
  INTEGER id_id
  model_config_rec%io_form_auxinput6 = io_form_auxinput6 
  RETURN
END SUBROUTINE nl_set_io_form_auxinput6
SUBROUTINE nl_set_frames_per_auxinput6 ( id_id , frames_per_auxinput6 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxinput6
  INTEGER id_id
  model_config_rec%frames_per_auxinput6(id_id) = frames_per_auxinput6
  RETURN
END SUBROUTINE nl_set_frames_per_auxinput6
SUBROUTINE nl_set_auxinput7_inname ( id_id , auxinput7_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput7_inname
  INTEGER id_id
  model_config_rec%auxinput7_inname = trim(auxinput7_inname) 
  RETURN
END SUBROUTINE nl_set_auxinput7_inname
SUBROUTINE nl_set_auxinput7_outname ( id_id , auxinput7_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput7_outname
  INTEGER id_id
  model_config_rec%auxinput7_outname = trim(auxinput7_outname) 
  RETURN
END SUBROUTINE nl_set_auxinput7_outname
SUBROUTINE nl_set_auxinput7_interval_y ( id_id , auxinput7_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput7_interval_y
  INTEGER id_id
  model_config_rec%auxinput7_interval_y(id_id) = auxinput7_interval_y
  RETURN
END SUBROUTINE nl_set_auxinput7_interval_y
SUBROUTINE nl_set_auxinput7_interval_d ( id_id , auxinput7_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput7_interval_d
  INTEGER id_id
  model_config_rec%auxinput7_interval_d(id_id) = auxinput7_interval_d
  RETURN
END SUBROUTINE nl_set_auxinput7_interval_d
SUBROUTINE nl_set_auxinput7_interval_h ( id_id , auxinput7_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput7_interval_h
  INTEGER id_id
  model_config_rec%auxinput7_interval_h(id_id) = auxinput7_interval_h
  RETURN
END SUBROUTINE nl_set_auxinput7_interval_h
SUBROUTINE nl_set_auxinput7_interval_m ( id_id , auxinput7_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput7_interval_m
  INTEGER id_id
  model_config_rec%auxinput7_interval_m(id_id) = auxinput7_interval_m
  RETURN
END SUBROUTINE nl_set_auxinput7_interval_m
SUBROUTINE nl_set_auxinput7_interval_s ( id_id , auxinput7_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput7_interval_s
  INTEGER id_id
  model_config_rec%auxinput7_interval_s(id_id) = auxinput7_interval_s
  RETURN
END SUBROUTINE nl_set_auxinput7_interval_s
SUBROUTINE nl_set_auxinput7_interval ( id_id , auxinput7_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput7_interval
  INTEGER id_id
  model_config_rec%auxinput7_interval(id_id) = auxinput7_interval
  RETURN
END SUBROUTINE nl_set_auxinput7_interval
SUBROUTINE nl_set_auxinput7_begin_y ( id_id , auxinput7_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput7_begin_y
  INTEGER id_id
  model_config_rec%auxinput7_begin_y(id_id) = auxinput7_begin_y
  RETURN
END SUBROUTINE nl_set_auxinput7_begin_y
SUBROUTINE nl_set_auxinput7_begin_d ( id_id , auxinput7_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput7_begin_d
  INTEGER id_id
  model_config_rec%auxinput7_begin_d(id_id) = auxinput7_begin_d
  RETURN
END SUBROUTINE nl_set_auxinput7_begin_d
SUBROUTINE nl_set_auxinput7_begin_h ( id_id , auxinput7_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput7_begin_h
  INTEGER id_id
  model_config_rec%auxinput7_begin_h(id_id) = auxinput7_begin_h
  RETURN
END SUBROUTINE nl_set_auxinput7_begin_h
SUBROUTINE nl_set_auxinput7_begin_m ( id_id , auxinput7_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput7_begin_m
  INTEGER id_id
  model_config_rec%auxinput7_begin_m(id_id) = auxinput7_begin_m
  RETURN
END SUBROUTINE nl_set_auxinput7_begin_m
SUBROUTINE nl_set_auxinput7_begin_s ( id_id , auxinput7_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput7_begin_s
  INTEGER id_id
  model_config_rec%auxinput7_begin_s(id_id) = auxinput7_begin_s
  RETURN
END SUBROUTINE nl_set_auxinput7_begin_s
SUBROUTINE nl_set_auxinput7_begin ( id_id , auxinput7_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput7_begin
  INTEGER id_id
  model_config_rec%auxinput7_begin(id_id) = auxinput7_begin
  RETURN
END SUBROUTINE nl_set_auxinput7_begin
SUBROUTINE nl_set_auxinput7_end_y ( id_id , auxinput7_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput7_end_y
  INTEGER id_id
  model_config_rec%auxinput7_end_y(id_id) = auxinput7_end_y
  RETURN
END SUBROUTINE nl_set_auxinput7_end_y
SUBROUTINE nl_set_auxinput7_end_d ( id_id , auxinput7_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput7_end_d
  INTEGER id_id
  model_config_rec%auxinput7_end_d(id_id) = auxinput7_end_d
  RETURN
END SUBROUTINE nl_set_auxinput7_end_d
SUBROUTINE nl_set_auxinput7_end_h ( id_id , auxinput7_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput7_end_h
  INTEGER id_id
  model_config_rec%auxinput7_end_h(id_id) = auxinput7_end_h
  RETURN
END SUBROUTINE nl_set_auxinput7_end_h
SUBROUTINE nl_set_auxinput7_end_m ( id_id , auxinput7_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput7_end_m
  INTEGER id_id
  model_config_rec%auxinput7_end_m(id_id) = auxinput7_end_m
  RETURN
END SUBROUTINE nl_set_auxinput7_end_m
SUBROUTINE nl_set_auxinput7_end_s ( id_id , auxinput7_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput7_end_s
  INTEGER id_id
  model_config_rec%auxinput7_end_s(id_id) = auxinput7_end_s
  RETURN
END SUBROUTINE nl_set_auxinput7_end_s
SUBROUTINE nl_set_auxinput7_end ( id_id , auxinput7_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput7_end
  INTEGER id_id
  model_config_rec%auxinput7_end(id_id) = auxinput7_end
  RETURN
END SUBROUTINE nl_set_auxinput7_end
SUBROUTINE nl_set_io_form_auxinput7 ( id_id , io_form_auxinput7 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxinput7
  INTEGER id_id
  model_config_rec%io_form_auxinput7 = io_form_auxinput7 
  RETURN
END SUBROUTINE nl_set_io_form_auxinput7
SUBROUTINE nl_set_frames_per_auxinput7 ( id_id , frames_per_auxinput7 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxinput7
  INTEGER id_id
  model_config_rec%frames_per_auxinput7(id_id) = frames_per_auxinput7
  RETURN
END SUBROUTINE nl_set_frames_per_auxinput7
SUBROUTINE nl_set_auxinput8_inname ( id_id , auxinput8_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput8_inname
  INTEGER id_id
  model_config_rec%auxinput8_inname = trim(auxinput8_inname) 
  RETURN
END SUBROUTINE nl_set_auxinput8_inname
SUBROUTINE nl_set_auxinput8_outname ( id_id , auxinput8_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput8_outname
  INTEGER id_id
  model_config_rec%auxinput8_outname = trim(auxinput8_outname) 
  RETURN
END SUBROUTINE nl_set_auxinput8_outname
SUBROUTINE nl_set_auxinput8_interval_y ( id_id , auxinput8_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput8_interval_y
  INTEGER id_id
  model_config_rec%auxinput8_interval_y(id_id) = auxinput8_interval_y
  RETURN
END SUBROUTINE nl_set_auxinput8_interval_y
SUBROUTINE nl_set_auxinput8_interval_d ( id_id , auxinput8_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput8_interval_d
  INTEGER id_id
  model_config_rec%auxinput8_interval_d(id_id) = auxinput8_interval_d
  RETURN
END SUBROUTINE nl_set_auxinput8_interval_d
SUBROUTINE nl_set_auxinput8_interval_h ( id_id , auxinput8_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput8_interval_h
  INTEGER id_id
  model_config_rec%auxinput8_interval_h(id_id) = auxinput8_interval_h
  RETURN
END SUBROUTINE nl_set_auxinput8_interval_h
SUBROUTINE nl_set_auxinput8_interval_m ( id_id , auxinput8_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput8_interval_m
  INTEGER id_id
  model_config_rec%auxinput8_interval_m(id_id) = auxinput8_interval_m
  RETURN
END SUBROUTINE nl_set_auxinput8_interval_m
SUBROUTINE nl_set_auxinput8_interval_s ( id_id , auxinput8_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput8_interval_s
  INTEGER id_id
  model_config_rec%auxinput8_interval_s(id_id) = auxinput8_interval_s
  RETURN
END SUBROUTINE nl_set_auxinput8_interval_s
SUBROUTINE nl_set_auxinput8_interval ( id_id , auxinput8_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput8_interval
  INTEGER id_id
  model_config_rec%auxinput8_interval(id_id) = auxinput8_interval
  RETURN
END SUBROUTINE nl_set_auxinput8_interval
SUBROUTINE nl_set_auxinput8_begin_y ( id_id , auxinput8_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput8_begin_y
  INTEGER id_id
  model_config_rec%auxinput8_begin_y(id_id) = auxinput8_begin_y
  RETURN
END SUBROUTINE nl_set_auxinput8_begin_y
SUBROUTINE nl_set_auxinput8_begin_d ( id_id , auxinput8_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput8_begin_d
  INTEGER id_id
  model_config_rec%auxinput8_begin_d(id_id) = auxinput8_begin_d
  RETURN
END SUBROUTINE nl_set_auxinput8_begin_d
SUBROUTINE nl_set_auxinput8_begin_h ( id_id , auxinput8_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput8_begin_h
  INTEGER id_id
  model_config_rec%auxinput8_begin_h(id_id) = auxinput8_begin_h
  RETURN
END SUBROUTINE nl_set_auxinput8_begin_h
SUBROUTINE nl_set_auxinput8_begin_m ( id_id , auxinput8_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput8_begin_m
  INTEGER id_id
  model_config_rec%auxinput8_begin_m(id_id) = auxinput8_begin_m
  RETURN
END SUBROUTINE nl_set_auxinput8_begin_m
SUBROUTINE nl_set_auxinput8_begin_s ( id_id , auxinput8_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput8_begin_s
  INTEGER id_id
  model_config_rec%auxinput8_begin_s(id_id) = auxinput8_begin_s
  RETURN
END SUBROUTINE nl_set_auxinput8_begin_s
SUBROUTINE nl_set_auxinput8_begin ( id_id , auxinput8_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput8_begin
  INTEGER id_id
  model_config_rec%auxinput8_begin(id_id) = auxinput8_begin
  RETURN
END SUBROUTINE nl_set_auxinput8_begin
SUBROUTINE nl_set_auxinput8_end_y ( id_id , auxinput8_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput8_end_y
  INTEGER id_id
  model_config_rec%auxinput8_end_y(id_id) = auxinput8_end_y
  RETURN
END SUBROUTINE nl_set_auxinput8_end_y
SUBROUTINE nl_set_auxinput8_end_d ( id_id , auxinput8_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput8_end_d
  INTEGER id_id
  model_config_rec%auxinput8_end_d(id_id) = auxinput8_end_d
  RETURN
END SUBROUTINE nl_set_auxinput8_end_d
SUBROUTINE nl_set_auxinput8_end_h ( id_id , auxinput8_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput8_end_h
  INTEGER id_id
  model_config_rec%auxinput8_end_h(id_id) = auxinput8_end_h
  RETURN
END SUBROUTINE nl_set_auxinput8_end_h
SUBROUTINE nl_set_auxinput8_end_m ( id_id , auxinput8_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput8_end_m
  INTEGER id_id
  model_config_rec%auxinput8_end_m(id_id) = auxinput8_end_m
  RETURN
END SUBROUTINE nl_set_auxinput8_end_m
SUBROUTINE nl_set_auxinput8_end_s ( id_id , auxinput8_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput8_end_s
  INTEGER id_id
  model_config_rec%auxinput8_end_s(id_id) = auxinput8_end_s
  RETURN
END SUBROUTINE nl_set_auxinput8_end_s
SUBROUTINE nl_set_auxinput8_end ( id_id , auxinput8_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput8_end
  INTEGER id_id
  model_config_rec%auxinput8_end(id_id) = auxinput8_end
  RETURN
END SUBROUTINE nl_set_auxinput8_end
SUBROUTINE nl_set_io_form_auxinput8 ( id_id , io_form_auxinput8 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxinput8
  INTEGER id_id
  model_config_rec%io_form_auxinput8 = io_form_auxinput8 
  RETURN
END SUBROUTINE nl_set_io_form_auxinput8
SUBROUTINE nl_set_frames_per_auxinput8 ( id_id , frames_per_auxinput8 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxinput8
  INTEGER id_id
  model_config_rec%frames_per_auxinput8(id_id) = frames_per_auxinput8
  RETURN
END SUBROUTINE nl_set_frames_per_auxinput8
SUBROUTINE nl_set_auxinput9_inname ( id_id , auxinput9_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput9_inname
  INTEGER id_id
  model_config_rec%auxinput9_inname = trim(auxinput9_inname) 
  RETURN
END SUBROUTINE nl_set_auxinput9_inname
SUBROUTINE nl_set_auxinput9_outname ( id_id , auxinput9_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput9_outname
  INTEGER id_id
  model_config_rec%auxinput9_outname = trim(auxinput9_outname) 
  RETURN
END SUBROUTINE nl_set_auxinput9_outname
SUBROUTINE nl_set_auxinput9_interval_y ( id_id , auxinput9_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput9_interval_y
  INTEGER id_id
  model_config_rec%auxinput9_interval_y(id_id) = auxinput9_interval_y
  RETURN
END SUBROUTINE nl_set_auxinput9_interval_y
SUBROUTINE nl_set_auxinput9_interval_d ( id_id , auxinput9_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput9_interval_d
  INTEGER id_id
  model_config_rec%auxinput9_interval_d(id_id) = auxinput9_interval_d
  RETURN
END SUBROUTINE nl_set_auxinput9_interval_d
SUBROUTINE nl_set_auxinput9_interval_h ( id_id , auxinput9_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput9_interval_h
  INTEGER id_id
  model_config_rec%auxinput9_interval_h(id_id) = auxinput9_interval_h
  RETURN
END SUBROUTINE nl_set_auxinput9_interval_h
SUBROUTINE nl_set_auxinput9_interval_m ( id_id , auxinput9_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput9_interval_m
  INTEGER id_id
  model_config_rec%auxinput9_interval_m(id_id) = auxinput9_interval_m
  RETURN
END SUBROUTINE nl_set_auxinput9_interval_m
SUBROUTINE nl_set_auxinput9_interval_s ( id_id , auxinput9_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput9_interval_s
  INTEGER id_id
  model_config_rec%auxinput9_interval_s(id_id) = auxinput9_interval_s
  RETURN
END SUBROUTINE nl_set_auxinput9_interval_s
SUBROUTINE nl_set_auxinput9_interval ( id_id , auxinput9_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput9_interval
  INTEGER id_id
  model_config_rec%auxinput9_interval(id_id) = auxinput9_interval
  RETURN
END SUBROUTINE nl_set_auxinput9_interval
SUBROUTINE nl_set_auxinput9_begin_y ( id_id , auxinput9_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput9_begin_y
  INTEGER id_id
  model_config_rec%auxinput9_begin_y(id_id) = auxinput9_begin_y
  RETURN
END SUBROUTINE nl_set_auxinput9_begin_y
SUBROUTINE nl_set_auxinput9_begin_d ( id_id , auxinput9_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput9_begin_d
  INTEGER id_id
  model_config_rec%auxinput9_begin_d(id_id) = auxinput9_begin_d
  RETURN
END SUBROUTINE nl_set_auxinput9_begin_d
SUBROUTINE nl_set_auxinput9_begin_h ( id_id , auxinput9_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput9_begin_h
  INTEGER id_id
  model_config_rec%auxinput9_begin_h(id_id) = auxinput9_begin_h
  RETURN
END SUBROUTINE nl_set_auxinput9_begin_h
SUBROUTINE nl_set_auxinput9_begin_m ( id_id , auxinput9_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput9_begin_m
  INTEGER id_id
  model_config_rec%auxinput9_begin_m(id_id) = auxinput9_begin_m
  RETURN
END SUBROUTINE nl_set_auxinput9_begin_m
SUBROUTINE nl_set_auxinput9_begin_s ( id_id , auxinput9_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput9_begin_s
  INTEGER id_id
  model_config_rec%auxinput9_begin_s(id_id) = auxinput9_begin_s
  RETURN
END SUBROUTINE nl_set_auxinput9_begin_s
SUBROUTINE nl_set_auxinput9_begin ( id_id , auxinput9_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput9_begin
  INTEGER id_id
  model_config_rec%auxinput9_begin(id_id) = auxinput9_begin
  RETURN
END SUBROUTINE nl_set_auxinput9_begin
SUBROUTINE nl_set_auxinput9_end_y ( id_id , auxinput9_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput9_end_y
  INTEGER id_id
  model_config_rec%auxinput9_end_y(id_id) = auxinput9_end_y
  RETURN
END SUBROUTINE nl_set_auxinput9_end_y
SUBROUTINE nl_set_auxinput9_end_d ( id_id , auxinput9_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput9_end_d
  INTEGER id_id
  model_config_rec%auxinput9_end_d(id_id) = auxinput9_end_d
  RETURN
END SUBROUTINE nl_set_auxinput9_end_d
SUBROUTINE nl_set_auxinput9_end_h ( id_id , auxinput9_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput9_end_h
  INTEGER id_id
  model_config_rec%auxinput9_end_h(id_id) = auxinput9_end_h
  RETURN
END SUBROUTINE nl_set_auxinput9_end_h
SUBROUTINE nl_set_auxinput9_end_m ( id_id , auxinput9_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput9_end_m
  INTEGER id_id
  model_config_rec%auxinput9_end_m(id_id) = auxinput9_end_m
  RETURN
END SUBROUTINE nl_set_auxinput9_end_m
SUBROUTINE nl_set_auxinput9_end_s ( id_id , auxinput9_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput9_end_s
  INTEGER id_id
  model_config_rec%auxinput9_end_s(id_id) = auxinput9_end_s
  RETURN
END SUBROUTINE nl_set_auxinput9_end_s
SUBROUTINE nl_set_auxinput9_end ( id_id , auxinput9_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput9_end
  INTEGER id_id
  model_config_rec%auxinput9_end(id_id) = auxinput9_end
  RETURN
END SUBROUTINE nl_set_auxinput9_end
SUBROUTINE nl_set_io_form_auxinput9 ( id_id , io_form_auxinput9 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxinput9
  INTEGER id_id
  model_config_rec%io_form_auxinput9 = io_form_auxinput9 
  RETURN
END SUBROUTINE nl_set_io_form_auxinput9
SUBROUTINE nl_set_frames_per_auxinput9 ( id_id , frames_per_auxinput9 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxinput9
  INTEGER id_id
  model_config_rec%frames_per_auxinput9(id_id) = frames_per_auxinput9
  RETURN
END SUBROUTINE nl_set_frames_per_auxinput9
SUBROUTINE nl_set_auxinput10_inname ( id_id , auxinput10_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput10_inname
  INTEGER id_id
  model_config_rec%auxinput10_inname = trim(auxinput10_inname) 
  RETURN
END SUBROUTINE nl_set_auxinput10_inname
SUBROUTINE nl_set_auxinput10_outname ( id_id , auxinput10_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput10_outname
  INTEGER id_id
  model_config_rec%auxinput10_outname = trim(auxinput10_outname) 
  RETURN
END SUBROUTINE nl_set_auxinput10_outname
SUBROUTINE nl_set_auxinput10_interval_y ( id_id , auxinput10_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput10_interval_y
  INTEGER id_id
  model_config_rec%auxinput10_interval_y(id_id) = auxinput10_interval_y
  RETURN
END SUBROUTINE nl_set_auxinput10_interval_y
SUBROUTINE nl_set_auxinput10_interval_d ( id_id , auxinput10_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput10_interval_d
  INTEGER id_id
  model_config_rec%auxinput10_interval_d(id_id) = auxinput10_interval_d
  RETURN
END SUBROUTINE nl_set_auxinput10_interval_d
SUBROUTINE nl_set_auxinput10_interval_h ( id_id , auxinput10_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput10_interval_h
  INTEGER id_id
  model_config_rec%auxinput10_interval_h(id_id) = auxinput10_interval_h
  RETURN
END SUBROUTINE nl_set_auxinput10_interval_h
SUBROUTINE nl_set_auxinput10_interval_m ( id_id , auxinput10_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput10_interval_m
  INTEGER id_id
  model_config_rec%auxinput10_interval_m(id_id) = auxinput10_interval_m
  RETURN
END SUBROUTINE nl_set_auxinput10_interval_m
SUBROUTINE nl_set_auxinput10_interval_s ( id_id , auxinput10_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput10_interval_s
  INTEGER id_id
  model_config_rec%auxinput10_interval_s(id_id) = auxinput10_interval_s
  RETURN
END SUBROUTINE nl_set_auxinput10_interval_s
SUBROUTINE nl_set_auxinput10_interval ( id_id , auxinput10_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput10_interval
  INTEGER id_id
  model_config_rec%auxinput10_interval(id_id) = auxinput10_interval
  RETURN
END SUBROUTINE nl_set_auxinput10_interval
SUBROUTINE nl_set_auxinput10_begin_y ( id_id , auxinput10_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput10_begin_y
  INTEGER id_id
  model_config_rec%auxinput10_begin_y(id_id) = auxinput10_begin_y
  RETURN
END SUBROUTINE nl_set_auxinput10_begin_y
SUBROUTINE nl_set_auxinput10_begin_d ( id_id , auxinput10_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput10_begin_d
  INTEGER id_id
  model_config_rec%auxinput10_begin_d(id_id) = auxinput10_begin_d
  RETURN
END SUBROUTINE nl_set_auxinput10_begin_d
SUBROUTINE nl_set_auxinput10_begin_h ( id_id , auxinput10_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput10_begin_h
  INTEGER id_id
  model_config_rec%auxinput10_begin_h(id_id) = auxinput10_begin_h
  RETURN
END SUBROUTINE nl_set_auxinput10_begin_h
SUBROUTINE nl_set_auxinput10_begin_m ( id_id , auxinput10_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput10_begin_m
  INTEGER id_id
  model_config_rec%auxinput10_begin_m(id_id) = auxinput10_begin_m
  RETURN
END SUBROUTINE nl_set_auxinput10_begin_m
SUBROUTINE nl_set_auxinput10_begin_s ( id_id , auxinput10_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput10_begin_s
  INTEGER id_id
  model_config_rec%auxinput10_begin_s(id_id) = auxinput10_begin_s
  RETURN
END SUBROUTINE nl_set_auxinput10_begin_s
SUBROUTINE nl_set_auxinput10_begin ( id_id , auxinput10_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput10_begin
  INTEGER id_id
  model_config_rec%auxinput10_begin(id_id) = auxinput10_begin
  RETURN
END SUBROUTINE nl_set_auxinput10_begin
SUBROUTINE nl_set_auxinput10_end_y ( id_id , auxinput10_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput10_end_y
  INTEGER id_id
  model_config_rec%auxinput10_end_y(id_id) = auxinput10_end_y
  RETURN
END SUBROUTINE nl_set_auxinput10_end_y
SUBROUTINE nl_set_auxinput10_end_d ( id_id , auxinput10_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput10_end_d
  INTEGER id_id
  model_config_rec%auxinput10_end_d(id_id) = auxinput10_end_d
  RETURN
END SUBROUTINE nl_set_auxinput10_end_d
SUBROUTINE nl_set_auxinput10_end_h ( id_id , auxinput10_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput10_end_h
  INTEGER id_id
  model_config_rec%auxinput10_end_h(id_id) = auxinput10_end_h
  RETURN
END SUBROUTINE nl_set_auxinput10_end_h
SUBROUTINE nl_set_auxinput10_end_m ( id_id , auxinput10_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput10_end_m
  INTEGER id_id
  model_config_rec%auxinput10_end_m(id_id) = auxinput10_end_m
  RETURN
END SUBROUTINE nl_set_auxinput10_end_m
SUBROUTINE nl_set_auxinput10_end_s ( id_id , auxinput10_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput10_end_s
  INTEGER id_id
  model_config_rec%auxinput10_end_s(id_id) = auxinput10_end_s
  RETURN
END SUBROUTINE nl_set_auxinput10_end_s
SUBROUTINE nl_set_auxinput10_end ( id_id , auxinput10_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput10_end
  INTEGER id_id
  model_config_rec%auxinput10_end(id_id) = auxinput10_end
  RETURN
END SUBROUTINE nl_set_auxinput10_end
SUBROUTINE nl_set_io_form_auxinput10 ( id_id , io_form_auxinput10 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxinput10
  INTEGER id_id
  model_config_rec%io_form_auxinput10 = io_form_auxinput10 
  RETURN
END SUBROUTINE nl_set_io_form_auxinput10
SUBROUTINE nl_set_frames_per_auxinput10 ( id_id , frames_per_auxinput10 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxinput10
  INTEGER id_id
  model_config_rec%frames_per_auxinput10(id_id) = frames_per_auxinput10
  RETURN
END SUBROUTINE nl_set_frames_per_auxinput10
SUBROUTINE nl_set_auxinput11_inname ( id_id , auxinput11_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput11_inname
  INTEGER id_id
  model_config_rec%auxinput11_inname = trim(auxinput11_inname) 
  RETURN
END SUBROUTINE nl_set_auxinput11_inname
SUBROUTINE nl_set_auxinput11_outname ( id_id , auxinput11_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput11_outname
  INTEGER id_id
  model_config_rec%auxinput11_outname = trim(auxinput11_outname) 
  RETURN
END SUBROUTINE nl_set_auxinput11_outname
SUBROUTINE nl_set_auxinput11_interval_y ( id_id , auxinput11_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput11_interval_y
  INTEGER id_id
  model_config_rec%auxinput11_interval_y(id_id) = auxinput11_interval_y
  RETURN
END SUBROUTINE nl_set_auxinput11_interval_y
SUBROUTINE nl_set_auxinput11_interval_d ( id_id , auxinput11_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput11_interval_d
  INTEGER id_id
  model_config_rec%auxinput11_interval_d(id_id) = auxinput11_interval_d
  RETURN
END SUBROUTINE nl_set_auxinput11_interval_d
SUBROUTINE nl_set_auxinput11_interval_h ( id_id , auxinput11_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput11_interval_h
  INTEGER id_id
  model_config_rec%auxinput11_interval_h(id_id) = auxinput11_interval_h
  RETURN
END SUBROUTINE nl_set_auxinput11_interval_h
SUBROUTINE nl_set_auxinput11_interval_m ( id_id , auxinput11_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput11_interval_m
  INTEGER id_id
  model_config_rec%auxinput11_interval_m(id_id) = auxinput11_interval_m
  RETURN
END SUBROUTINE nl_set_auxinput11_interval_m
SUBROUTINE nl_set_auxinput11_interval_s ( id_id , auxinput11_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput11_interval_s
  INTEGER id_id
  model_config_rec%auxinput11_interval_s(id_id) = auxinput11_interval_s
  RETURN
END SUBROUTINE nl_set_auxinput11_interval_s
SUBROUTINE nl_set_auxinput11_interval ( id_id , auxinput11_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput11_interval
  INTEGER id_id
  model_config_rec%auxinput11_interval(id_id) = auxinput11_interval
  RETURN
END SUBROUTINE nl_set_auxinput11_interval
SUBROUTINE nl_set_auxinput11_begin_y ( id_id , auxinput11_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput11_begin_y
  INTEGER id_id
  model_config_rec%auxinput11_begin_y(id_id) = auxinput11_begin_y
  RETURN
END SUBROUTINE nl_set_auxinput11_begin_y
SUBROUTINE nl_set_auxinput11_begin_d ( id_id , auxinput11_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput11_begin_d
  INTEGER id_id
  model_config_rec%auxinput11_begin_d(id_id) = auxinput11_begin_d
  RETURN
END SUBROUTINE nl_set_auxinput11_begin_d
SUBROUTINE nl_set_auxinput11_begin_h ( id_id , auxinput11_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput11_begin_h
  INTEGER id_id
  model_config_rec%auxinput11_begin_h(id_id) = auxinput11_begin_h
  RETURN
END SUBROUTINE nl_set_auxinput11_begin_h
SUBROUTINE nl_set_auxinput11_begin_m ( id_id , auxinput11_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput11_begin_m
  INTEGER id_id
  model_config_rec%auxinput11_begin_m(id_id) = auxinput11_begin_m
  RETURN
END SUBROUTINE nl_set_auxinput11_begin_m
SUBROUTINE nl_set_auxinput11_begin_s ( id_id , auxinput11_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput11_begin_s
  INTEGER id_id
  model_config_rec%auxinput11_begin_s(id_id) = auxinput11_begin_s
  RETURN
END SUBROUTINE nl_set_auxinput11_begin_s
SUBROUTINE nl_set_auxinput11_begin ( id_id , auxinput11_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput11_begin
  INTEGER id_id
  model_config_rec%auxinput11_begin(id_id) = auxinput11_begin
  RETURN
END SUBROUTINE nl_set_auxinput11_begin
SUBROUTINE nl_set_auxinput11_end_y ( id_id , auxinput11_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput11_end_y
  INTEGER id_id
  model_config_rec%auxinput11_end_y(id_id) = auxinput11_end_y
  RETURN
END SUBROUTINE nl_set_auxinput11_end_y
SUBROUTINE nl_set_auxinput11_end_d ( id_id , auxinput11_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput11_end_d
  INTEGER id_id
  model_config_rec%auxinput11_end_d(id_id) = auxinput11_end_d
  RETURN
END SUBROUTINE nl_set_auxinput11_end_d
SUBROUTINE nl_set_auxinput11_end_h ( id_id , auxinput11_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput11_end_h
  INTEGER id_id
  model_config_rec%auxinput11_end_h(id_id) = auxinput11_end_h
  RETURN
END SUBROUTINE nl_set_auxinput11_end_h
SUBROUTINE nl_set_auxinput11_end_m ( id_id , auxinput11_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput11_end_m
  INTEGER id_id
  model_config_rec%auxinput11_end_m(id_id) = auxinput11_end_m
  RETURN
END SUBROUTINE nl_set_auxinput11_end_m
SUBROUTINE nl_set_auxinput11_end_s ( id_id , auxinput11_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput11_end_s
  INTEGER id_id
  model_config_rec%auxinput11_end_s(id_id) = auxinput11_end_s
  RETURN
END SUBROUTINE nl_set_auxinput11_end_s
SUBROUTINE nl_set_auxinput11_end ( id_id , auxinput11_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput11_end
  INTEGER id_id
  model_config_rec%auxinput11_end(id_id) = auxinput11_end
  RETURN
END SUBROUTINE nl_set_auxinput11_end
SUBROUTINE nl_set_io_form_auxinput11 ( id_id , io_form_auxinput11 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxinput11
  INTEGER id_id
  model_config_rec%io_form_auxinput11 = io_form_auxinput11 
  RETURN
END SUBROUTINE nl_set_io_form_auxinput11
SUBROUTINE nl_set_frames_per_auxinput11 ( id_id , frames_per_auxinput11 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxinput11
  INTEGER id_id
  model_config_rec%frames_per_auxinput11(id_id) = frames_per_auxinput11
  RETURN
END SUBROUTINE nl_set_frames_per_auxinput11
SUBROUTINE nl_set_auxinput12_inname ( id_id , auxinput12_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput12_inname
  INTEGER id_id
  model_config_rec%auxinput12_inname = trim(auxinput12_inname) 
  RETURN
END SUBROUTINE nl_set_auxinput12_inname
SUBROUTINE nl_set_auxinput12_outname ( id_id , auxinput12_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput12_outname
  INTEGER id_id
  model_config_rec%auxinput12_outname = trim(auxinput12_outname) 
  RETURN
END SUBROUTINE nl_set_auxinput12_outname
SUBROUTINE nl_set_auxinput12_interval_y ( id_id , auxinput12_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput12_interval_y
  INTEGER id_id
  model_config_rec%auxinput12_interval_y(id_id) = auxinput12_interval_y
  RETURN
END SUBROUTINE nl_set_auxinput12_interval_y
SUBROUTINE nl_set_auxinput12_interval_d ( id_id , auxinput12_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput12_interval_d
  INTEGER id_id
  model_config_rec%auxinput12_interval_d(id_id) = auxinput12_interval_d
  RETURN
END SUBROUTINE nl_set_auxinput12_interval_d
SUBROUTINE nl_set_auxinput12_interval_h ( id_id , auxinput12_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput12_interval_h
  INTEGER id_id
  model_config_rec%auxinput12_interval_h(id_id) = auxinput12_interval_h
  RETURN
END SUBROUTINE nl_set_auxinput12_interval_h
SUBROUTINE nl_set_auxinput12_interval_m ( id_id , auxinput12_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput12_interval_m
  INTEGER id_id
  model_config_rec%auxinput12_interval_m(id_id) = auxinput12_interval_m
  RETURN
END SUBROUTINE nl_set_auxinput12_interval_m
SUBROUTINE nl_set_auxinput12_interval_s ( id_id , auxinput12_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput12_interval_s
  INTEGER id_id
  model_config_rec%auxinput12_interval_s(id_id) = auxinput12_interval_s
  RETURN
END SUBROUTINE nl_set_auxinput12_interval_s
SUBROUTINE nl_set_auxinput12_interval ( id_id , auxinput12_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput12_interval
  INTEGER id_id
  model_config_rec%auxinput12_interval(id_id) = auxinput12_interval
  RETURN
END SUBROUTINE nl_set_auxinput12_interval
SUBROUTINE nl_set_auxinput12_begin_y ( id_id , auxinput12_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput12_begin_y
  INTEGER id_id
  model_config_rec%auxinput12_begin_y(id_id) = auxinput12_begin_y
  RETURN
END SUBROUTINE nl_set_auxinput12_begin_y
SUBROUTINE nl_set_auxinput12_begin_d ( id_id , auxinput12_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput12_begin_d
  INTEGER id_id
  model_config_rec%auxinput12_begin_d(id_id) = auxinput12_begin_d
  RETURN
END SUBROUTINE nl_set_auxinput12_begin_d
SUBROUTINE nl_set_auxinput12_begin_h ( id_id , auxinput12_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput12_begin_h
  INTEGER id_id
  model_config_rec%auxinput12_begin_h(id_id) = auxinput12_begin_h
  RETURN
END SUBROUTINE nl_set_auxinput12_begin_h
SUBROUTINE nl_set_auxinput12_begin_m ( id_id , auxinput12_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput12_begin_m
  INTEGER id_id
  model_config_rec%auxinput12_begin_m(id_id) = auxinput12_begin_m
  RETURN
END SUBROUTINE nl_set_auxinput12_begin_m
SUBROUTINE nl_set_auxinput12_begin_s ( id_id , auxinput12_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput12_begin_s
  INTEGER id_id
  model_config_rec%auxinput12_begin_s(id_id) = auxinput12_begin_s
  RETURN
END SUBROUTINE nl_set_auxinput12_begin_s
SUBROUTINE nl_set_auxinput12_begin ( id_id , auxinput12_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput12_begin
  INTEGER id_id
  model_config_rec%auxinput12_begin(id_id) = auxinput12_begin
  RETURN
END SUBROUTINE nl_set_auxinput12_begin
SUBROUTINE nl_set_auxinput12_end_y ( id_id , auxinput12_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput12_end_y
  INTEGER id_id
  model_config_rec%auxinput12_end_y(id_id) = auxinput12_end_y
  RETURN
END SUBROUTINE nl_set_auxinput12_end_y
SUBROUTINE nl_set_auxinput12_end_d ( id_id , auxinput12_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput12_end_d
  INTEGER id_id
  model_config_rec%auxinput12_end_d(id_id) = auxinput12_end_d
  RETURN
END SUBROUTINE nl_set_auxinput12_end_d
SUBROUTINE nl_set_auxinput12_end_h ( id_id , auxinput12_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput12_end_h
  INTEGER id_id
  model_config_rec%auxinput12_end_h(id_id) = auxinput12_end_h
  RETURN
END SUBROUTINE nl_set_auxinput12_end_h
SUBROUTINE nl_set_auxinput12_end_m ( id_id , auxinput12_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput12_end_m
  INTEGER id_id
  model_config_rec%auxinput12_end_m(id_id) = auxinput12_end_m
  RETURN
END SUBROUTINE nl_set_auxinput12_end_m
SUBROUTINE nl_set_auxinput12_end_s ( id_id , auxinput12_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput12_end_s
  INTEGER id_id
  model_config_rec%auxinput12_end_s(id_id) = auxinput12_end_s
  RETURN
END SUBROUTINE nl_set_auxinput12_end_s
SUBROUTINE nl_set_auxinput12_end ( id_id , auxinput12_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput12_end
  INTEGER id_id
  model_config_rec%auxinput12_end(id_id) = auxinput12_end
  RETURN
END SUBROUTINE nl_set_auxinput12_end
SUBROUTINE nl_set_io_form_auxinput12 ( id_id , io_form_auxinput12 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxinput12
  INTEGER id_id
  model_config_rec%io_form_auxinput12 = io_form_auxinput12 
  RETURN
END SUBROUTINE nl_set_io_form_auxinput12
SUBROUTINE nl_set_frames_per_auxinput12 ( id_id , frames_per_auxinput12 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxinput12
  INTEGER id_id
  model_config_rec%frames_per_auxinput12(id_id) = frames_per_auxinput12
  RETURN
END SUBROUTINE nl_set_frames_per_auxinput12
SUBROUTINE nl_set_auxinput13_inname ( id_id , auxinput13_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput13_inname
  INTEGER id_id
  model_config_rec%auxinput13_inname = trim(auxinput13_inname) 
  RETURN
END SUBROUTINE nl_set_auxinput13_inname
SUBROUTINE nl_set_auxinput13_outname ( id_id , auxinput13_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput13_outname
  INTEGER id_id
  model_config_rec%auxinput13_outname = trim(auxinput13_outname) 
  RETURN
END SUBROUTINE nl_set_auxinput13_outname
SUBROUTINE nl_set_auxinput13_interval_y ( id_id , auxinput13_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput13_interval_y
  INTEGER id_id
  model_config_rec%auxinput13_interval_y(id_id) = auxinput13_interval_y
  RETURN
END SUBROUTINE nl_set_auxinput13_interval_y
SUBROUTINE nl_set_auxinput13_interval_d ( id_id , auxinput13_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput13_interval_d
  INTEGER id_id
  model_config_rec%auxinput13_interval_d(id_id) = auxinput13_interval_d
  RETURN
END SUBROUTINE nl_set_auxinput13_interval_d
SUBROUTINE nl_set_auxinput13_interval_h ( id_id , auxinput13_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput13_interval_h
  INTEGER id_id
  model_config_rec%auxinput13_interval_h(id_id) = auxinput13_interval_h
  RETURN
END SUBROUTINE nl_set_auxinput13_interval_h
SUBROUTINE nl_set_auxinput13_interval_m ( id_id , auxinput13_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput13_interval_m
  INTEGER id_id
  model_config_rec%auxinput13_interval_m(id_id) = auxinput13_interval_m
  RETURN
END SUBROUTINE nl_set_auxinput13_interval_m
SUBROUTINE nl_set_auxinput13_interval_s ( id_id , auxinput13_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput13_interval_s
  INTEGER id_id
  model_config_rec%auxinput13_interval_s(id_id) = auxinput13_interval_s
  RETURN
END SUBROUTINE nl_set_auxinput13_interval_s
SUBROUTINE nl_set_auxinput13_interval ( id_id , auxinput13_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput13_interval
  INTEGER id_id
  model_config_rec%auxinput13_interval(id_id) = auxinput13_interval
  RETURN
END SUBROUTINE nl_set_auxinput13_interval
SUBROUTINE nl_set_auxinput13_begin_y ( id_id , auxinput13_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput13_begin_y
  INTEGER id_id
  model_config_rec%auxinput13_begin_y(id_id) = auxinput13_begin_y
  RETURN
END SUBROUTINE nl_set_auxinput13_begin_y
SUBROUTINE nl_set_auxinput13_begin_d ( id_id , auxinput13_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput13_begin_d
  INTEGER id_id
  model_config_rec%auxinput13_begin_d(id_id) = auxinput13_begin_d
  RETURN
END SUBROUTINE nl_set_auxinput13_begin_d
SUBROUTINE nl_set_auxinput13_begin_h ( id_id , auxinput13_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput13_begin_h
  INTEGER id_id
  model_config_rec%auxinput13_begin_h(id_id) = auxinput13_begin_h
  RETURN
END SUBROUTINE nl_set_auxinput13_begin_h
SUBROUTINE nl_set_auxinput13_begin_m ( id_id , auxinput13_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput13_begin_m
  INTEGER id_id
  model_config_rec%auxinput13_begin_m(id_id) = auxinput13_begin_m
  RETURN
END SUBROUTINE nl_set_auxinput13_begin_m
SUBROUTINE nl_set_auxinput13_begin_s ( id_id , auxinput13_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput13_begin_s
  INTEGER id_id
  model_config_rec%auxinput13_begin_s(id_id) = auxinput13_begin_s
  RETURN
END SUBROUTINE nl_set_auxinput13_begin_s
SUBROUTINE nl_set_auxinput13_begin ( id_id , auxinput13_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput13_begin
  INTEGER id_id
  model_config_rec%auxinput13_begin(id_id) = auxinput13_begin
  RETURN
END SUBROUTINE nl_set_auxinput13_begin
SUBROUTINE nl_set_auxinput13_end_y ( id_id , auxinput13_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput13_end_y
  INTEGER id_id
  model_config_rec%auxinput13_end_y(id_id) = auxinput13_end_y
  RETURN
END SUBROUTINE nl_set_auxinput13_end_y
SUBROUTINE nl_set_auxinput13_end_d ( id_id , auxinput13_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput13_end_d
  INTEGER id_id
  model_config_rec%auxinput13_end_d(id_id) = auxinput13_end_d
  RETURN
END SUBROUTINE nl_set_auxinput13_end_d
SUBROUTINE nl_set_auxinput13_end_h ( id_id , auxinput13_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput13_end_h
  INTEGER id_id
  model_config_rec%auxinput13_end_h(id_id) = auxinput13_end_h
  RETURN
END SUBROUTINE nl_set_auxinput13_end_h
SUBROUTINE nl_set_auxinput13_end_m ( id_id , auxinput13_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput13_end_m
  INTEGER id_id
  model_config_rec%auxinput13_end_m(id_id) = auxinput13_end_m
  RETURN
END SUBROUTINE nl_set_auxinput13_end_m
SUBROUTINE nl_set_auxinput13_end_s ( id_id , auxinput13_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput13_end_s
  INTEGER id_id
  model_config_rec%auxinput13_end_s(id_id) = auxinput13_end_s
  RETURN
END SUBROUTINE nl_set_auxinput13_end_s
SUBROUTINE nl_set_auxinput13_end ( id_id , auxinput13_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput13_end
  INTEGER id_id
  model_config_rec%auxinput13_end(id_id) = auxinput13_end
  RETURN
END SUBROUTINE nl_set_auxinput13_end
SUBROUTINE nl_set_io_form_auxinput13 ( id_id , io_form_auxinput13 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxinput13
  INTEGER id_id
  model_config_rec%io_form_auxinput13 = io_form_auxinput13 
  RETURN
END SUBROUTINE nl_set_io_form_auxinput13
SUBROUTINE nl_set_frames_per_auxinput13 ( id_id , frames_per_auxinput13 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxinput13
  INTEGER id_id
  model_config_rec%frames_per_auxinput13(id_id) = frames_per_auxinput13
  RETURN
END SUBROUTINE nl_set_frames_per_auxinput13
SUBROUTINE nl_set_auxinput14_inname ( id_id , auxinput14_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput14_inname
  INTEGER id_id
  model_config_rec%auxinput14_inname = trim(auxinput14_inname) 
  RETURN
END SUBROUTINE nl_set_auxinput14_inname
SUBROUTINE nl_set_auxinput14_outname ( id_id , auxinput14_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput14_outname
  INTEGER id_id
  model_config_rec%auxinput14_outname = trim(auxinput14_outname) 
  RETURN
END SUBROUTINE nl_set_auxinput14_outname
SUBROUTINE nl_set_auxinput14_interval_y ( id_id , auxinput14_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput14_interval_y
  INTEGER id_id
  model_config_rec%auxinput14_interval_y(id_id) = auxinput14_interval_y
  RETURN
END SUBROUTINE nl_set_auxinput14_interval_y
SUBROUTINE nl_set_auxinput14_interval_d ( id_id , auxinput14_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput14_interval_d
  INTEGER id_id
  model_config_rec%auxinput14_interval_d(id_id) = auxinput14_interval_d
  RETURN
END SUBROUTINE nl_set_auxinput14_interval_d
SUBROUTINE nl_set_auxinput14_interval_h ( id_id , auxinput14_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput14_interval_h
  INTEGER id_id
  model_config_rec%auxinput14_interval_h(id_id) = auxinput14_interval_h
  RETURN
END SUBROUTINE nl_set_auxinput14_interval_h
SUBROUTINE nl_set_auxinput14_interval_m ( id_id , auxinput14_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput14_interval_m
  INTEGER id_id
  model_config_rec%auxinput14_interval_m(id_id) = auxinput14_interval_m
  RETURN
END SUBROUTINE nl_set_auxinput14_interval_m
SUBROUTINE nl_set_auxinput14_interval_s ( id_id , auxinput14_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput14_interval_s
  INTEGER id_id
  model_config_rec%auxinput14_interval_s(id_id) = auxinput14_interval_s
  RETURN
END SUBROUTINE nl_set_auxinput14_interval_s
SUBROUTINE nl_set_auxinput14_interval ( id_id , auxinput14_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput14_interval
  INTEGER id_id
  model_config_rec%auxinput14_interval(id_id) = auxinput14_interval
  RETURN
END SUBROUTINE nl_set_auxinput14_interval
SUBROUTINE nl_set_auxinput14_begin_y ( id_id , auxinput14_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput14_begin_y
  INTEGER id_id
  model_config_rec%auxinput14_begin_y(id_id) = auxinput14_begin_y
  RETURN
END SUBROUTINE nl_set_auxinput14_begin_y
SUBROUTINE nl_set_auxinput14_begin_d ( id_id , auxinput14_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput14_begin_d
  INTEGER id_id
  model_config_rec%auxinput14_begin_d(id_id) = auxinput14_begin_d
  RETURN
END SUBROUTINE nl_set_auxinput14_begin_d
SUBROUTINE nl_set_auxinput14_begin_h ( id_id , auxinput14_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput14_begin_h
  INTEGER id_id
  model_config_rec%auxinput14_begin_h(id_id) = auxinput14_begin_h
  RETURN
END SUBROUTINE nl_set_auxinput14_begin_h
SUBROUTINE nl_set_auxinput14_begin_m ( id_id , auxinput14_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput14_begin_m
  INTEGER id_id
  model_config_rec%auxinput14_begin_m(id_id) = auxinput14_begin_m
  RETURN
END SUBROUTINE nl_set_auxinput14_begin_m
SUBROUTINE nl_set_auxinput14_begin_s ( id_id , auxinput14_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput14_begin_s
  INTEGER id_id
  model_config_rec%auxinput14_begin_s(id_id) = auxinput14_begin_s
  RETURN
END SUBROUTINE nl_set_auxinput14_begin_s
SUBROUTINE nl_set_auxinput14_begin ( id_id , auxinput14_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput14_begin
  INTEGER id_id
  model_config_rec%auxinput14_begin(id_id) = auxinput14_begin
  RETURN
END SUBROUTINE nl_set_auxinput14_begin
SUBROUTINE nl_set_auxinput14_end_y ( id_id , auxinput14_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput14_end_y
  INTEGER id_id
  model_config_rec%auxinput14_end_y(id_id) = auxinput14_end_y
  RETURN
END SUBROUTINE nl_set_auxinput14_end_y
SUBROUTINE nl_set_auxinput14_end_d ( id_id , auxinput14_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput14_end_d
  INTEGER id_id
  model_config_rec%auxinput14_end_d(id_id) = auxinput14_end_d
  RETURN
END SUBROUTINE nl_set_auxinput14_end_d
SUBROUTINE nl_set_auxinput14_end_h ( id_id , auxinput14_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput14_end_h
  INTEGER id_id
  model_config_rec%auxinput14_end_h(id_id) = auxinput14_end_h
  RETURN
END SUBROUTINE nl_set_auxinput14_end_h
SUBROUTINE nl_set_auxinput14_end_m ( id_id , auxinput14_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput14_end_m
  INTEGER id_id
  model_config_rec%auxinput14_end_m(id_id) = auxinput14_end_m
  RETURN
END SUBROUTINE nl_set_auxinput14_end_m
SUBROUTINE nl_set_auxinput14_end_s ( id_id , auxinput14_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput14_end_s
  INTEGER id_id
  model_config_rec%auxinput14_end_s(id_id) = auxinput14_end_s
  RETURN
END SUBROUTINE nl_set_auxinput14_end_s
SUBROUTINE nl_set_auxinput14_end ( id_id , auxinput14_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput14_end
  INTEGER id_id
  model_config_rec%auxinput14_end(id_id) = auxinput14_end
  RETURN
END SUBROUTINE nl_set_auxinput14_end
SUBROUTINE nl_set_io_form_auxinput14 ( id_id , io_form_auxinput14 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxinput14
  INTEGER id_id
  model_config_rec%io_form_auxinput14 = io_form_auxinput14 
  RETURN
END SUBROUTINE nl_set_io_form_auxinput14
SUBROUTINE nl_set_frames_per_auxinput14 ( id_id , frames_per_auxinput14 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxinput14
  INTEGER id_id
  model_config_rec%frames_per_auxinput14(id_id) = frames_per_auxinput14
  RETURN
END SUBROUTINE nl_set_frames_per_auxinput14
SUBROUTINE nl_set_auxinput15_inname ( id_id , auxinput15_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput15_inname
  INTEGER id_id
  model_config_rec%auxinput15_inname = trim(auxinput15_inname) 
  RETURN
END SUBROUTINE nl_set_auxinput15_inname
SUBROUTINE nl_set_auxinput15_outname ( id_id , auxinput15_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput15_outname
  INTEGER id_id
  model_config_rec%auxinput15_outname = trim(auxinput15_outname) 
  RETURN
END SUBROUTINE nl_set_auxinput15_outname
SUBROUTINE nl_set_auxinput15_interval_y ( id_id , auxinput15_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput15_interval_y
  INTEGER id_id
  model_config_rec%auxinput15_interval_y(id_id) = auxinput15_interval_y
  RETURN
END SUBROUTINE nl_set_auxinput15_interval_y
SUBROUTINE nl_set_auxinput15_interval_d ( id_id , auxinput15_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput15_interval_d
  INTEGER id_id
  model_config_rec%auxinput15_interval_d(id_id) = auxinput15_interval_d
  RETURN
END SUBROUTINE nl_set_auxinput15_interval_d
SUBROUTINE nl_set_auxinput15_interval_h ( id_id , auxinput15_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput15_interval_h
  INTEGER id_id
  model_config_rec%auxinput15_interval_h(id_id) = auxinput15_interval_h
  RETURN
END SUBROUTINE nl_set_auxinput15_interval_h
SUBROUTINE nl_set_auxinput15_interval_m ( id_id , auxinput15_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput15_interval_m
  INTEGER id_id
  model_config_rec%auxinput15_interval_m(id_id) = auxinput15_interval_m
  RETURN
END SUBROUTINE nl_set_auxinput15_interval_m
SUBROUTINE nl_set_auxinput15_interval_s ( id_id , auxinput15_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput15_interval_s
  INTEGER id_id
  model_config_rec%auxinput15_interval_s(id_id) = auxinput15_interval_s
  RETURN
END SUBROUTINE nl_set_auxinput15_interval_s
SUBROUTINE nl_set_auxinput15_interval ( id_id , auxinput15_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput15_interval
  INTEGER id_id
  model_config_rec%auxinput15_interval(id_id) = auxinput15_interval
  RETURN
END SUBROUTINE nl_set_auxinput15_interval
SUBROUTINE nl_set_auxinput15_begin_y ( id_id , auxinput15_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput15_begin_y
  INTEGER id_id
  model_config_rec%auxinput15_begin_y(id_id) = auxinput15_begin_y
  RETURN
END SUBROUTINE nl_set_auxinput15_begin_y
SUBROUTINE nl_set_auxinput15_begin_d ( id_id , auxinput15_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput15_begin_d
  INTEGER id_id
  model_config_rec%auxinput15_begin_d(id_id) = auxinput15_begin_d
  RETURN
END SUBROUTINE nl_set_auxinput15_begin_d
SUBROUTINE nl_set_auxinput15_begin_h ( id_id , auxinput15_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput15_begin_h
  INTEGER id_id
  model_config_rec%auxinput15_begin_h(id_id) = auxinput15_begin_h
  RETURN
END SUBROUTINE nl_set_auxinput15_begin_h
SUBROUTINE nl_set_auxinput15_begin_m ( id_id , auxinput15_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput15_begin_m
  INTEGER id_id
  model_config_rec%auxinput15_begin_m(id_id) = auxinput15_begin_m
  RETURN
END SUBROUTINE nl_set_auxinput15_begin_m
SUBROUTINE nl_set_auxinput15_begin_s ( id_id , auxinput15_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput15_begin_s
  INTEGER id_id
  model_config_rec%auxinput15_begin_s(id_id) = auxinput15_begin_s
  RETURN
END SUBROUTINE nl_set_auxinput15_begin_s
SUBROUTINE nl_set_auxinput15_begin ( id_id , auxinput15_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput15_begin
  INTEGER id_id
  model_config_rec%auxinput15_begin(id_id) = auxinput15_begin
  RETURN
END SUBROUTINE nl_set_auxinput15_begin
SUBROUTINE nl_set_auxinput15_end_y ( id_id , auxinput15_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput15_end_y
  INTEGER id_id
  model_config_rec%auxinput15_end_y(id_id) = auxinput15_end_y
  RETURN
END SUBROUTINE nl_set_auxinput15_end_y
SUBROUTINE nl_set_auxinput15_end_d ( id_id , auxinput15_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput15_end_d
  INTEGER id_id
  model_config_rec%auxinput15_end_d(id_id) = auxinput15_end_d
  RETURN
END SUBROUTINE nl_set_auxinput15_end_d
SUBROUTINE nl_set_auxinput15_end_h ( id_id , auxinput15_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput15_end_h
  INTEGER id_id
  model_config_rec%auxinput15_end_h(id_id) = auxinput15_end_h
  RETURN
END SUBROUTINE nl_set_auxinput15_end_h
SUBROUTINE nl_set_auxinput15_end_m ( id_id , auxinput15_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput15_end_m
  INTEGER id_id
  model_config_rec%auxinput15_end_m(id_id) = auxinput15_end_m
  RETURN
END SUBROUTINE nl_set_auxinput15_end_m
SUBROUTINE nl_set_auxinput15_end_s ( id_id , auxinput15_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput15_end_s
  INTEGER id_id
  model_config_rec%auxinput15_end_s(id_id) = auxinput15_end_s
  RETURN
END SUBROUTINE nl_set_auxinput15_end_s
SUBROUTINE nl_set_auxinput15_end ( id_id , auxinput15_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput15_end
  INTEGER id_id
  model_config_rec%auxinput15_end(id_id) = auxinput15_end
  RETURN
END SUBROUTINE nl_set_auxinput15_end
SUBROUTINE nl_set_io_form_auxinput15 ( id_id , io_form_auxinput15 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxinput15
  INTEGER id_id
  model_config_rec%io_form_auxinput15 = io_form_auxinput15 
  RETURN
END SUBROUTINE nl_set_io_form_auxinput15
SUBROUTINE nl_set_frames_per_auxinput15 ( id_id , frames_per_auxinput15 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxinput15
  INTEGER id_id
  model_config_rec%frames_per_auxinput15(id_id) = frames_per_auxinput15
  RETURN
END SUBROUTINE nl_set_frames_per_auxinput15
SUBROUTINE nl_set_auxinput16_inname ( id_id , auxinput16_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput16_inname
  INTEGER id_id
  model_config_rec%auxinput16_inname = trim(auxinput16_inname) 
  RETURN
END SUBROUTINE nl_set_auxinput16_inname
SUBROUTINE nl_set_auxinput16_outname ( id_id , auxinput16_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput16_outname
  INTEGER id_id
  model_config_rec%auxinput16_outname = trim(auxinput16_outname) 
  RETURN
END SUBROUTINE nl_set_auxinput16_outname
SUBROUTINE nl_set_auxinput16_interval_y ( id_id , auxinput16_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput16_interval_y
  INTEGER id_id
  model_config_rec%auxinput16_interval_y(id_id) = auxinput16_interval_y
  RETURN
END SUBROUTINE nl_set_auxinput16_interval_y
SUBROUTINE nl_set_auxinput16_interval_d ( id_id , auxinput16_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput16_interval_d
  INTEGER id_id
  model_config_rec%auxinput16_interval_d(id_id) = auxinput16_interval_d
  RETURN
END SUBROUTINE nl_set_auxinput16_interval_d
SUBROUTINE nl_set_auxinput16_interval_h ( id_id , auxinput16_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput16_interval_h
  INTEGER id_id
  model_config_rec%auxinput16_interval_h(id_id) = auxinput16_interval_h
  RETURN
END SUBROUTINE nl_set_auxinput16_interval_h
SUBROUTINE nl_set_auxinput16_interval_m ( id_id , auxinput16_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput16_interval_m
  INTEGER id_id
  model_config_rec%auxinput16_interval_m(id_id) = auxinput16_interval_m
  RETURN
END SUBROUTINE nl_set_auxinput16_interval_m
SUBROUTINE nl_set_auxinput16_interval_s ( id_id , auxinput16_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput16_interval_s
  INTEGER id_id
  model_config_rec%auxinput16_interval_s(id_id) = auxinput16_interval_s
  RETURN
END SUBROUTINE nl_set_auxinput16_interval_s
SUBROUTINE nl_set_auxinput16_interval ( id_id , auxinput16_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput16_interval
  INTEGER id_id
  model_config_rec%auxinput16_interval(id_id) = auxinput16_interval
  RETURN
END SUBROUTINE nl_set_auxinput16_interval
SUBROUTINE nl_set_auxinput16_begin_y ( id_id , auxinput16_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput16_begin_y
  INTEGER id_id
  model_config_rec%auxinput16_begin_y(id_id) = auxinput16_begin_y
  RETURN
END SUBROUTINE nl_set_auxinput16_begin_y
SUBROUTINE nl_set_auxinput16_begin_d ( id_id , auxinput16_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput16_begin_d
  INTEGER id_id
  model_config_rec%auxinput16_begin_d(id_id) = auxinput16_begin_d
  RETURN
END SUBROUTINE nl_set_auxinput16_begin_d
SUBROUTINE nl_set_auxinput16_begin_h ( id_id , auxinput16_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput16_begin_h
  INTEGER id_id
  model_config_rec%auxinput16_begin_h(id_id) = auxinput16_begin_h
  RETURN
END SUBROUTINE nl_set_auxinput16_begin_h
SUBROUTINE nl_set_auxinput16_begin_m ( id_id , auxinput16_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput16_begin_m
  INTEGER id_id
  model_config_rec%auxinput16_begin_m(id_id) = auxinput16_begin_m
  RETURN
END SUBROUTINE nl_set_auxinput16_begin_m
SUBROUTINE nl_set_auxinput16_begin_s ( id_id , auxinput16_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput16_begin_s
  INTEGER id_id
  model_config_rec%auxinput16_begin_s(id_id) = auxinput16_begin_s
  RETURN
END SUBROUTINE nl_set_auxinput16_begin_s
SUBROUTINE nl_set_auxinput16_begin ( id_id , auxinput16_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput16_begin
  INTEGER id_id
  model_config_rec%auxinput16_begin(id_id) = auxinput16_begin
  RETURN
END SUBROUTINE nl_set_auxinput16_begin
SUBROUTINE nl_set_auxinput16_end_y ( id_id , auxinput16_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput16_end_y
  INTEGER id_id
  model_config_rec%auxinput16_end_y(id_id) = auxinput16_end_y
  RETURN
END SUBROUTINE nl_set_auxinput16_end_y
SUBROUTINE nl_set_auxinput16_end_d ( id_id , auxinput16_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput16_end_d
  INTEGER id_id
  model_config_rec%auxinput16_end_d(id_id) = auxinput16_end_d
  RETURN
END SUBROUTINE nl_set_auxinput16_end_d
SUBROUTINE nl_set_auxinput16_end_h ( id_id , auxinput16_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput16_end_h
  INTEGER id_id
  model_config_rec%auxinput16_end_h(id_id) = auxinput16_end_h
  RETURN
END SUBROUTINE nl_set_auxinput16_end_h
SUBROUTINE nl_set_auxinput16_end_m ( id_id , auxinput16_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput16_end_m
  INTEGER id_id
  model_config_rec%auxinput16_end_m(id_id) = auxinput16_end_m
  RETURN
END SUBROUTINE nl_set_auxinput16_end_m
SUBROUTINE nl_set_auxinput16_end_s ( id_id , auxinput16_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput16_end_s
  INTEGER id_id
  model_config_rec%auxinput16_end_s(id_id) = auxinput16_end_s
  RETURN
END SUBROUTINE nl_set_auxinput16_end_s
SUBROUTINE nl_set_auxinput16_end ( id_id , auxinput16_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput16_end
  INTEGER id_id
  model_config_rec%auxinput16_end(id_id) = auxinput16_end
  RETURN
END SUBROUTINE nl_set_auxinput16_end
SUBROUTINE nl_set_io_form_auxinput16 ( id_id , io_form_auxinput16 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxinput16
  INTEGER id_id
  model_config_rec%io_form_auxinput16 = io_form_auxinput16 
  RETURN
END SUBROUTINE nl_set_io_form_auxinput16
SUBROUTINE nl_set_frames_per_auxinput16 ( id_id , frames_per_auxinput16 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxinput16
  INTEGER id_id
  model_config_rec%frames_per_auxinput16(id_id) = frames_per_auxinput16
  RETURN
END SUBROUTINE nl_set_frames_per_auxinput16
SUBROUTINE nl_set_auxinput17_inname ( id_id , auxinput17_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput17_inname
  INTEGER id_id
  model_config_rec%auxinput17_inname = trim(auxinput17_inname) 
  RETURN
END SUBROUTINE nl_set_auxinput17_inname
SUBROUTINE nl_set_auxinput17_outname ( id_id , auxinput17_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput17_outname
  INTEGER id_id
  model_config_rec%auxinput17_outname = trim(auxinput17_outname) 
  RETURN
END SUBROUTINE nl_set_auxinput17_outname
SUBROUTINE nl_set_auxinput17_interval_y ( id_id , auxinput17_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput17_interval_y
  INTEGER id_id
  model_config_rec%auxinput17_interval_y(id_id) = auxinput17_interval_y
  RETURN
END SUBROUTINE nl_set_auxinput17_interval_y
SUBROUTINE nl_set_auxinput17_interval_d ( id_id , auxinput17_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput17_interval_d
  INTEGER id_id
  model_config_rec%auxinput17_interval_d(id_id) = auxinput17_interval_d
  RETURN
END SUBROUTINE nl_set_auxinput17_interval_d
SUBROUTINE nl_set_auxinput17_interval_h ( id_id , auxinput17_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput17_interval_h
  INTEGER id_id
  model_config_rec%auxinput17_interval_h(id_id) = auxinput17_interval_h
  RETURN
END SUBROUTINE nl_set_auxinput17_interval_h
SUBROUTINE nl_set_auxinput17_interval_m ( id_id , auxinput17_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput17_interval_m
  INTEGER id_id
  model_config_rec%auxinput17_interval_m(id_id) = auxinput17_interval_m
  RETURN
END SUBROUTINE nl_set_auxinput17_interval_m
SUBROUTINE nl_set_auxinput17_interval_s ( id_id , auxinput17_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput17_interval_s
  INTEGER id_id
  model_config_rec%auxinput17_interval_s(id_id) = auxinput17_interval_s
  RETURN
END SUBROUTINE nl_set_auxinput17_interval_s
SUBROUTINE nl_set_auxinput17_interval ( id_id , auxinput17_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput17_interval
  INTEGER id_id
  model_config_rec%auxinput17_interval(id_id) = auxinput17_interval
  RETURN
END SUBROUTINE nl_set_auxinput17_interval
SUBROUTINE nl_set_auxinput17_begin_y ( id_id , auxinput17_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput17_begin_y
  INTEGER id_id
  model_config_rec%auxinput17_begin_y(id_id) = auxinput17_begin_y
  RETURN
END SUBROUTINE nl_set_auxinput17_begin_y
SUBROUTINE nl_set_auxinput17_begin_d ( id_id , auxinput17_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput17_begin_d
  INTEGER id_id
  model_config_rec%auxinput17_begin_d(id_id) = auxinput17_begin_d
  RETURN
END SUBROUTINE nl_set_auxinput17_begin_d
SUBROUTINE nl_set_auxinput17_begin_h ( id_id , auxinput17_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput17_begin_h
  INTEGER id_id
  model_config_rec%auxinput17_begin_h(id_id) = auxinput17_begin_h
  RETURN
END SUBROUTINE nl_set_auxinput17_begin_h
SUBROUTINE nl_set_auxinput17_begin_m ( id_id , auxinput17_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput17_begin_m
  INTEGER id_id
  model_config_rec%auxinput17_begin_m(id_id) = auxinput17_begin_m
  RETURN
END SUBROUTINE nl_set_auxinput17_begin_m
SUBROUTINE nl_set_auxinput17_begin_s ( id_id , auxinput17_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput17_begin_s
  INTEGER id_id
  model_config_rec%auxinput17_begin_s(id_id) = auxinput17_begin_s
  RETURN
END SUBROUTINE nl_set_auxinput17_begin_s
SUBROUTINE nl_set_auxinput17_begin ( id_id , auxinput17_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput17_begin
  INTEGER id_id
  model_config_rec%auxinput17_begin(id_id) = auxinput17_begin
  RETURN
END SUBROUTINE nl_set_auxinput17_begin
SUBROUTINE nl_set_auxinput17_end_y ( id_id , auxinput17_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput17_end_y
  INTEGER id_id
  model_config_rec%auxinput17_end_y(id_id) = auxinput17_end_y
  RETURN
END SUBROUTINE nl_set_auxinput17_end_y
SUBROUTINE nl_set_auxinput17_end_d ( id_id , auxinput17_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput17_end_d
  INTEGER id_id
  model_config_rec%auxinput17_end_d(id_id) = auxinput17_end_d
  RETURN
END SUBROUTINE nl_set_auxinput17_end_d
SUBROUTINE nl_set_auxinput17_end_h ( id_id , auxinput17_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput17_end_h
  INTEGER id_id
  model_config_rec%auxinput17_end_h(id_id) = auxinput17_end_h
  RETURN
END SUBROUTINE nl_set_auxinput17_end_h
SUBROUTINE nl_set_auxinput17_end_m ( id_id , auxinput17_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput17_end_m
  INTEGER id_id
  model_config_rec%auxinput17_end_m(id_id) = auxinput17_end_m
  RETURN
END SUBROUTINE nl_set_auxinput17_end_m
SUBROUTINE nl_set_auxinput17_end_s ( id_id , auxinput17_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput17_end_s
  INTEGER id_id
  model_config_rec%auxinput17_end_s(id_id) = auxinput17_end_s
  RETURN
END SUBROUTINE nl_set_auxinput17_end_s
#endif
#if (NNN == 6)
SUBROUTINE nl_set_auxinput17_end ( id_id , auxinput17_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput17_end
  INTEGER id_id
  model_config_rec%auxinput17_end(id_id) = auxinput17_end
  RETURN
END SUBROUTINE nl_set_auxinput17_end
SUBROUTINE nl_set_io_form_auxinput17 ( id_id , io_form_auxinput17 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxinput17
  INTEGER id_id
  model_config_rec%io_form_auxinput17 = io_form_auxinput17 
  RETURN
END SUBROUTINE nl_set_io_form_auxinput17
SUBROUTINE nl_set_frames_per_auxinput17 ( id_id , frames_per_auxinput17 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxinput17
  INTEGER id_id
  model_config_rec%frames_per_auxinput17(id_id) = frames_per_auxinput17
  RETURN
END SUBROUTINE nl_set_frames_per_auxinput17
SUBROUTINE nl_set_auxinput18_inname ( id_id , auxinput18_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput18_inname
  INTEGER id_id
  model_config_rec%auxinput18_inname = trim(auxinput18_inname) 
  RETURN
END SUBROUTINE nl_set_auxinput18_inname
SUBROUTINE nl_set_auxinput18_outname ( id_id , auxinput18_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput18_outname
  INTEGER id_id
  model_config_rec%auxinput18_outname = trim(auxinput18_outname) 
  RETURN
END SUBROUTINE nl_set_auxinput18_outname
SUBROUTINE nl_set_auxinput18_interval_y ( id_id , auxinput18_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput18_interval_y
  INTEGER id_id
  model_config_rec%auxinput18_interval_y(id_id) = auxinput18_interval_y
  RETURN
END SUBROUTINE nl_set_auxinput18_interval_y
SUBROUTINE nl_set_auxinput18_interval_d ( id_id , auxinput18_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput18_interval_d
  INTEGER id_id
  model_config_rec%auxinput18_interval_d(id_id) = auxinput18_interval_d
  RETURN
END SUBROUTINE nl_set_auxinput18_interval_d
SUBROUTINE nl_set_auxinput18_interval_h ( id_id , auxinput18_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput18_interval_h
  INTEGER id_id
  model_config_rec%auxinput18_interval_h(id_id) = auxinput18_interval_h
  RETURN
END SUBROUTINE nl_set_auxinput18_interval_h
SUBROUTINE nl_set_auxinput18_interval_m ( id_id , auxinput18_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput18_interval_m
  INTEGER id_id
  model_config_rec%auxinput18_interval_m(id_id) = auxinput18_interval_m
  RETURN
END SUBROUTINE nl_set_auxinput18_interval_m
SUBROUTINE nl_set_auxinput18_interval_s ( id_id , auxinput18_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput18_interval_s
  INTEGER id_id
  model_config_rec%auxinput18_interval_s(id_id) = auxinput18_interval_s
  RETURN
END SUBROUTINE nl_set_auxinput18_interval_s
SUBROUTINE nl_set_auxinput18_interval ( id_id , auxinput18_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput18_interval
  INTEGER id_id
  model_config_rec%auxinput18_interval(id_id) = auxinput18_interval
  RETURN
END SUBROUTINE nl_set_auxinput18_interval
SUBROUTINE nl_set_auxinput18_begin_y ( id_id , auxinput18_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput18_begin_y
  INTEGER id_id
  model_config_rec%auxinput18_begin_y(id_id) = auxinput18_begin_y
  RETURN
END SUBROUTINE nl_set_auxinput18_begin_y
SUBROUTINE nl_set_auxinput18_begin_d ( id_id , auxinput18_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput18_begin_d
  INTEGER id_id
  model_config_rec%auxinput18_begin_d(id_id) = auxinput18_begin_d
  RETURN
END SUBROUTINE nl_set_auxinput18_begin_d
SUBROUTINE nl_set_auxinput18_begin_h ( id_id , auxinput18_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput18_begin_h
  INTEGER id_id
  model_config_rec%auxinput18_begin_h(id_id) = auxinput18_begin_h
  RETURN
END SUBROUTINE nl_set_auxinput18_begin_h
SUBROUTINE nl_set_auxinput18_begin_m ( id_id , auxinput18_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput18_begin_m
  INTEGER id_id
  model_config_rec%auxinput18_begin_m(id_id) = auxinput18_begin_m
  RETURN
END SUBROUTINE nl_set_auxinput18_begin_m
SUBROUTINE nl_set_auxinput18_begin_s ( id_id , auxinput18_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput18_begin_s
  INTEGER id_id
  model_config_rec%auxinput18_begin_s(id_id) = auxinput18_begin_s
  RETURN
END SUBROUTINE nl_set_auxinput18_begin_s
SUBROUTINE nl_set_auxinput18_begin ( id_id , auxinput18_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput18_begin
  INTEGER id_id
  model_config_rec%auxinput18_begin(id_id) = auxinput18_begin
  RETURN
END SUBROUTINE nl_set_auxinput18_begin
SUBROUTINE nl_set_auxinput18_end_y ( id_id , auxinput18_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput18_end_y
  INTEGER id_id
  model_config_rec%auxinput18_end_y(id_id) = auxinput18_end_y
  RETURN
END SUBROUTINE nl_set_auxinput18_end_y
SUBROUTINE nl_set_auxinput18_end_d ( id_id , auxinput18_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput18_end_d
  INTEGER id_id
  model_config_rec%auxinput18_end_d(id_id) = auxinput18_end_d
  RETURN
END SUBROUTINE nl_set_auxinput18_end_d
SUBROUTINE nl_set_auxinput18_end_h ( id_id , auxinput18_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput18_end_h
  INTEGER id_id
  model_config_rec%auxinput18_end_h(id_id) = auxinput18_end_h
  RETURN
END SUBROUTINE nl_set_auxinput18_end_h
SUBROUTINE nl_set_auxinput18_end_m ( id_id , auxinput18_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput18_end_m
  INTEGER id_id
  model_config_rec%auxinput18_end_m(id_id) = auxinput18_end_m
  RETURN
END SUBROUTINE nl_set_auxinput18_end_m
SUBROUTINE nl_set_auxinput18_end_s ( id_id , auxinput18_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput18_end_s
  INTEGER id_id
  model_config_rec%auxinput18_end_s(id_id) = auxinput18_end_s
  RETURN
END SUBROUTINE nl_set_auxinput18_end_s
SUBROUTINE nl_set_auxinput18_end ( id_id , auxinput18_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput18_end
  INTEGER id_id
  model_config_rec%auxinput18_end(id_id) = auxinput18_end
  RETURN
END SUBROUTINE nl_set_auxinput18_end
SUBROUTINE nl_set_io_form_auxinput18 ( id_id , io_form_auxinput18 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxinput18
  INTEGER id_id
  model_config_rec%io_form_auxinput18 = io_form_auxinput18 
  RETURN
END SUBROUTINE nl_set_io_form_auxinput18
SUBROUTINE nl_set_frames_per_auxinput18 ( id_id , frames_per_auxinput18 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxinput18
  INTEGER id_id
  model_config_rec%frames_per_auxinput18(id_id) = frames_per_auxinput18
  RETURN
END SUBROUTINE nl_set_frames_per_auxinput18
SUBROUTINE nl_set_auxinput19_inname ( id_id , auxinput19_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput19_inname
  INTEGER id_id
  model_config_rec%auxinput19_inname = trim(auxinput19_inname) 
  RETURN
END SUBROUTINE nl_set_auxinput19_inname
SUBROUTINE nl_set_auxinput19_outname ( id_id , auxinput19_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput19_outname
  INTEGER id_id
  model_config_rec%auxinput19_outname = trim(auxinput19_outname) 
  RETURN
END SUBROUTINE nl_set_auxinput19_outname
SUBROUTINE nl_set_auxinput19_interval_y ( id_id , auxinput19_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput19_interval_y
  INTEGER id_id
  model_config_rec%auxinput19_interval_y(id_id) = auxinput19_interval_y
  RETURN
END SUBROUTINE nl_set_auxinput19_interval_y
SUBROUTINE nl_set_auxinput19_interval_d ( id_id , auxinput19_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput19_interval_d
  INTEGER id_id
  model_config_rec%auxinput19_interval_d(id_id) = auxinput19_interval_d
  RETURN
END SUBROUTINE nl_set_auxinput19_interval_d
SUBROUTINE nl_set_auxinput19_interval_h ( id_id , auxinput19_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput19_interval_h
  INTEGER id_id
  model_config_rec%auxinput19_interval_h(id_id) = auxinput19_interval_h
  RETURN
END SUBROUTINE nl_set_auxinput19_interval_h
SUBROUTINE nl_set_auxinput19_interval_m ( id_id , auxinput19_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput19_interval_m
  INTEGER id_id
  model_config_rec%auxinput19_interval_m(id_id) = auxinput19_interval_m
  RETURN
END SUBROUTINE nl_set_auxinput19_interval_m
SUBROUTINE nl_set_auxinput19_interval_s ( id_id , auxinput19_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput19_interval_s
  INTEGER id_id
  model_config_rec%auxinput19_interval_s(id_id) = auxinput19_interval_s
  RETURN
END SUBROUTINE nl_set_auxinput19_interval_s
SUBROUTINE nl_set_auxinput19_interval ( id_id , auxinput19_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput19_interval
  INTEGER id_id
  model_config_rec%auxinput19_interval(id_id) = auxinput19_interval
  RETURN
END SUBROUTINE nl_set_auxinput19_interval
SUBROUTINE nl_set_auxinput19_begin_y ( id_id , auxinput19_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput19_begin_y
  INTEGER id_id
  model_config_rec%auxinput19_begin_y(id_id) = auxinput19_begin_y
  RETURN
END SUBROUTINE nl_set_auxinput19_begin_y
SUBROUTINE nl_set_auxinput19_begin_d ( id_id , auxinput19_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput19_begin_d
  INTEGER id_id
  model_config_rec%auxinput19_begin_d(id_id) = auxinput19_begin_d
  RETURN
END SUBROUTINE nl_set_auxinput19_begin_d
SUBROUTINE nl_set_auxinput19_begin_h ( id_id , auxinput19_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput19_begin_h
  INTEGER id_id
  model_config_rec%auxinput19_begin_h(id_id) = auxinput19_begin_h
  RETURN
END SUBROUTINE nl_set_auxinput19_begin_h
SUBROUTINE nl_set_auxinput19_begin_m ( id_id , auxinput19_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput19_begin_m
  INTEGER id_id
  model_config_rec%auxinput19_begin_m(id_id) = auxinput19_begin_m
  RETURN
END SUBROUTINE nl_set_auxinput19_begin_m
SUBROUTINE nl_set_auxinput19_begin_s ( id_id , auxinput19_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput19_begin_s
  INTEGER id_id
  model_config_rec%auxinput19_begin_s(id_id) = auxinput19_begin_s
  RETURN
END SUBROUTINE nl_set_auxinput19_begin_s
SUBROUTINE nl_set_auxinput19_begin ( id_id , auxinput19_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput19_begin
  INTEGER id_id
  model_config_rec%auxinput19_begin(id_id) = auxinput19_begin
  RETURN
END SUBROUTINE nl_set_auxinput19_begin
SUBROUTINE nl_set_auxinput19_end_y ( id_id , auxinput19_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput19_end_y
  INTEGER id_id
  model_config_rec%auxinput19_end_y(id_id) = auxinput19_end_y
  RETURN
END SUBROUTINE nl_set_auxinput19_end_y
SUBROUTINE nl_set_auxinput19_end_d ( id_id , auxinput19_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput19_end_d
  INTEGER id_id
  model_config_rec%auxinput19_end_d(id_id) = auxinput19_end_d
  RETURN
END SUBROUTINE nl_set_auxinput19_end_d
SUBROUTINE nl_set_auxinput19_end_h ( id_id , auxinput19_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput19_end_h
  INTEGER id_id
  model_config_rec%auxinput19_end_h(id_id) = auxinput19_end_h
  RETURN
END SUBROUTINE nl_set_auxinput19_end_h
SUBROUTINE nl_set_auxinput19_end_m ( id_id , auxinput19_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput19_end_m
  INTEGER id_id
  model_config_rec%auxinput19_end_m(id_id) = auxinput19_end_m
  RETURN
END SUBROUTINE nl_set_auxinput19_end_m
SUBROUTINE nl_set_auxinput19_end_s ( id_id , auxinput19_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput19_end_s
  INTEGER id_id
  model_config_rec%auxinput19_end_s(id_id) = auxinput19_end_s
  RETURN
END SUBROUTINE nl_set_auxinput19_end_s
SUBROUTINE nl_set_auxinput19_end ( id_id , auxinput19_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput19_end
  INTEGER id_id
  model_config_rec%auxinput19_end(id_id) = auxinput19_end
  RETURN
END SUBROUTINE nl_set_auxinput19_end
SUBROUTINE nl_set_io_form_auxinput19 ( id_id , io_form_auxinput19 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxinput19
  INTEGER id_id
  model_config_rec%io_form_auxinput19 = io_form_auxinput19 
  RETURN
END SUBROUTINE nl_set_io_form_auxinput19
SUBROUTINE nl_set_frames_per_auxinput19 ( id_id , frames_per_auxinput19 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxinput19
  INTEGER id_id
  model_config_rec%frames_per_auxinput19(id_id) = frames_per_auxinput19
  RETURN
END SUBROUTINE nl_set_frames_per_auxinput19
SUBROUTINE nl_set_auxinput20_inname ( id_id , auxinput20_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput20_inname
  INTEGER id_id
  model_config_rec%auxinput20_inname = trim(auxinput20_inname) 
  RETURN
END SUBROUTINE nl_set_auxinput20_inname
SUBROUTINE nl_set_auxinput20_outname ( id_id , auxinput20_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput20_outname
  INTEGER id_id
  model_config_rec%auxinput20_outname = trim(auxinput20_outname) 
  RETURN
END SUBROUTINE nl_set_auxinput20_outname
SUBROUTINE nl_set_auxinput20_interval_y ( id_id , auxinput20_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput20_interval_y
  INTEGER id_id
  model_config_rec%auxinput20_interval_y(id_id) = auxinput20_interval_y
  RETURN
END SUBROUTINE nl_set_auxinput20_interval_y
SUBROUTINE nl_set_auxinput20_interval_d ( id_id , auxinput20_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput20_interval_d
  INTEGER id_id
  model_config_rec%auxinput20_interval_d(id_id) = auxinput20_interval_d
  RETURN
END SUBROUTINE nl_set_auxinput20_interval_d
SUBROUTINE nl_set_auxinput20_interval_h ( id_id , auxinput20_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput20_interval_h
  INTEGER id_id
  model_config_rec%auxinput20_interval_h(id_id) = auxinput20_interval_h
  RETURN
END SUBROUTINE nl_set_auxinput20_interval_h
SUBROUTINE nl_set_auxinput20_interval_m ( id_id , auxinput20_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput20_interval_m
  INTEGER id_id
  model_config_rec%auxinput20_interval_m(id_id) = auxinput20_interval_m
  RETURN
END SUBROUTINE nl_set_auxinput20_interval_m
SUBROUTINE nl_set_auxinput20_interval_s ( id_id , auxinput20_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput20_interval_s
  INTEGER id_id
  model_config_rec%auxinput20_interval_s(id_id) = auxinput20_interval_s
  RETURN
END SUBROUTINE nl_set_auxinput20_interval_s
SUBROUTINE nl_set_auxinput20_interval ( id_id , auxinput20_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput20_interval
  INTEGER id_id
  model_config_rec%auxinput20_interval(id_id) = auxinput20_interval
  RETURN
END SUBROUTINE nl_set_auxinput20_interval
SUBROUTINE nl_set_auxinput20_begin_y ( id_id , auxinput20_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput20_begin_y
  INTEGER id_id
  model_config_rec%auxinput20_begin_y(id_id) = auxinput20_begin_y
  RETURN
END SUBROUTINE nl_set_auxinput20_begin_y
SUBROUTINE nl_set_auxinput20_begin_d ( id_id , auxinput20_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput20_begin_d
  INTEGER id_id
  model_config_rec%auxinput20_begin_d(id_id) = auxinput20_begin_d
  RETURN
END SUBROUTINE nl_set_auxinput20_begin_d
SUBROUTINE nl_set_auxinput20_begin_h ( id_id , auxinput20_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput20_begin_h
  INTEGER id_id
  model_config_rec%auxinput20_begin_h(id_id) = auxinput20_begin_h
  RETURN
END SUBROUTINE nl_set_auxinput20_begin_h
SUBROUTINE nl_set_auxinput20_begin_m ( id_id , auxinput20_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput20_begin_m
  INTEGER id_id
  model_config_rec%auxinput20_begin_m(id_id) = auxinput20_begin_m
  RETURN
END SUBROUTINE nl_set_auxinput20_begin_m
SUBROUTINE nl_set_auxinput20_begin_s ( id_id , auxinput20_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput20_begin_s
  INTEGER id_id
  model_config_rec%auxinput20_begin_s(id_id) = auxinput20_begin_s
  RETURN
END SUBROUTINE nl_set_auxinput20_begin_s
SUBROUTINE nl_set_auxinput20_begin ( id_id , auxinput20_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput20_begin
  INTEGER id_id
  model_config_rec%auxinput20_begin(id_id) = auxinput20_begin
  RETURN
END SUBROUTINE nl_set_auxinput20_begin
SUBROUTINE nl_set_auxinput20_end_y ( id_id , auxinput20_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput20_end_y
  INTEGER id_id
  model_config_rec%auxinput20_end_y(id_id) = auxinput20_end_y
  RETURN
END SUBROUTINE nl_set_auxinput20_end_y
SUBROUTINE nl_set_auxinput20_end_d ( id_id , auxinput20_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput20_end_d
  INTEGER id_id
  model_config_rec%auxinput20_end_d(id_id) = auxinput20_end_d
  RETURN
END SUBROUTINE nl_set_auxinput20_end_d
SUBROUTINE nl_set_auxinput20_end_h ( id_id , auxinput20_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput20_end_h
  INTEGER id_id
  model_config_rec%auxinput20_end_h(id_id) = auxinput20_end_h
  RETURN
END SUBROUTINE nl_set_auxinput20_end_h
SUBROUTINE nl_set_auxinput20_end_m ( id_id , auxinput20_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput20_end_m
  INTEGER id_id
  model_config_rec%auxinput20_end_m(id_id) = auxinput20_end_m
  RETURN
END SUBROUTINE nl_set_auxinput20_end_m
SUBROUTINE nl_set_auxinput20_end_s ( id_id , auxinput20_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput20_end_s
  INTEGER id_id
  model_config_rec%auxinput20_end_s(id_id) = auxinput20_end_s
  RETURN
END SUBROUTINE nl_set_auxinput20_end_s
SUBROUTINE nl_set_auxinput20_end ( id_id , auxinput20_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput20_end
  INTEGER id_id
  model_config_rec%auxinput20_end(id_id) = auxinput20_end
  RETURN
END SUBROUTINE nl_set_auxinput20_end
SUBROUTINE nl_set_io_form_auxinput20 ( id_id , io_form_auxinput20 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxinput20
  INTEGER id_id
  model_config_rec%io_form_auxinput20 = io_form_auxinput20 
  RETURN
END SUBROUTINE nl_set_io_form_auxinput20
SUBROUTINE nl_set_frames_per_auxinput20 ( id_id , frames_per_auxinput20 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxinput20
  INTEGER id_id
  model_config_rec%frames_per_auxinput20(id_id) = frames_per_auxinput20
  RETURN
END SUBROUTINE nl_set_frames_per_auxinput20
SUBROUTINE nl_set_auxinput21_inname ( id_id , auxinput21_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput21_inname
  INTEGER id_id
  model_config_rec%auxinput21_inname = trim(auxinput21_inname) 
  RETURN
END SUBROUTINE nl_set_auxinput21_inname
SUBROUTINE nl_set_auxinput21_outname ( id_id , auxinput21_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput21_outname
  INTEGER id_id
  model_config_rec%auxinput21_outname = trim(auxinput21_outname) 
  RETURN
END SUBROUTINE nl_set_auxinput21_outname
SUBROUTINE nl_set_auxinput21_interval_y ( id_id , auxinput21_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput21_interval_y
  INTEGER id_id
  model_config_rec%auxinput21_interval_y(id_id) = auxinput21_interval_y
  RETURN
END SUBROUTINE nl_set_auxinput21_interval_y
SUBROUTINE nl_set_auxinput21_interval_d ( id_id , auxinput21_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput21_interval_d
  INTEGER id_id
  model_config_rec%auxinput21_interval_d(id_id) = auxinput21_interval_d
  RETURN
END SUBROUTINE nl_set_auxinput21_interval_d
SUBROUTINE nl_set_auxinput21_interval_h ( id_id , auxinput21_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput21_interval_h
  INTEGER id_id
  model_config_rec%auxinput21_interval_h(id_id) = auxinput21_interval_h
  RETURN
END SUBROUTINE nl_set_auxinput21_interval_h
SUBROUTINE nl_set_auxinput21_interval_m ( id_id , auxinput21_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput21_interval_m
  INTEGER id_id
  model_config_rec%auxinput21_interval_m(id_id) = auxinput21_interval_m
  RETURN
END SUBROUTINE nl_set_auxinput21_interval_m
SUBROUTINE nl_set_auxinput21_interval_s ( id_id , auxinput21_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput21_interval_s
  INTEGER id_id
  model_config_rec%auxinput21_interval_s(id_id) = auxinput21_interval_s
  RETURN
END SUBROUTINE nl_set_auxinput21_interval_s
SUBROUTINE nl_set_auxinput21_interval ( id_id , auxinput21_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput21_interval
  INTEGER id_id
  model_config_rec%auxinput21_interval(id_id) = auxinput21_interval
  RETURN
END SUBROUTINE nl_set_auxinput21_interval
SUBROUTINE nl_set_auxinput21_begin_y ( id_id , auxinput21_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput21_begin_y
  INTEGER id_id
  model_config_rec%auxinput21_begin_y(id_id) = auxinput21_begin_y
  RETURN
END SUBROUTINE nl_set_auxinput21_begin_y
SUBROUTINE nl_set_auxinput21_begin_d ( id_id , auxinput21_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput21_begin_d
  INTEGER id_id
  model_config_rec%auxinput21_begin_d(id_id) = auxinput21_begin_d
  RETURN
END SUBROUTINE nl_set_auxinput21_begin_d
SUBROUTINE nl_set_auxinput21_begin_h ( id_id , auxinput21_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput21_begin_h
  INTEGER id_id
  model_config_rec%auxinput21_begin_h(id_id) = auxinput21_begin_h
  RETURN
END SUBROUTINE nl_set_auxinput21_begin_h
SUBROUTINE nl_set_auxinput21_begin_m ( id_id , auxinput21_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput21_begin_m
  INTEGER id_id
  model_config_rec%auxinput21_begin_m(id_id) = auxinput21_begin_m
  RETURN
END SUBROUTINE nl_set_auxinput21_begin_m
SUBROUTINE nl_set_auxinput21_begin_s ( id_id , auxinput21_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput21_begin_s
  INTEGER id_id
  model_config_rec%auxinput21_begin_s(id_id) = auxinput21_begin_s
  RETURN
END SUBROUTINE nl_set_auxinput21_begin_s
SUBROUTINE nl_set_auxinput21_begin ( id_id , auxinput21_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput21_begin
  INTEGER id_id
  model_config_rec%auxinput21_begin(id_id) = auxinput21_begin
  RETURN
END SUBROUTINE nl_set_auxinput21_begin
SUBROUTINE nl_set_auxinput21_end_y ( id_id , auxinput21_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput21_end_y
  INTEGER id_id
  model_config_rec%auxinput21_end_y(id_id) = auxinput21_end_y
  RETURN
END SUBROUTINE nl_set_auxinput21_end_y
SUBROUTINE nl_set_auxinput21_end_d ( id_id , auxinput21_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput21_end_d
  INTEGER id_id
  model_config_rec%auxinput21_end_d(id_id) = auxinput21_end_d
  RETURN
END SUBROUTINE nl_set_auxinput21_end_d
SUBROUTINE nl_set_auxinput21_end_h ( id_id , auxinput21_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput21_end_h
  INTEGER id_id
  model_config_rec%auxinput21_end_h(id_id) = auxinput21_end_h
  RETURN
END SUBROUTINE nl_set_auxinput21_end_h
SUBROUTINE nl_set_auxinput21_end_m ( id_id , auxinput21_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput21_end_m
  INTEGER id_id
  model_config_rec%auxinput21_end_m(id_id) = auxinput21_end_m
  RETURN
END SUBROUTINE nl_set_auxinput21_end_m
SUBROUTINE nl_set_auxinput21_end_s ( id_id , auxinput21_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput21_end_s
  INTEGER id_id
  model_config_rec%auxinput21_end_s(id_id) = auxinput21_end_s
  RETURN
END SUBROUTINE nl_set_auxinput21_end_s
SUBROUTINE nl_set_auxinput21_end ( id_id , auxinput21_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput21_end
  INTEGER id_id
  model_config_rec%auxinput21_end(id_id) = auxinput21_end
  RETURN
END SUBROUTINE nl_set_auxinput21_end
SUBROUTINE nl_set_io_form_auxinput21 ( id_id , io_form_auxinput21 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxinput21
  INTEGER id_id
  model_config_rec%io_form_auxinput21 = io_form_auxinput21 
  RETURN
END SUBROUTINE nl_set_io_form_auxinput21
SUBROUTINE nl_set_frames_per_auxinput21 ( id_id , frames_per_auxinput21 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxinput21
  INTEGER id_id
  model_config_rec%frames_per_auxinput21(id_id) = frames_per_auxinput21
  RETURN
END SUBROUTINE nl_set_frames_per_auxinput21
SUBROUTINE nl_set_auxinput22_inname ( id_id , auxinput22_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput22_inname
  INTEGER id_id
  model_config_rec%auxinput22_inname = trim(auxinput22_inname) 
  RETURN
END SUBROUTINE nl_set_auxinput22_inname
SUBROUTINE nl_set_auxinput22_outname ( id_id , auxinput22_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput22_outname
  INTEGER id_id
  model_config_rec%auxinput22_outname = trim(auxinput22_outname) 
  RETURN
END SUBROUTINE nl_set_auxinput22_outname
SUBROUTINE nl_set_auxinput22_interval_y ( id_id , auxinput22_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput22_interval_y
  INTEGER id_id
  model_config_rec%auxinput22_interval_y(id_id) = auxinput22_interval_y
  RETURN
END SUBROUTINE nl_set_auxinput22_interval_y
SUBROUTINE nl_set_auxinput22_interval_d ( id_id , auxinput22_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput22_interval_d
  INTEGER id_id
  model_config_rec%auxinput22_interval_d(id_id) = auxinput22_interval_d
  RETURN
END SUBROUTINE nl_set_auxinput22_interval_d
SUBROUTINE nl_set_auxinput22_interval_h ( id_id , auxinput22_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput22_interval_h
  INTEGER id_id
  model_config_rec%auxinput22_interval_h(id_id) = auxinput22_interval_h
  RETURN
END SUBROUTINE nl_set_auxinput22_interval_h
SUBROUTINE nl_set_auxinput22_interval_m ( id_id , auxinput22_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput22_interval_m
  INTEGER id_id
  model_config_rec%auxinput22_interval_m(id_id) = auxinput22_interval_m
  RETURN
END SUBROUTINE nl_set_auxinput22_interval_m
SUBROUTINE nl_set_auxinput22_interval_s ( id_id , auxinput22_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput22_interval_s
  INTEGER id_id
  model_config_rec%auxinput22_interval_s(id_id) = auxinput22_interval_s
  RETURN
END SUBROUTINE nl_set_auxinput22_interval_s
SUBROUTINE nl_set_auxinput22_interval ( id_id , auxinput22_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput22_interval
  INTEGER id_id
  model_config_rec%auxinput22_interval(id_id) = auxinput22_interval
  RETURN
END SUBROUTINE nl_set_auxinput22_interval
SUBROUTINE nl_set_auxinput22_begin_y ( id_id , auxinput22_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput22_begin_y
  INTEGER id_id
  model_config_rec%auxinput22_begin_y(id_id) = auxinput22_begin_y
  RETURN
END SUBROUTINE nl_set_auxinput22_begin_y
SUBROUTINE nl_set_auxinput22_begin_d ( id_id , auxinput22_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput22_begin_d
  INTEGER id_id
  model_config_rec%auxinput22_begin_d(id_id) = auxinput22_begin_d
  RETURN
END SUBROUTINE nl_set_auxinput22_begin_d
SUBROUTINE nl_set_auxinput22_begin_h ( id_id , auxinput22_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput22_begin_h
  INTEGER id_id
  model_config_rec%auxinput22_begin_h(id_id) = auxinput22_begin_h
  RETURN
END SUBROUTINE nl_set_auxinput22_begin_h
SUBROUTINE nl_set_auxinput22_begin_m ( id_id , auxinput22_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput22_begin_m
  INTEGER id_id
  model_config_rec%auxinput22_begin_m(id_id) = auxinput22_begin_m
  RETURN
END SUBROUTINE nl_set_auxinput22_begin_m
SUBROUTINE nl_set_auxinput22_begin_s ( id_id , auxinput22_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput22_begin_s
  INTEGER id_id
  model_config_rec%auxinput22_begin_s(id_id) = auxinput22_begin_s
  RETURN
END SUBROUTINE nl_set_auxinput22_begin_s
SUBROUTINE nl_set_auxinput22_begin ( id_id , auxinput22_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput22_begin
  INTEGER id_id
  model_config_rec%auxinput22_begin(id_id) = auxinput22_begin
  RETURN
END SUBROUTINE nl_set_auxinput22_begin
SUBROUTINE nl_set_auxinput22_end_y ( id_id , auxinput22_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput22_end_y
  INTEGER id_id
  model_config_rec%auxinput22_end_y(id_id) = auxinput22_end_y
  RETURN
END SUBROUTINE nl_set_auxinput22_end_y
SUBROUTINE nl_set_auxinput22_end_d ( id_id , auxinput22_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput22_end_d
  INTEGER id_id
  model_config_rec%auxinput22_end_d(id_id) = auxinput22_end_d
  RETURN
END SUBROUTINE nl_set_auxinput22_end_d
SUBROUTINE nl_set_auxinput22_end_h ( id_id , auxinput22_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput22_end_h
  INTEGER id_id
  model_config_rec%auxinput22_end_h(id_id) = auxinput22_end_h
  RETURN
END SUBROUTINE nl_set_auxinput22_end_h
SUBROUTINE nl_set_auxinput22_end_m ( id_id , auxinput22_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput22_end_m
  INTEGER id_id
  model_config_rec%auxinput22_end_m(id_id) = auxinput22_end_m
  RETURN
END SUBROUTINE nl_set_auxinput22_end_m
SUBROUTINE nl_set_auxinput22_end_s ( id_id , auxinput22_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput22_end_s
  INTEGER id_id
  model_config_rec%auxinput22_end_s(id_id) = auxinput22_end_s
  RETURN
END SUBROUTINE nl_set_auxinput22_end_s
SUBROUTINE nl_set_auxinput22_end ( id_id , auxinput22_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput22_end
  INTEGER id_id
  model_config_rec%auxinput22_end(id_id) = auxinput22_end
  RETURN
END SUBROUTINE nl_set_auxinput22_end
SUBROUTINE nl_set_io_form_auxinput22 ( id_id , io_form_auxinput22 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxinput22
  INTEGER id_id
  model_config_rec%io_form_auxinput22 = io_form_auxinput22 
  RETURN
END SUBROUTINE nl_set_io_form_auxinput22
SUBROUTINE nl_set_frames_per_auxinput22 ( id_id , frames_per_auxinput22 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxinput22
  INTEGER id_id
  model_config_rec%frames_per_auxinput22(id_id) = frames_per_auxinput22
  RETURN
END SUBROUTINE nl_set_frames_per_auxinput22
SUBROUTINE nl_set_auxinput23_inname ( id_id , auxinput23_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput23_inname
  INTEGER id_id
  model_config_rec%auxinput23_inname = trim(auxinput23_inname) 
  RETURN
END SUBROUTINE nl_set_auxinput23_inname
SUBROUTINE nl_set_auxinput23_outname ( id_id , auxinput23_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput23_outname
  INTEGER id_id
  model_config_rec%auxinput23_outname = trim(auxinput23_outname) 
  RETURN
END SUBROUTINE nl_set_auxinput23_outname
SUBROUTINE nl_set_auxinput23_interval_y ( id_id , auxinput23_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput23_interval_y
  INTEGER id_id
  model_config_rec%auxinput23_interval_y(id_id) = auxinput23_interval_y
  RETURN
END SUBROUTINE nl_set_auxinput23_interval_y
SUBROUTINE nl_set_auxinput23_interval_d ( id_id , auxinput23_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput23_interval_d
  INTEGER id_id
  model_config_rec%auxinput23_interval_d(id_id) = auxinput23_interval_d
  RETURN
END SUBROUTINE nl_set_auxinput23_interval_d
SUBROUTINE nl_set_auxinput23_interval_h ( id_id , auxinput23_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput23_interval_h
  INTEGER id_id
  model_config_rec%auxinput23_interval_h(id_id) = auxinput23_interval_h
  RETURN
END SUBROUTINE nl_set_auxinput23_interval_h
SUBROUTINE nl_set_auxinput23_interval_m ( id_id , auxinput23_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput23_interval_m
  INTEGER id_id
  model_config_rec%auxinput23_interval_m(id_id) = auxinput23_interval_m
  RETURN
END SUBROUTINE nl_set_auxinput23_interval_m
SUBROUTINE nl_set_auxinput23_interval_s ( id_id , auxinput23_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput23_interval_s
  INTEGER id_id
  model_config_rec%auxinput23_interval_s(id_id) = auxinput23_interval_s
  RETURN
END SUBROUTINE nl_set_auxinput23_interval_s
SUBROUTINE nl_set_auxinput23_interval ( id_id , auxinput23_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput23_interval
  INTEGER id_id
  model_config_rec%auxinput23_interval(id_id) = auxinput23_interval
  RETURN
END SUBROUTINE nl_set_auxinput23_interval
SUBROUTINE nl_set_auxinput23_begin_y ( id_id , auxinput23_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput23_begin_y
  INTEGER id_id
  model_config_rec%auxinput23_begin_y(id_id) = auxinput23_begin_y
  RETURN
END SUBROUTINE nl_set_auxinput23_begin_y
SUBROUTINE nl_set_auxinput23_begin_d ( id_id , auxinput23_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput23_begin_d
  INTEGER id_id
  model_config_rec%auxinput23_begin_d(id_id) = auxinput23_begin_d
  RETURN
END SUBROUTINE nl_set_auxinput23_begin_d
SUBROUTINE nl_set_auxinput23_begin_h ( id_id , auxinput23_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput23_begin_h
  INTEGER id_id
  model_config_rec%auxinput23_begin_h(id_id) = auxinput23_begin_h
  RETURN
END SUBROUTINE nl_set_auxinput23_begin_h
SUBROUTINE nl_set_auxinput23_begin_m ( id_id , auxinput23_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput23_begin_m
  INTEGER id_id
  model_config_rec%auxinput23_begin_m(id_id) = auxinput23_begin_m
  RETURN
END SUBROUTINE nl_set_auxinput23_begin_m
SUBROUTINE nl_set_auxinput23_begin_s ( id_id , auxinput23_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput23_begin_s
  INTEGER id_id
  model_config_rec%auxinput23_begin_s(id_id) = auxinput23_begin_s
  RETURN
END SUBROUTINE nl_set_auxinput23_begin_s
SUBROUTINE nl_set_auxinput23_begin ( id_id , auxinput23_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput23_begin
  INTEGER id_id
  model_config_rec%auxinput23_begin(id_id) = auxinput23_begin
  RETURN
END SUBROUTINE nl_set_auxinput23_begin
SUBROUTINE nl_set_auxinput23_end_y ( id_id , auxinput23_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput23_end_y
  INTEGER id_id
  model_config_rec%auxinput23_end_y(id_id) = auxinput23_end_y
  RETURN
END SUBROUTINE nl_set_auxinput23_end_y
SUBROUTINE nl_set_auxinput23_end_d ( id_id , auxinput23_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput23_end_d
  INTEGER id_id
  model_config_rec%auxinput23_end_d(id_id) = auxinput23_end_d
  RETURN
END SUBROUTINE nl_set_auxinput23_end_d
SUBROUTINE nl_set_auxinput23_end_h ( id_id , auxinput23_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput23_end_h
  INTEGER id_id
  model_config_rec%auxinput23_end_h(id_id) = auxinput23_end_h
  RETURN
END SUBROUTINE nl_set_auxinput23_end_h
SUBROUTINE nl_set_auxinput23_end_m ( id_id , auxinput23_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput23_end_m
  INTEGER id_id
  model_config_rec%auxinput23_end_m(id_id) = auxinput23_end_m
  RETURN
END SUBROUTINE nl_set_auxinput23_end_m
SUBROUTINE nl_set_auxinput23_end_s ( id_id , auxinput23_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput23_end_s
  INTEGER id_id
  model_config_rec%auxinput23_end_s(id_id) = auxinput23_end_s
  RETURN
END SUBROUTINE nl_set_auxinput23_end_s
SUBROUTINE nl_set_auxinput23_end ( id_id , auxinput23_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput23_end
  INTEGER id_id
  model_config_rec%auxinput23_end(id_id) = auxinput23_end
  RETURN
END SUBROUTINE nl_set_auxinput23_end
SUBROUTINE nl_set_io_form_auxinput23 ( id_id , io_form_auxinput23 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxinput23
  INTEGER id_id
  model_config_rec%io_form_auxinput23 = io_form_auxinput23 
  RETURN
END SUBROUTINE nl_set_io_form_auxinput23
SUBROUTINE nl_set_frames_per_auxinput23 ( id_id , frames_per_auxinput23 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxinput23
  INTEGER id_id
  model_config_rec%frames_per_auxinput23(id_id) = frames_per_auxinput23
  RETURN
END SUBROUTINE nl_set_frames_per_auxinput23
SUBROUTINE nl_set_auxinput24_inname ( id_id , auxinput24_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput24_inname
  INTEGER id_id
  model_config_rec%auxinput24_inname = trim(auxinput24_inname) 
  RETURN
END SUBROUTINE nl_set_auxinput24_inname
SUBROUTINE nl_set_auxinput24_outname ( id_id , auxinput24_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: auxinput24_outname
  INTEGER id_id
  model_config_rec%auxinput24_outname = trim(auxinput24_outname) 
  RETURN
END SUBROUTINE nl_set_auxinput24_outname
SUBROUTINE nl_set_auxinput24_interval_y ( id_id , auxinput24_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput24_interval_y
  INTEGER id_id
  model_config_rec%auxinput24_interval_y(id_id) = auxinput24_interval_y
  RETURN
END SUBROUTINE nl_set_auxinput24_interval_y
SUBROUTINE nl_set_auxinput24_interval_d ( id_id , auxinput24_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput24_interval_d
  INTEGER id_id
  model_config_rec%auxinput24_interval_d(id_id) = auxinput24_interval_d
  RETURN
END SUBROUTINE nl_set_auxinput24_interval_d
SUBROUTINE nl_set_auxinput24_interval_h ( id_id , auxinput24_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput24_interval_h
  INTEGER id_id
  model_config_rec%auxinput24_interval_h(id_id) = auxinput24_interval_h
  RETURN
END SUBROUTINE nl_set_auxinput24_interval_h
SUBROUTINE nl_set_auxinput24_interval_m ( id_id , auxinput24_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput24_interval_m
  INTEGER id_id
  model_config_rec%auxinput24_interval_m(id_id) = auxinput24_interval_m
  RETURN
END SUBROUTINE nl_set_auxinput24_interval_m
SUBROUTINE nl_set_auxinput24_interval_s ( id_id , auxinput24_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput24_interval_s
  INTEGER id_id
  model_config_rec%auxinput24_interval_s(id_id) = auxinput24_interval_s
  RETURN
END SUBROUTINE nl_set_auxinput24_interval_s
SUBROUTINE nl_set_auxinput24_interval ( id_id , auxinput24_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput24_interval
  INTEGER id_id
  model_config_rec%auxinput24_interval(id_id) = auxinput24_interval
  RETURN
END SUBROUTINE nl_set_auxinput24_interval
SUBROUTINE nl_set_auxinput24_begin_y ( id_id , auxinput24_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput24_begin_y
  INTEGER id_id
  model_config_rec%auxinput24_begin_y(id_id) = auxinput24_begin_y
  RETURN
END SUBROUTINE nl_set_auxinput24_begin_y
SUBROUTINE nl_set_auxinput24_begin_d ( id_id , auxinput24_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput24_begin_d
  INTEGER id_id
  model_config_rec%auxinput24_begin_d(id_id) = auxinput24_begin_d
  RETURN
END SUBROUTINE nl_set_auxinput24_begin_d
SUBROUTINE nl_set_auxinput24_begin_h ( id_id , auxinput24_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput24_begin_h
  INTEGER id_id
  model_config_rec%auxinput24_begin_h(id_id) = auxinput24_begin_h
  RETURN
END SUBROUTINE nl_set_auxinput24_begin_h
SUBROUTINE nl_set_auxinput24_begin_m ( id_id , auxinput24_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput24_begin_m
  INTEGER id_id
  model_config_rec%auxinput24_begin_m(id_id) = auxinput24_begin_m
  RETURN
END SUBROUTINE nl_set_auxinput24_begin_m
SUBROUTINE nl_set_auxinput24_begin_s ( id_id , auxinput24_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput24_begin_s
  INTEGER id_id
  model_config_rec%auxinput24_begin_s(id_id) = auxinput24_begin_s
  RETURN
END SUBROUTINE nl_set_auxinput24_begin_s
SUBROUTINE nl_set_auxinput24_begin ( id_id , auxinput24_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput24_begin
  INTEGER id_id
  model_config_rec%auxinput24_begin(id_id) = auxinput24_begin
  RETURN
END SUBROUTINE nl_set_auxinput24_begin
SUBROUTINE nl_set_auxinput24_end_y ( id_id , auxinput24_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput24_end_y
  INTEGER id_id
  model_config_rec%auxinput24_end_y(id_id) = auxinput24_end_y
  RETURN
END SUBROUTINE nl_set_auxinput24_end_y
SUBROUTINE nl_set_auxinput24_end_d ( id_id , auxinput24_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput24_end_d
  INTEGER id_id
  model_config_rec%auxinput24_end_d(id_id) = auxinput24_end_d
  RETURN
END SUBROUTINE nl_set_auxinput24_end_d
SUBROUTINE nl_set_auxinput24_end_h ( id_id , auxinput24_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput24_end_h
  INTEGER id_id
  model_config_rec%auxinput24_end_h(id_id) = auxinput24_end_h
  RETURN
END SUBROUTINE nl_set_auxinput24_end_h
SUBROUTINE nl_set_auxinput24_end_m ( id_id , auxinput24_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput24_end_m
  INTEGER id_id
  model_config_rec%auxinput24_end_m(id_id) = auxinput24_end_m
  RETURN
END SUBROUTINE nl_set_auxinput24_end_m
SUBROUTINE nl_set_auxinput24_end_s ( id_id , auxinput24_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput24_end_s
  INTEGER id_id
  model_config_rec%auxinput24_end_s(id_id) = auxinput24_end_s
  RETURN
END SUBROUTINE nl_set_auxinput24_end_s
SUBROUTINE nl_set_auxinput24_end ( id_id , auxinput24_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: auxinput24_end
  INTEGER id_id
  model_config_rec%auxinput24_end(id_id) = auxinput24_end
  RETURN
END SUBROUTINE nl_set_auxinput24_end
SUBROUTINE nl_set_io_form_auxinput24 ( id_id , io_form_auxinput24 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_auxinput24
  INTEGER id_id
  model_config_rec%io_form_auxinput24 = io_form_auxinput24 
  RETURN
END SUBROUTINE nl_set_io_form_auxinput24
SUBROUTINE nl_set_frames_per_auxinput24 ( id_id , frames_per_auxinput24 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_auxinput24
  INTEGER id_id
  model_config_rec%frames_per_auxinput24(id_id) = frames_per_auxinput24
  RETURN
END SUBROUTINE nl_set_frames_per_auxinput24
SUBROUTINE nl_set_history_interval ( id_id , history_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: history_interval
  INTEGER id_id
  model_config_rec%history_interval(id_id) = history_interval
  RETURN
END SUBROUTINE nl_set_history_interval
SUBROUTINE nl_set_frames_per_outfile ( id_id , frames_per_outfile )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: frames_per_outfile
  INTEGER id_id
  model_config_rec%frames_per_outfile(id_id) = frames_per_outfile
  RETURN
END SUBROUTINE nl_set_frames_per_outfile
SUBROUTINE nl_set_restart ( id_id , restart )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: restart
  INTEGER id_id
  model_config_rec%restart = restart 
  RETURN
END SUBROUTINE nl_set_restart
SUBROUTINE nl_set_restart_interval ( id_id , restart_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: restart_interval
  INTEGER id_id
  model_config_rec%restart_interval = restart_interval 
  RETURN
END SUBROUTINE nl_set_restart_interval
SUBROUTINE nl_set_io_form_input ( id_id , io_form_input )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_input
  INTEGER id_id
  model_config_rec%io_form_input = io_form_input 
  RETURN
END SUBROUTINE nl_set_io_form_input
SUBROUTINE nl_set_io_form_history ( id_id , io_form_history )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_history
  INTEGER id_id
  model_config_rec%io_form_history = io_form_history 
  RETURN
END SUBROUTINE nl_set_io_form_history
SUBROUTINE nl_set_io_form_restart ( id_id , io_form_restart )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_restart
  INTEGER id_id
  model_config_rec%io_form_restart = io_form_restart 
  RETURN
END SUBROUTINE nl_set_io_form_restart
SUBROUTINE nl_set_io_form_boundary ( id_id , io_form_boundary )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_boundary
  INTEGER id_id
  model_config_rec%io_form_boundary = io_form_boundary 
  RETURN
END SUBROUTINE nl_set_io_form_boundary
SUBROUTINE nl_set_debug_level ( id_id , debug_level )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: debug_level
  INTEGER id_id
  model_config_rec%debug_level = debug_level 
  RETURN
END SUBROUTINE nl_set_debug_level
SUBROUTINE nl_set_self_test_domain ( id_id , self_test_domain )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: self_test_domain
  INTEGER id_id
  model_config_rec%self_test_domain = self_test_domain 
  RETURN
END SUBROUTINE nl_set_self_test_domain
SUBROUTINE nl_set_history_outname ( id_id , history_outname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: history_outname
  INTEGER id_id
  model_config_rec%history_outname = trim(history_outname) 
  RETURN
END SUBROUTINE nl_set_history_outname
SUBROUTINE nl_set_history_inname ( id_id , history_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: history_inname
  INTEGER id_id
  model_config_rec%history_inname = trim(history_inname) 
  RETURN
END SUBROUTINE nl_set_history_inname
SUBROUTINE nl_set_use_netcdf_classic ( id_id , use_netcdf_classic )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: use_netcdf_classic
  INTEGER id_id
  model_config_rec%use_netcdf_classic = use_netcdf_classic 
  RETURN
END SUBROUTINE nl_set_use_netcdf_classic
SUBROUTINE nl_set_history_interval_d ( id_id , history_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: history_interval_d
  INTEGER id_id
  model_config_rec%history_interval_d(id_id) = history_interval_d
  RETURN
END SUBROUTINE nl_set_history_interval_d
SUBROUTINE nl_set_history_interval_h ( id_id , history_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: history_interval_h
  INTEGER id_id
  model_config_rec%history_interval_h(id_id) = history_interval_h
  RETURN
END SUBROUTINE nl_set_history_interval_h
SUBROUTINE nl_set_history_interval_m ( id_id , history_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: history_interval_m
  INTEGER id_id
  model_config_rec%history_interval_m(id_id) = history_interval_m
  RETURN
END SUBROUTINE nl_set_history_interval_m
SUBROUTINE nl_set_history_interval_s ( id_id , history_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: history_interval_s
  INTEGER id_id
  model_config_rec%history_interval_s(id_id) = history_interval_s
  RETURN
END SUBROUTINE nl_set_history_interval_s
SUBROUTINE nl_set_inputout_interval_d ( id_id , inputout_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: inputout_interval_d
  INTEGER id_id
  model_config_rec%inputout_interval_d(id_id) = inputout_interval_d
  RETURN
END SUBROUTINE nl_set_inputout_interval_d
SUBROUTINE nl_set_inputout_interval_h ( id_id , inputout_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: inputout_interval_h
  INTEGER id_id
  model_config_rec%inputout_interval_h(id_id) = inputout_interval_h
  RETURN
END SUBROUTINE nl_set_inputout_interval_h
SUBROUTINE nl_set_inputout_interval_m ( id_id , inputout_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: inputout_interval_m
  INTEGER id_id
  model_config_rec%inputout_interval_m(id_id) = inputout_interval_m
  RETURN
END SUBROUTINE nl_set_inputout_interval_m
SUBROUTINE nl_set_inputout_interval_s ( id_id , inputout_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: inputout_interval_s
  INTEGER id_id
  model_config_rec%inputout_interval_s(id_id) = inputout_interval_s
  RETURN
END SUBROUTINE nl_set_inputout_interval_s
SUBROUTINE nl_set_inputout_interval ( id_id , inputout_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: inputout_interval
  INTEGER id_id
  model_config_rec%inputout_interval(id_id) = inputout_interval
  RETURN
END SUBROUTINE nl_set_inputout_interval
SUBROUTINE nl_set_restart_interval_d ( id_id , restart_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: restart_interval_d
  INTEGER id_id
  model_config_rec%restart_interval_d = restart_interval_d 
  RETURN
END SUBROUTINE nl_set_restart_interval_d
SUBROUTINE nl_set_restart_interval_h ( id_id , restart_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: restart_interval_h
  INTEGER id_id
  model_config_rec%restart_interval_h = restart_interval_h 
  RETURN
END SUBROUTINE nl_set_restart_interval_h
SUBROUTINE nl_set_restart_interval_m ( id_id , restart_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: restart_interval_m
  INTEGER id_id
  model_config_rec%restart_interval_m = restart_interval_m 
  RETURN
END SUBROUTINE nl_set_restart_interval_m
SUBROUTINE nl_set_restart_interval_s ( id_id , restart_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: restart_interval_s
  INTEGER id_id
  model_config_rec%restart_interval_s = restart_interval_s 
  RETURN
END SUBROUTINE nl_set_restart_interval_s
SUBROUTINE nl_set_history_begin_y ( id_id , history_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: history_begin_y
  INTEGER id_id
  model_config_rec%history_begin_y(id_id) = history_begin_y
  RETURN
END SUBROUTINE nl_set_history_begin_y
SUBROUTINE nl_set_history_begin_d ( id_id , history_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: history_begin_d
  INTEGER id_id
  model_config_rec%history_begin_d(id_id) = history_begin_d
  RETURN
END SUBROUTINE nl_set_history_begin_d
SUBROUTINE nl_set_history_begin_h ( id_id , history_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: history_begin_h
  INTEGER id_id
  model_config_rec%history_begin_h(id_id) = history_begin_h
  RETURN
END SUBROUTINE nl_set_history_begin_h
SUBROUTINE nl_set_history_begin_m ( id_id , history_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: history_begin_m
  INTEGER id_id
  model_config_rec%history_begin_m(id_id) = history_begin_m
  RETURN
END SUBROUTINE nl_set_history_begin_m
SUBROUTINE nl_set_history_begin_s ( id_id , history_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: history_begin_s
  INTEGER id_id
  model_config_rec%history_begin_s(id_id) = history_begin_s
  RETURN
END SUBROUTINE nl_set_history_begin_s
SUBROUTINE nl_set_history_begin ( id_id , history_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: history_begin
  INTEGER id_id
  model_config_rec%history_begin(id_id) = history_begin
  RETURN
END SUBROUTINE nl_set_history_begin
SUBROUTINE nl_set_inputout_begin_y ( id_id , inputout_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: inputout_begin_y
  INTEGER id_id
  model_config_rec%inputout_begin_y(id_id) = inputout_begin_y
  RETURN
END SUBROUTINE nl_set_inputout_begin_y
SUBROUTINE nl_set_inputout_begin_d ( id_id , inputout_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: inputout_begin_d
  INTEGER id_id
  model_config_rec%inputout_begin_d(id_id) = inputout_begin_d
  RETURN
END SUBROUTINE nl_set_inputout_begin_d
SUBROUTINE nl_set_inputout_begin_h ( id_id , inputout_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: inputout_begin_h
  INTEGER id_id
  model_config_rec%inputout_begin_h(id_id) = inputout_begin_h
  RETURN
END SUBROUTINE nl_set_inputout_begin_h
SUBROUTINE nl_set_inputout_begin_m ( id_id , inputout_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: inputout_begin_m
  INTEGER id_id
  model_config_rec%inputout_begin_m(id_id) = inputout_begin_m
  RETURN
END SUBROUTINE nl_set_inputout_begin_m
SUBROUTINE nl_set_inputout_begin_s ( id_id , inputout_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: inputout_begin_s
  INTEGER id_id
  model_config_rec%inputout_begin_s(id_id) = inputout_begin_s
  RETURN
END SUBROUTINE nl_set_inputout_begin_s
SUBROUTINE nl_set_restart_begin_y ( id_id , restart_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: restart_begin_y
  INTEGER id_id
  model_config_rec%restart_begin_y = restart_begin_y 
  RETURN
END SUBROUTINE nl_set_restart_begin_y
SUBROUTINE nl_set_restart_begin_d ( id_id , restart_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: restart_begin_d
  INTEGER id_id
  model_config_rec%restart_begin_d = restart_begin_d 
  RETURN
END SUBROUTINE nl_set_restart_begin_d
SUBROUTINE nl_set_restart_begin_h ( id_id , restart_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: restart_begin_h
  INTEGER id_id
  model_config_rec%restart_begin_h = restart_begin_h 
  RETURN
END SUBROUTINE nl_set_restart_begin_h
SUBROUTINE nl_set_restart_begin_m ( id_id , restart_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: restart_begin_m
  INTEGER id_id
  model_config_rec%restart_begin_m = restart_begin_m 
  RETURN
END SUBROUTINE nl_set_restart_begin_m
SUBROUTINE nl_set_restart_begin_s ( id_id , restart_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: restart_begin_s
  INTEGER id_id
  model_config_rec%restart_begin_s = restart_begin_s 
  RETURN
END SUBROUTINE nl_set_restart_begin_s
SUBROUTINE nl_set_restart_begin ( id_id , restart_begin )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: restart_begin
  INTEGER id_id
  model_config_rec%restart_begin = restart_begin 
  RETURN
END SUBROUTINE nl_set_restart_begin
SUBROUTINE nl_set_history_end_y ( id_id , history_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: history_end_y
  INTEGER id_id
  model_config_rec%history_end_y(id_id) = history_end_y
  RETURN
END SUBROUTINE nl_set_history_end_y
SUBROUTINE nl_set_history_end_d ( id_id , history_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: history_end_d
  INTEGER id_id
  model_config_rec%history_end_d(id_id) = history_end_d
  RETURN
END SUBROUTINE nl_set_history_end_d
SUBROUTINE nl_set_history_end_h ( id_id , history_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: history_end_h
  INTEGER id_id
  model_config_rec%history_end_h(id_id) = history_end_h
  RETURN
END SUBROUTINE nl_set_history_end_h
SUBROUTINE nl_set_history_end_m ( id_id , history_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: history_end_m
  INTEGER id_id
  model_config_rec%history_end_m(id_id) = history_end_m
  RETURN
END SUBROUTINE nl_set_history_end_m
SUBROUTINE nl_set_history_end_s ( id_id , history_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: history_end_s
  INTEGER id_id
  model_config_rec%history_end_s(id_id) = history_end_s
  RETURN
END SUBROUTINE nl_set_history_end_s
SUBROUTINE nl_set_history_end ( id_id , history_end )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: history_end
  INTEGER id_id
  model_config_rec%history_end(id_id) = history_end
  RETURN
END SUBROUTINE nl_set_history_end
SUBROUTINE nl_set_inputout_end_y ( id_id , inputout_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: inputout_end_y
  INTEGER id_id
  model_config_rec%inputout_end_y(id_id) = inputout_end_y
  RETURN
END SUBROUTINE nl_set_inputout_end_y
SUBROUTINE nl_set_inputout_end_d ( id_id , inputout_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: inputout_end_d
  INTEGER id_id
  model_config_rec%inputout_end_d(id_id) = inputout_end_d
  RETURN
END SUBROUTINE nl_set_inputout_end_d
SUBROUTINE nl_set_inputout_end_h ( id_id , inputout_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: inputout_end_h
  INTEGER id_id
  model_config_rec%inputout_end_h(id_id) = inputout_end_h
  RETURN
END SUBROUTINE nl_set_inputout_end_h
SUBROUTINE nl_set_inputout_end_m ( id_id , inputout_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: inputout_end_m
  INTEGER id_id
  model_config_rec%inputout_end_m(id_id) = inputout_end_m
  RETURN
END SUBROUTINE nl_set_inputout_end_m
SUBROUTINE nl_set_inputout_end_s ( id_id , inputout_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: inputout_end_s
  INTEGER id_id
  model_config_rec%inputout_end_s(id_id) = inputout_end_s
  RETURN
END SUBROUTINE nl_set_inputout_end_s
SUBROUTINE nl_set_simulation_start_year ( id_id , simulation_start_year )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: simulation_start_year
  INTEGER id_id
  model_config_rec%simulation_start_year = simulation_start_year 
  RETURN
END SUBROUTINE nl_set_simulation_start_year
SUBROUTINE nl_set_simulation_start_month ( id_id , simulation_start_month )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: simulation_start_month
  INTEGER id_id
  model_config_rec%simulation_start_month = simulation_start_month 
  RETURN
END SUBROUTINE nl_set_simulation_start_month
SUBROUTINE nl_set_simulation_start_day ( id_id , simulation_start_day )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: simulation_start_day
  INTEGER id_id
  model_config_rec%simulation_start_day = simulation_start_day 
  RETURN
END SUBROUTINE nl_set_simulation_start_day
SUBROUTINE nl_set_simulation_start_hour ( id_id , simulation_start_hour )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: simulation_start_hour
  INTEGER id_id
  model_config_rec%simulation_start_hour = simulation_start_hour 
  RETURN
END SUBROUTINE nl_set_simulation_start_hour
SUBROUTINE nl_set_simulation_start_minute ( id_id , simulation_start_minute )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: simulation_start_minute
  INTEGER id_id
  model_config_rec%simulation_start_minute = simulation_start_minute 
  RETURN
END SUBROUTINE nl_set_simulation_start_minute
SUBROUTINE nl_set_simulation_start_second ( id_id , simulation_start_second )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: simulation_start_second
  INTEGER id_id
  model_config_rec%simulation_start_second = simulation_start_second 
  RETURN
END SUBROUTINE nl_set_simulation_start_second
SUBROUTINE nl_set_reset_simulation_start ( id_id , reset_simulation_start )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: reset_simulation_start
  INTEGER id_id
  model_config_rec%reset_simulation_start = reset_simulation_start 
  RETURN
END SUBROUTINE nl_set_reset_simulation_start
SUBROUTINE nl_set_sr_x ( id_id , sr_x )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: sr_x
  INTEGER id_id
  model_config_rec%sr_x(id_id) = sr_x
  RETURN
END SUBROUTINE nl_set_sr_x
SUBROUTINE nl_set_sr_y ( id_id , sr_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: sr_y
  INTEGER id_id
  model_config_rec%sr_y(id_id) = sr_y
  RETURN
END SUBROUTINE nl_set_sr_y
SUBROUTINE nl_set_sgfdda_inname ( id_id , sgfdda_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: sgfdda_inname
  INTEGER id_id
  model_config_rec%sgfdda_inname = trim(sgfdda_inname) 
  RETURN
END SUBROUTINE nl_set_sgfdda_inname
SUBROUTINE nl_set_gfdda_inname ( id_id , gfdda_inname )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: gfdda_inname
  INTEGER id_id
  model_config_rec%gfdda_inname = trim(gfdda_inname) 
  RETURN
END SUBROUTINE nl_set_gfdda_inname
SUBROUTINE nl_set_sgfdda_interval_d ( id_id , sgfdda_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: sgfdda_interval_d
  INTEGER id_id
  model_config_rec%sgfdda_interval_d(id_id) = sgfdda_interval_d
  RETURN
END SUBROUTINE nl_set_sgfdda_interval_d
SUBROUTINE nl_set_sgfdda_interval_h ( id_id , sgfdda_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: sgfdda_interval_h
  INTEGER id_id
  model_config_rec%sgfdda_interval_h(id_id) = sgfdda_interval_h
  RETURN
END SUBROUTINE nl_set_sgfdda_interval_h
SUBROUTINE nl_set_sgfdda_interval_m ( id_id , sgfdda_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: sgfdda_interval_m
  INTEGER id_id
  model_config_rec%sgfdda_interval_m(id_id) = sgfdda_interval_m
  RETURN
END SUBROUTINE nl_set_sgfdda_interval_m
SUBROUTINE nl_set_sgfdda_interval_s ( id_id , sgfdda_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: sgfdda_interval_s
  INTEGER id_id
  model_config_rec%sgfdda_interval_s(id_id) = sgfdda_interval_s
  RETURN
END SUBROUTINE nl_set_sgfdda_interval_s
SUBROUTINE nl_set_sgfdda_interval_y ( id_id , sgfdda_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: sgfdda_interval_y
  INTEGER id_id
  model_config_rec%sgfdda_interval_y(id_id) = sgfdda_interval_y
  RETURN
END SUBROUTINE nl_set_sgfdda_interval_y
SUBROUTINE nl_set_sgfdda_interval ( id_id , sgfdda_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: sgfdda_interval
  INTEGER id_id
  model_config_rec%sgfdda_interval(id_id) = sgfdda_interval
  RETURN
END SUBROUTINE nl_set_sgfdda_interval
SUBROUTINE nl_set_gfdda_interval_d ( id_id , gfdda_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: gfdda_interval_d
  INTEGER id_id
  model_config_rec%gfdda_interval_d(id_id) = gfdda_interval_d
  RETURN
END SUBROUTINE nl_set_gfdda_interval_d
SUBROUTINE nl_set_gfdda_interval_h ( id_id , gfdda_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: gfdda_interval_h
  INTEGER id_id
  model_config_rec%gfdda_interval_h(id_id) = gfdda_interval_h
  RETURN
END SUBROUTINE nl_set_gfdda_interval_h
SUBROUTINE nl_set_gfdda_interval_m ( id_id , gfdda_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: gfdda_interval_m
  INTEGER id_id
  model_config_rec%gfdda_interval_m(id_id) = gfdda_interval_m
  RETURN
END SUBROUTINE nl_set_gfdda_interval_m
SUBROUTINE nl_set_gfdda_interval_s ( id_id , gfdda_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: gfdda_interval_s
  INTEGER id_id
  model_config_rec%gfdda_interval_s(id_id) = gfdda_interval_s
  RETURN
END SUBROUTINE nl_set_gfdda_interval_s
SUBROUTINE nl_set_gfdda_interval_y ( id_id , gfdda_interval_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: gfdda_interval_y
  INTEGER id_id
  model_config_rec%gfdda_interval_y(id_id) = gfdda_interval_y
  RETURN
END SUBROUTINE nl_set_gfdda_interval_y
SUBROUTINE nl_set_gfdda_interval ( id_id , gfdda_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: gfdda_interval
  INTEGER id_id
  model_config_rec%gfdda_interval(id_id) = gfdda_interval
  RETURN
END SUBROUTINE nl_set_gfdda_interval
SUBROUTINE nl_set_sgfdda_begin_y ( id_id , sgfdda_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: sgfdda_begin_y
  INTEGER id_id
  model_config_rec%sgfdda_begin_y(id_id) = sgfdda_begin_y
  RETURN
END SUBROUTINE nl_set_sgfdda_begin_y
SUBROUTINE nl_set_sgfdda_begin_d ( id_id , sgfdda_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: sgfdda_begin_d
  INTEGER id_id
  model_config_rec%sgfdda_begin_d(id_id) = sgfdda_begin_d
  RETURN
END SUBROUTINE nl_set_sgfdda_begin_d
SUBROUTINE nl_set_sgfdda_begin_h ( id_id , sgfdda_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: sgfdda_begin_h
  INTEGER id_id
  model_config_rec%sgfdda_begin_h(id_id) = sgfdda_begin_h
  RETURN
END SUBROUTINE nl_set_sgfdda_begin_h
SUBROUTINE nl_set_sgfdda_begin_m ( id_id , sgfdda_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: sgfdda_begin_m
  INTEGER id_id
  model_config_rec%sgfdda_begin_m(id_id) = sgfdda_begin_m
  RETURN
END SUBROUTINE nl_set_sgfdda_begin_m
SUBROUTINE nl_set_sgfdda_begin_s ( id_id , sgfdda_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: sgfdda_begin_s
  INTEGER id_id
  model_config_rec%sgfdda_begin_s(id_id) = sgfdda_begin_s
  RETURN
END SUBROUTINE nl_set_sgfdda_begin_s
SUBROUTINE nl_set_gfdda_begin_y ( id_id , gfdda_begin_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: gfdda_begin_y
  INTEGER id_id
  model_config_rec%gfdda_begin_y(id_id) = gfdda_begin_y
  RETURN
END SUBROUTINE nl_set_gfdda_begin_y
SUBROUTINE nl_set_gfdda_begin_d ( id_id , gfdda_begin_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: gfdda_begin_d
  INTEGER id_id
  model_config_rec%gfdda_begin_d(id_id) = gfdda_begin_d
  RETURN
END SUBROUTINE nl_set_gfdda_begin_d
SUBROUTINE nl_set_gfdda_begin_h ( id_id , gfdda_begin_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: gfdda_begin_h
  INTEGER id_id
  model_config_rec%gfdda_begin_h(id_id) = gfdda_begin_h
  RETURN
END SUBROUTINE nl_set_gfdda_begin_h
SUBROUTINE nl_set_gfdda_begin_m ( id_id , gfdda_begin_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: gfdda_begin_m
  INTEGER id_id
  model_config_rec%gfdda_begin_m(id_id) = gfdda_begin_m
  RETURN
END SUBROUTINE nl_set_gfdda_begin_m
SUBROUTINE nl_set_gfdda_begin_s ( id_id , gfdda_begin_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: gfdda_begin_s
  INTEGER id_id
  model_config_rec%gfdda_begin_s(id_id) = gfdda_begin_s
  RETURN
END SUBROUTINE nl_set_gfdda_begin_s
SUBROUTINE nl_set_sgfdda_end_y ( id_id , sgfdda_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: sgfdda_end_y
  INTEGER id_id
  model_config_rec%sgfdda_end_y(id_id) = sgfdda_end_y
  RETURN
END SUBROUTINE nl_set_sgfdda_end_y
SUBROUTINE nl_set_sgfdda_end_d ( id_id , sgfdda_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: sgfdda_end_d
  INTEGER id_id
  model_config_rec%sgfdda_end_d(id_id) = sgfdda_end_d
  RETURN
END SUBROUTINE nl_set_sgfdda_end_d
SUBROUTINE nl_set_sgfdda_end_h ( id_id , sgfdda_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: sgfdda_end_h
  INTEGER id_id
  model_config_rec%sgfdda_end_h(id_id) = sgfdda_end_h
  RETURN
END SUBROUTINE nl_set_sgfdda_end_h
SUBROUTINE nl_set_sgfdda_end_m ( id_id , sgfdda_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: sgfdda_end_m
  INTEGER id_id
  model_config_rec%sgfdda_end_m(id_id) = sgfdda_end_m
  RETURN
END SUBROUTINE nl_set_sgfdda_end_m
SUBROUTINE nl_set_sgfdda_end_s ( id_id , sgfdda_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: sgfdda_end_s
  INTEGER id_id
  model_config_rec%sgfdda_end_s(id_id) = sgfdda_end_s
  RETURN
END SUBROUTINE nl_set_sgfdda_end_s
SUBROUTINE nl_set_gfdda_end_y ( id_id , gfdda_end_y )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: gfdda_end_y
  INTEGER id_id
  model_config_rec%gfdda_end_y(id_id) = gfdda_end_y
  RETURN
END SUBROUTINE nl_set_gfdda_end_y
SUBROUTINE nl_set_gfdda_end_d ( id_id , gfdda_end_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: gfdda_end_d
  INTEGER id_id
  model_config_rec%gfdda_end_d(id_id) = gfdda_end_d
  RETURN
END SUBROUTINE nl_set_gfdda_end_d
SUBROUTINE nl_set_gfdda_end_h ( id_id , gfdda_end_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: gfdda_end_h
  INTEGER id_id
  model_config_rec%gfdda_end_h(id_id) = gfdda_end_h
  RETURN
END SUBROUTINE nl_set_gfdda_end_h
SUBROUTINE nl_set_gfdda_end_m ( id_id , gfdda_end_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: gfdda_end_m
  INTEGER id_id
  model_config_rec%gfdda_end_m(id_id) = gfdda_end_m
  RETURN
END SUBROUTINE nl_set_gfdda_end_m
SUBROUTINE nl_set_gfdda_end_s ( id_id , gfdda_end_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: gfdda_end_s
  INTEGER id_id
  model_config_rec%gfdda_end_s(id_id) = gfdda_end_s
  RETURN
END SUBROUTINE nl_set_gfdda_end_s
SUBROUTINE nl_set_io_form_sgfdda ( id_id , io_form_sgfdda )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_sgfdda
  INTEGER id_id
  model_config_rec%io_form_sgfdda = io_form_sgfdda 
  RETURN
END SUBROUTINE nl_set_io_form_sgfdda
SUBROUTINE nl_set_io_form_gfdda ( id_id , io_form_gfdda )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: io_form_gfdda
  INTEGER id_id
  model_config_rec%io_form_gfdda = io_form_gfdda 
  RETURN
END SUBROUTINE nl_set_io_form_gfdda
SUBROUTINE nl_set_iofields_filename ( id_id , iofields_filename )
  USE module_configure, ONLY : model_config_rec 
  character*256 , INTENT(IN) :: iofields_filename
  INTEGER id_id
  model_config_rec%iofields_filename(id_id) = iofields_filename
  RETURN
END SUBROUTINE nl_set_iofields_filename
SUBROUTINE nl_set_ignore_iofields_warning ( id_id , ignore_iofields_warning )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: ignore_iofields_warning
  INTEGER id_id
  model_config_rec%ignore_iofields_warning = ignore_iofields_warning 
  RETURN
END SUBROUTINE nl_set_ignore_iofields_warning
SUBROUTINE nl_set_ncd_nofill ( id_id , ncd_nofill )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: ncd_nofill
  INTEGER id_id
  model_config_rec%ncd_nofill = ncd_nofill 
  RETURN
END SUBROUTINE nl_set_ncd_nofill
SUBROUTINE nl_set_ifire ( id_id , ifire )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: ifire
  INTEGER id_id
  model_config_rec%ifire(id_id) = ifire
  RETURN
END SUBROUTINE nl_set_ifire
SUBROUTINE nl_set_fire_boundary_guard ( id_id , fire_boundary_guard )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: fire_boundary_guard
  INTEGER id_id
  model_config_rec%fire_boundary_guard(id_id) = fire_boundary_guard
  RETURN
END SUBROUTINE nl_set_fire_boundary_guard
SUBROUTINE nl_set_fire_num_ignitions ( id_id , fire_num_ignitions )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: fire_num_ignitions
  INTEGER id_id
  model_config_rec%fire_num_ignitions(id_id) = fire_num_ignitions
  RETURN
END SUBROUTINE nl_set_fire_num_ignitions
SUBROUTINE nl_set_fire_ignition_ros1 ( id_id , fire_ignition_ros1 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_ros1
  INTEGER id_id
  model_config_rec%fire_ignition_ros1(id_id) = fire_ignition_ros1
  RETURN
END SUBROUTINE nl_set_fire_ignition_ros1
#endif
#if (NNN == 7)
SUBROUTINE nl_set_fire_ignition_start_lon1 ( id_id , fire_ignition_start_lon1 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_start_lon1
  INTEGER id_id
  model_config_rec%fire_ignition_start_lon1(id_id) = fire_ignition_start_lon1
  RETURN
END SUBROUTINE nl_set_fire_ignition_start_lon1
SUBROUTINE nl_set_fire_ignition_start_lat1 ( id_id , fire_ignition_start_lat1 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_start_lat1
  INTEGER id_id
  model_config_rec%fire_ignition_start_lat1(id_id) = fire_ignition_start_lat1
  RETURN
END SUBROUTINE nl_set_fire_ignition_start_lat1
SUBROUTINE nl_set_fire_ignition_end_lon1 ( id_id , fire_ignition_end_lon1 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_end_lon1
  INTEGER id_id
  model_config_rec%fire_ignition_end_lon1(id_id) = fire_ignition_end_lon1
  RETURN
END SUBROUTINE nl_set_fire_ignition_end_lon1
SUBROUTINE nl_set_fire_ignition_end_lat1 ( id_id , fire_ignition_end_lat1 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_end_lat1
  INTEGER id_id
  model_config_rec%fire_ignition_end_lat1(id_id) = fire_ignition_end_lat1
  RETURN
END SUBROUTINE nl_set_fire_ignition_end_lat1
SUBROUTINE nl_set_fire_ignition_radius1 ( id_id , fire_ignition_radius1 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_radius1
  INTEGER id_id
  model_config_rec%fire_ignition_radius1(id_id) = fire_ignition_radius1
  RETURN
END SUBROUTINE nl_set_fire_ignition_radius1
SUBROUTINE nl_set_fire_ignition_start_time1 ( id_id , fire_ignition_start_time1 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_start_time1
  INTEGER id_id
  model_config_rec%fire_ignition_start_time1(id_id) = fire_ignition_start_time1
  RETURN
END SUBROUTINE nl_set_fire_ignition_start_time1
SUBROUTINE nl_set_fire_ignition_end_time1 ( id_id , fire_ignition_end_time1 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_end_time1
  INTEGER id_id
  model_config_rec%fire_ignition_end_time1(id_id) = fire_ignition_end_time1
  RETURN
END SUBROUTINE nl_set_fire_ignition_end_time1
SUBROUTINE nl_set_fire_ignition_ros2 ( id_id , fire_ignition_ros2 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_ros2
  INTEGER id_id
  model_config_rec%fire_ignition_ros2(id_id) = fire_ignition_ros2
  RETURN
END SUBROUTINE nl_set_fire_ignition_ros2
SUBROUTINE nl_set_fire_ignition_start_lon2 ( id_id , fire_ignition_start_lon2 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_start_lon2
  INTEGER id_id
  model_config_rec%fire_ignition_start_lon2(id_id) = fire_ignition_start_lon2
  RETURN
END SUBROUTINE nl_set_fire_ignition_start_lon2
SUBROUTINE nl_set_fire_ignition_start_lat2 ( id_id , fire_ignition_start_lat2 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_start_lat2
  INTEGER id_id
  model_config_rec%fire_ignition_start_lat2(id_id) = fire_ignition_start_lat2
  RETURN
END SUBROUTINE nl_set_fire_ignition_start_lat2
SUBROUTINE nl_set_fire_ignition_end_lon2 ( id_id , fire_ignition_end_lon2 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_end_lon2
  INTEGER id_id
  model_config_rec%fire_ignition_end_lon2(id_id) = fire_ignition_end_lon2
  RETURN
END SUBROUTINE nl_set_fire_ignition_end_lon2
SUBROUTINE nl_set_fire_ignition_end_lat2 ( id_id , fire_ignition_end_lat2 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_end_lat2
  INTEGER id_id
  model_config_rec%fire_ignition_end_lat2(id_id) = fire_ignition_end_lat2
  RETURN
END SUBROUTINE nl_set_fire_ignition_end_lat2
SUBROUTINE nl_set_fire_ignition_radius2 ( id_id , fire_ignition_radius2 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_radius2
  INTEGER id_id
  model_config_rec%fire_ignition_radius2(id_id) = fire_ignition_radius2
  RETURN
END SUBROUTINE nl_set_fire_ignition_radius2
SUBROUTINE nl_set_fire_ignition_start_time2 ( id_id , fire_ignition_start_time2 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_start_time2
  INTEGER id_id
  model_config_rec%fire_ignition_start_time2(id_id) = fire_ignition_start_time2
  RETURN
END SUBROUTINE nl_set_fire_ignition_start_time2
SUBROUTINE nl_set_fire_ignition_end_time2 ( id_id , fire_ignition_end_time2 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_end_time2
  INTEGER id_id
  model_config_rec%fire_ignition_end_time2(id_id) = fire_ignition_end_time2
  RETURN
END SUBROUTINE nl_set_fire_ignition_end_time2
SUBROUTINE nl_set_fire_ignition_ros3 ( id_id , fire_ignition_ros3 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_ros3
  INTEGER id_id
  model_config_rec%fire_ignition_ros3(id_id) = fire_ignition_ros3
  RETURN
END SUBROUTINE nl_set_fire_ignition_ros3
SUBROUTINE nl_set_fire_ignition_start_lon3 ( id_id , fire_ignition_start_lon3 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_start_lon3
  INTEGER id_id
  model_config_rec%fire_ignition_start_lon3(id_id) = fire_ignition_start_lon3
  RETURN
END SUBROUTINE nl_set_fire_ignition_start_lon3
SUBROUTINE nl_set_fire_ignition_start_lat3 ( id_id , fire_ignition_start_lat3 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_start_lat3
  INTEGER id_id
  model_config_rec%fire_ignition_start_lat3(id_id) = fire_ignition_start_lat3
  RETURN
END SUBROUTINE nl_set_fire_ignition_start_lat3
SUBROUTINE nl_set_fire_ignition_end_lon3 ( id_id , fire_ignition_end_lon3 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_end_lon3
  INTEGER id_id
  model_config_rec%fire_ignition_end_lon3(id_id) = fire_ignition_end_lon3
  RETURN
END SUBROUTINE nl_set_fire_ignition_end_lon3
SUBROUTINE nl_set_fire_ignition_end_lat3 ( id_id , fire_ignition_end_lat3 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_end_lat3
  INTEGER id_id
  model_config_rec%fire_ignition_end_lat3(id_id) = fire_ignition_end_lat3
  RETURN
END SUBROUTINE nl_set_fire_ignition_end_lat3
SUBROUTINE nl_set_fire_ignition_radius3 ( id_id , fire_ignition_radius3 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_radius3
  INTEGER id_id
  model_config_rec%fire_ignition_radius3(id_id) = fire_ignition_radius3
  RETURN
END SUBROUTINE nl_set_fire_ignition_radius3
SUBROUTINE nl_set_fire_ignition_start_time3 ( id_id , fire_ignition_start_time3 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_start_time3
  INTEGER id_id
  model_config_rec%fire_ignition_start_time3(id_id) = fire_ignition_start_time3
  RETURN
END SUBROUTINE nl_set_fire_ignition_start_time3
SUBROUTINE nl_set_fire_ignition_end_time3 ( id_id , fire_ignition_end_time3 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_end_time3
  INTEGER id_id
  model_config_rec%fire_ignition_end_time3(id_id) = fire_ignition_end_time3
  RETURN
END SUBROUTINE nl_set_fire_ignition_end_time3
SUBROUTINE nl_set_fire_ignition_ros4 ( id_id , fire_ignition_ros4 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_ros4
  INTEGER id_id
  model_config_rec%fire_ignition_ros4(id_id) = fire_ignition_ros4
  RETURN
END SUBROUTINE nl_set_fire_ignition_ros4
SUBROUTINE nl_set_fire_ignition_start_lon4 ( id_id , fire_ignition_start_lon4 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_start_lon4
  INTEGER id_id
  model_config_rec%fire_ignition_start_lon4(id_id) = fire_ignition_start_lon4
  RETURN
END SUBROUTINE nl_set_fire_ignition_start_lon4
SUBROUTINE nl_set_fire_ignition_start_lat4 ( id_id , fire_ignition_start_lat4 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_start_lat4
  INTEGER id_id
  model_config_rec%fire_ignition_start_lat4(id_id) = fire_ignition_start_lat4
  RETURN
END SUBROUTINE nl_set_fire_ignition_start_lat4
SUBROUTINE nl_set_fire_ignition_end_lon4 ( id_id , fire_ignition_end_lon4 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_end_lon4
  INTEGER id_id
  model_config_rec%fire_ignition_end_lon4(id_id) = fire_ignition_end_lon4
  RETURN
END SUBROUTINE nl_set_fire_ignition_end_lon4
SUBROUTINE nl_set_fire_ignition_end_lat4 ( id_id , fire_ignition_end_lat4 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_end_lat4
  INTEGER id_id
  model_config_rec%fire_ignition_end_lat4(id_id) = fire_ignition_end_lat4
  RETURN
END SUBROUTINE nl_set_fire_ignition_end_lat4
SUBROUTINE nl_set_fire_ignition_radius4 ( id_id , fire_ignition_radius4 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_radius4
  INTEGER id_id
  model_config_rec%fire_ignition_radius4(id_id) = fire_ignition_radius4
  RETURN
END SUBROUTINE nl_set_fire_ignition_radius4
SUBROUTINE nl_set_fire_ignition_start_time4 ( id_id , fire_ignition_start_time4 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_start_time4
  INTEGER id_id
  model_config_rec%fire_ignition_start_time4(id_id) = fire_ignition_start_time4
  RETURN
END SUBROUTINE nl_set_fire_ignition_start_time4
SUBROUTINE nl_set_fire_ignition_end_time4 ( id_id , fire_ignition_end_time4 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_end_time4
  INTEGER id_id
  model_config_rec%fire_ignition_end_time4(id_id) = fire_ignition_end_time4
  RETURN
END SUBROUTINE nl_set_fire_ignition_end_time4
SUBROUTINE nl_set_fire_ignition_ros5 ( id_id , fire_ignition_ros5 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_ros5
  INTEGER id_id
  model_config_rec%fire_ignition_ros5(id_id) = fire_ignition_ros5
  RETURN
END SUBROUTINE nl_set_fire_ignition_ros5
SUBROUTINE nl_set_fire_ignition_start_lon5 ( id_id , fire_ignition_start_lon5 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_start_lon5
  INTEGER id_id
  model_config_rec%fire_ignition_start_lon5(id_id) = fire_ignition_start_lon5
  RETURN
END SUBROUTINE nl_set_fire_ignition_start_lon5
SUBROUTINE nl_set_fire_ignition_start_lat5 ( id_id , fire_ignition_start_lat5 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_start_lat5
  INTEGER id_id
  model_config_rec%fire_ignition_start_lat5(id_id) = fire_ignition_start_lat5
  RETURN
END SUBROUTINE nl_set_fire_ignition_start_lat5
SUBROUTINE nl_set_fire_ignition_end_lon5 ( id_id , fire_ignition_end_lon5 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_end_lon5
  INTEGER id_id
  model_config_rec%fire_ignition_end_lon5(id_id) = fire_ignition_end_lon5
  RETURN
END SUBROUTINE nl_set_fire_ignition_end_lon5
SUBROUTINE nl_set_fire_ignition_end_lat5 ( id_id , fire_ignition_end_lat5 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_end_lat5
  INTEGER id_id
  model_config_rec%fire_ignition_end_lat5(id_id) = fire_ignition_end_lat5
  RETURN
END SUBROUTINE nl_set_fire_ignition_end_lat5
SUBROUTINE nl_set_fire_ignition_radius5 ( id_id , fire_ignition_radius5 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_radius5
  INTEGER id_id
  model_config_rec%fire_ignition_radius5(id_id) = fire_ignition_radius5
  RETURN
END SUBROUTINE nl_set_fire_ignition_radius5
SUBROUTINE nl_set_fire_ignition_start_time5 ( id_id , fire_ignition_start_time5 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_start_time5
  INTEGER id_id
  model_config_rec%fire_ignition_start_time5(id_id) = fire_ignition_start_time5
  RETURN
END SUBROUTINE nl_set_fire_ignition_start_time5
SUBROUTINE nl_set_fire_ignition_end_time5 ( id_id , fire_ignition_end_time5 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_end_time5
  INTEGER id_id
  model_config_rec%fire_ignition_end_time5(id_id) = fire_ignition_end_time5
  RETURN
END SUBROUTINE nl_set_fire_ignition_end_time5
SUBROUTINE nl_set_fire_ignition_start_x1 ( id_id , fire_ignition_start_x1 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_start_x1
  INTEGER id_id
  model_config_rec%fire_ignition_start_x1(id_id) = fire_ignition_start_x1
  RETURN
END SUBROUTINE nl_set_fire_ignition_start_x1
SUBROUTINE nl_set_fire_ignition_start_y1 ( id_id , fire_ignition_start_y1 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_start_y1
  INTEGER id_id
  model_config_rec%fire_ignition_start_y1(id_id) = fire_ignition_start_y1
  RETURN
END SUBROUTINE nl_set_fire_ignition_start_y1
SUBROUTINE nl_set_fire_ignition_end_x1 ( id_id , fire_ignition_end_x1 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_end_x1
  INTEGER id_id
  model_config_rec%fire_ignition_end_x1(id_id) = fire_ignition_end_x1
  RETURN
END SUBROUTINE nl_set_fire_ignition_end_x1
SUBROUTINE nl_set_fire_ignition_end_y1 ( id_id , fire_ignition_end_y1 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_end_y1
  INTEGER id_id
  model_config_rec%fire_ignition_end_y1(id_id) = fire_ignition_end_y1
  RETURN
END SUBROUTINE nl_set_fire_ignition_end_y1
SUBROUTINE nl_set_fire_ignition_start_x2 ( id_id , fire_ignition_start_x2 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_start_x2
  INTEGER id_id
  model_config_rec%fire_ignition_start_x2(id_id) = fire_ignition_start_x2
  RETURN
END SUBROUTINE nl_set_fire_ignition_start_x2
SUBROUTINE nl_set_fire_ignition_start_y2 ( id_id , fire_ignition_start_y2 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_start_y2
  INTEGER id_id
  model_config_rec%fire_ignition_start_y2(id_id) = fire_ignition_start_y2
  RETURN
END SUBROUTINE nl_set_fire_ignition_start_y2
SUBROUTINE nl_set_fire_ignition_end_x2 ( id_id , fire_ignition_end_x2 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_end_x2
  INTEGER id_id
  model_config_rec%fire_ignition_end_x2(id_id) = fire_ignition_end_x2
  RETURN
END SUBROUTINE nl_set_fire_ignition_end_x2
SUBROUTINE nl_set_fire_ignition_end_y2 ( id_id , fire_ignition_end_y2 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_end_y2
  INTEGER id_id
  model_config_rec%fire_ignition_end_y2(id_id) = fire_ignition_end_y2
  RETURN
END SUBROUTINE nl_set_fire_ignition_end_y2
SUBROUTINE nl_set_fire_ignition_start_x3 ( id_id , fire_ignition_start_x3 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_start_x3
  INTEGER id_id
  model_config_rec%fire_ignition_start_x3(id_id) = fire_ignition_start_x3
  RETURN
END SUBROUTINE nl_set_fire_ignition_start_x3
SUBROUTINE nl_set_fire_ignition_start_y3 ( id_id , fire_ignition_start_y3 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_start_y3
  INTEGER id_id
  model_config_rec%fire_ignition_start_y3(id_id) = fire_ignition_start_y3
  RETURN
END SUBROUTINE nl_set_fire_ignition_start_y3
SUBROUTINE nl_set_fire_ignition_end_x3 ( id_id , fire_ignition_end_x3 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_end_x3
  INTEGER id_id
  model_config_rec%fire_ignition_end_x3(id_id) = fire_ignition_end_x3
  RETURN
END SUBROUTINE nl_set_fire_ignition_end_x3
SUBROUTINE nl_set_fire_ignition_end_y3 ( id_id , fire_ignition_end_y3 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_end_y3
  INTEGER id_id
  model_config_rec%fire_ignition_end_y3(id_id) = fire_ignition_end_y3
  RETURN
END SUBROUTINE nl_set_fire_ignition_end_y3
SUBROUTINE nl_set_fire_ignition_start_x4 ( id_id , fire_ignition_start_x4 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_start_x4
  INTEGER id_id
  model_config_rec%fire_ignition_start_x4(id_id) = fire_ignition_start_x4
  RETURN
END SUBROUTINE nl_set_fire_ignition_start_x4
SUBROUTINE nl_set_fire_ignition_start_y4 ( id_id , fire_ignition_start_y4 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_start_y4
  INTEGER id_id
  model_config_rec%fire_ignition_start_y4(id_id) = fire_ignition_start_y4
  RETURN
END SUBROUTINE nl_set_fire_ignition_start_y4
SUBROUTINE nl_set_fire_ignition_end_x4 ( id_id , fire_ignition_end_x4 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_end_x4
  INTEGER id_id
  model_config_rec%fire_ignition_end_x4(id_id) = fire_ignition_end_x4
  RETURN
END SUBROUTINE nl_set_fire_ignition_end_x4
SUBROUTINE nl_set_fire_ignition_end_y4 ( id_id , fire_ignition_end_y4 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_end_y4
  INTEGER id_id
  model_config_rec%fire_ignition_end_y4(id_id) = fire_ignition_end_y4
  RETURN
END SUBROUTINE nl_set_fire_ignition_end_y4
SUBROUTINE nl_set_fire_ignition_start_x5 ( id_id , fire_ignition_start_x5 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_start_x5
  INTEGER id_id
  model_config_rec%fire_ignition_start_x5(id_id) = fire_ignition_start_x5
  RETURN
END SUBROUTINE nl_set_fire_ignition_start_x5
SUBROUTINE nl_set_fire_ignition_start_y5 ( id_id , fire_ignition_start_y5 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_start_y5
  INTEGER id_id
  model_config_rec%fire_ignition_start_y5(id_id) = fire_ignition_start_y5
  RETURN
END SUBROUTINE nl_set_fire_ignition_start_y5
SUBROUTINE nl_set_fire_ignition_end_x5 ( id_id , fire_ignition_end_x5 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_end_x5
  INTEGER id_id
  model_config_rec%fire_ignition_end_x5(id_id) = fire_ignition_end_x5
  RETURN
END SUBROUTINE nl_set_fire_ignition_end_x5
SUBROUTINE nl_set_fire_ignition_end_y5 ( id_id , fire_ignition_end_y5 )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ignition_end_y5
  INTEGER id_id
  model_config_rec%fire_ignition_end_y5(id_id) = fire_ignition_end_y5
  RETURN
END SUBROUTINE nl_set_fire_ignition_end_y5
SUBROUTINE nl_set_fire_lat_init ( id_id , fire_lat_init )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_lat_init
  INTEGER id_id
  model_config_rec%fire_lat_init(id_id) = fire_lat_init
  RETURN
END SUBROUTINE nl_set_fire_lat_init
SUBROUTINE nl_set_fire_lon_init ( id_id , fire_lon_init )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_lon_init
  INTEGER id_id
  model_config_rec%fire_lon_init(id_id) = fire_lon_init
  RETURN
END SUBROUTINE nl_set_fire_lon_init
SUBROUTINE nl_set_fire_ign_time ( id_id , fire_ign_time )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ign_time
  INTEGER id_id
  model_config_rec%fire_ign_time(id_id) = fire_ign_time
  RETURN
END SUBROUTINE nl_set_fire_ign_time
SUBROUTINE nl_set_fire_shape ( id_id , fire_shape )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: fire_shape
  INTEGER id_id
  model_config_rec%fire_shape(id_id) = fire_shape
  RETURN
END SUBROUTINE nl_set_fire_shape
SUBROUTINE nl_set_fire_sprd_mdl ( id_id , fire_sprd_mdl )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: fire_sprd_mdl
  INTEGER id_id
  model_config_rec%fire_sprd_mdl(id_id) = fire_sprd_mdl
  RETURN
END SUBROUTINE nl_set_fire_sprd_mdl
SUBROUTINE nl_set_fire_crwn_hgt ( id_id , fire_crwn_hgt )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_crwn_hgt
  INTEGER id_id
  model_config_rec%fire_crwn_hgt(id_id) = fire_crwn_hgt
  RETURN
END SUBROUTINE nl_set_fire_crwn_hgt
SUBROUTINE nl_set_fire_ext_grnd ( id_id , fire_ext_grnd )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ext_grnd
  INTEGER id_id
  model_config_rec%fire_ext_grnd(id_id) = fire_ext_grnd
  RETURN
END SUBROUTINE nl_set_fire_ext_grnd
SUBROUTINE nl_set_fire_ext_crwn ( id_id , fire_ext_crwn )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_ext_crwn
  INTEGER id_id
  model_config_rec%fire_ext_crwn(id_id) = fire_ext_crwn
  RETURN
END SUBROUTINE nl_set_fire_ext_crwn
SUBROUTINE nl_set_fire_wind_height ( id_id , fire_wind_height )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_wind_height
  INTEGER id_id
  model_config_rec%fire_wind_height(id_id) = fire_wind_height
  RETURN
END SUBROUTINE nl_set_fire_wind_height
SUBROUTINE nl_set_fire_fuel_read ( id_id , fire_fuel_read )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: fire_fuel_read
  INTEGER id_id
  model_config_rec%fire_fuel_read(id_id) = fire_fuel_read
  RETURN
END SUBROUTINE nl_set_fire_fuel_read
SUBROUTINE nl_set_fire_fuel_cat ( id_id , fire_fuel_cat )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: fire_fuel_cat
  INTEGER id_id
  model_config_rec%fire_fuel_cat(id_id) = fire_fuel_cat
  RETURN
END SUBROUTINE nl_set_fire_fuel_cat
SUBROUTINE nl_set_fire_print_msg ( id_id , fire_print_msg )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: fire_print_msg
  INTEGER id_id
  model_config_rec%fire_print_msg(id_id) = fire_print_msg
  RETURN
END SUBROUTINE nl_set_fire_print_msg
SUBROUTINE nl_set_fire_print_file ( id_id , fire_print_file )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: fire_print_file
  INTEGER id_id
  model_config_rec%fire_print_file(id_id) = fire_print_file
  RETURN
END SUBROUTINE nl_set_fire_print_file
SUBROUTINE nl_set_fire_fuel_left_method ( id_id , fire_fuel_left_method )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: fire_fuel_left_method
  INTEGER id_id
  model_config_rec%fire_fuel_left_method(id_id) = fire_fuel_left_method
  RETURN
END SUBROUTINE nl_set_fire_fuel_left_method
SUBROUTINE nl_set_fire_fuel_left_irl ( id_id , fire_fuel_left_irl )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: fire_fuel_left_irl
  INTEGER id_id
  model_config_rec%fire_fuel_left_irl(id_id) = fire_fuel_left_irl
  RETURN
END SUBROUTINE nl_set_fire_fuel_left_irl
SUBROUTINE nl_set_fire_fuel_left_jrl ( id_id , fire_fuel_left_jrl )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: fire_fuel_left_jrl
  INTEGER id_id
  model_config_rec%fire_fuel_left_jrl(id_id) = fire_fuel_left_jrl
  RETURN
END SUBROUTINE nl_set_fire_fuel_left_jrl
SUBROUTINE nl_set_fire_grows_only ( id_id , fire_grows_only )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: fire_grows_only
  INTEGER id_id
  model_config_rec%fire_grows_only(id_id) = fire_grows_only
  RETURN
END SUBROUTINE nl_set_fire_grows_only
SUBROUTINE nl_set_fire_upwinding ( id_id , fire_upwinding )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: fire_upwinding
  INTEGER id_id
  model_config_rec%fire_upwinding(id_id) = fire_upwinding
  RETURN
END SUBROUTINE nl_set_fire_upwinding
SUBROUTINE nl_set_fire_upwind_split ( id_id , fire_upwind_split )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: fire_upwind_split
  INTEGER id_id
  model_config_rec%fire_upwind_split(id_id) = fire_upwind_split
  RETURN
END SUBROUTINE nl_set_fire_upwind_split
SUBROUTINE nl_set_fire_viscosity ( id_id , fire_viscosity )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_viscosity
  INTEGER id_id
  model_config_rec%fire_viscosity(id_id) = fire_viscosity
  RETURN
END SUBROUTINE nl_set_fire_viscosity
SUBROUTINE nl_set_fire_lfn_ext_up ( id_id , fire_lfn_ext_up )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_lfn_ext_up
  INTEGER id_id
  model_config_rec%fire_lfn_ext_up(id_id) = fire_lfn_ext_up
  RETURN
END SUBROUTINE nl_set_fire_lfn_ext_up
SUBROUTINE nl_set_fire_topo_from_atm ( id_id , fire_topo_from_atm )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: fire_topo_from_atm
  INTEGER id_id
  model_config_rec%fire_topo_from_atm(id_id) = fire_topo_from_atm
  RETURN
END SUBROUTINE nl_set_fire_topo_from_atm
SUBROUTINE nl_set_fire_advection ( id_id , fire_advection )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: fire_advection
  INTEGER id_id
  model_config_rec%fire_advection(id_id) = fire_advection
  RETURN
END SUBROUTINE nl_set_fire_advection
SUBROUTINE nl_set_fire_test_steps ( id_id , fire_test_steps )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: fire_test_steps
  INTEGER id_id
  model_config_rec%fire_test_steps(id_id) = fire_test_steps
  RETURN
END SUBROUTINE nl_set_fire_test_steps
SUBROUTINE nl_set_fire_const_time ( id_id , fire_const_time )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_const_time
  INTEGER id_id
  model_config_rec%fire_const_time(id_id) = fire_const_time
  RETURN
END SUBROUTINE nl_set_fire_const_time
SUBROUTINE nl_set_fire_const_grnhfx ( id_id , fire_const_grnhfx )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_const_grnhfx
  INTEGER id_id
  model_config_rec%fire_const_grnhfx(id_id) = fire_const_grnhfx
  RETURN
END SUBROUTINE nl_set_fire_const_grnhfx
SUBROUTINE nl_set_fire_const_grnqfx ( id_id , fire_const_grnqfx )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_const_grnqfx
  INTEGER id_id
  model_config_rec%fire_const_grnqfx(id_id) = fire_const_grnqfx
  RETURN
END SUBROUTINE nl_set_fire_const_grnqfx
SUBROUTINE nl_set_fire_atm_feedback ( id_id , fire_atm_feedback )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_atm_feedback
  INTEGER id_id
  model_config_rec%fire_atm_feedback(id_id) = fire_atm_feedback
  RETURN
END SUBROUTINE nl_set_fire_atm_feedback
SUBROUTINE nl_set_fire_mountain_type ( id_id , fire_mountain_type )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: fire_mountain_type
  INTEGER id_id
  model_config_rec%fire_mountain_type(id_id) = fire_mountain_type
  RETURN
END SUBROUTINE nl_set_fire_mountain_type
SUBROUTINE nl_set_fire_mountain_height ( id_id , fire_mountain_height )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_mountain_height
  INTEGER id_id
  model_config_rec%fire_mountain_height(id_id) = fire_mountain_height
  RETURN
END SUBROUTINE nl_set_fire_mountain_height
SUBROUTINE nl_set_fire_mountain_start_x ( id_id , fire_mountain_start_x )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_mountain_start_x
  INTEGER id_id
  model_config_rec%fire_mountain_start_x(id_id) = fire_mountain_start_x
  RETURN
END SUBROUTINE nl_set_fire_mountain_start_x
SUBROUTINE nl_set_fire_mountain_start_y ( id_id , fire_mountain_start_y )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_mountain_start_y
  INTEGER id_id
  model_config_rec%fire_mountain_start_y(id_id) = fire_mountain_start_y
  RETURN
END SUBROUTINE nl_set_fire_mountain_start_y
SUBROUTINE nl_set_fire_mountain_end_x ( id_id , fire_mountain_end_x )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_mountain_end_x
  INTEGER id_id
  model_config_rec%fire_mountain_end_x(id_id) = fire_mountain_end_x
  RETURN
END SUBROUTINE nl_set_fire_mountain_end_x
SUBROUTINE nl_set_fire_mountain_end_y ( id_id , fire_mountain_end_y )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_mountain_end_y
  INTEGER id_id
  model_config_rec%fire_mountain_end_y(id_id) = fire_mountain_end_y
  RETURN
END SUBROUTINE nl_set_fire_mountain_end_y
SUBROUTINE nl_set_delt_perturbation ( id_id , delt_perturbation )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: delt_perturbation
  INTEGER id_id
  model_config_rec%delt_perturbation(id_id) = delt_perturbation
  RETURN
END SUBROUTINE nl_set_delt_perturbation
SUBROUTINE nl_set_xrad_perturbation ( id_id , xrad_perturbation )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: xrad_perturbation
  INTEGER id_id
  model_config_rec%xrad_perturbation(id_id) = xrad_perturbation
  RETURN
END SUBROUTINE nl_set_xrad_perturbation
SUBROUTINE nl_set_yrad_perturbation ( id_id , yrad_perturbation )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: yrad_perturbation
  INTEGER id_id
  model_config_rec%yrad_perturbation(id_id) = yrad_perturbation
  RETURN
END SUBROUTINE nl_set_yrad_perturbation
SUBROUTINE nl_set_zrad_perturbation ( id_id , zrad_perturbation )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: zrad_perturbation
  INTEGER id_id
  model_config_rec%zrad_perturbation(id_id) = zrad_perturbation
  RETURN
END SUBROUTINE nl_set_zrad_perturbation
SUBROUTINE nl_set_hght_perturbation ( id_id , hght_perturbation )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: hght_perturbation
  INTEGER id_id
  model_config_rec%hght_perturbation(id_id) = hght_perturbation
  RETURN
END SUBROUTINE nl_set_hght_perturbation
SUBROUTINE nl_set_stretch_grd ( id_id , stretch_grd )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: stretch_grd
  INTEGER id_id
  model_config_rec%stretch_grd(id_id) = stretch_grd
  RETURN
END SUBROUTINE nl_set_stretch_grd
SUBROUTINE nl_set_stretch_hyp ( id_id , stretch_hyp )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: stretch_hyp
  INTEGER id_id
  model_config_rec%stretch_hyp(id_id) = stretch_hyp
  RETURN
END SUBROUTINE nl_set_stretch_hyp
SUBROUTINE nl_set_z_grd_scale ( id_id , z_grd_scale )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: z_grd_scale
  INTEGER id_id
  model_config_rec%z_grd_scale(id_id) = z_grd_scale
  RETURN
END SUBROUTINE nl_set_z_grd_scale
SUBROUTINE nl_set_sfc_full_init ( id_id , sfc_full_init )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: sfc_full_init
  INTEGER id_id
  model_config_rec%sfc_full_init(id_id) = sfc_full_init
  RETURN
END SUBROUTINE nl_set_sfc_full_init
SUBROUTINE nl_set_sfc_lu_index ( id_id , sfc_lu_index )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: sfc_lu_index
  INTEGER id_id
  model_config_rec%sfc_lu_index(id_id) = sfc_lu_index
  RETURN
END SUBROUTINE nl_set_sfc_lu_index
SUBROUTINE nl_set_sfc_tsk ( id_id , sfc_tsk )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: sfc_tsk
  INTEGER id_id
  model_config_rec%sfc_tsk(id_id) = sfc_tsk
  RETURN
END SUBROUTINE nl_set_sfc_tsk
SUBROUTINE nl_set_sfc_tmn ( id_id , sfc_tmn )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: sfc_tmn
  INTEGER id_id
  model_config_rec%sfc_tmn(id_id) = sfc_tmn
  RETURN
END SUBROUTINE nl_set_sfc_tmn
SUBROUTINE nl_set_fire_read_lu ( id_id , fire_read_lu )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: fire_read_lu
  INTEGER id_id
  model_config_rec%fire_read_lu(id_id) = fire_read_lu
  RETURN
END SUBROUTINE nl_set_fire_read_lu
SUBROUTINE nl_set_fire_read_tsk ( id_id , fire_read_tsk )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: fire_read_tsk
  INTEGER id_id
  model_config_rec%fire_read_tsk(id_id) = fire_read_tsk
  RETURN
END SUBROUTINE nl_set_fire_read_tsk
SUBROUTINE nl_set_fire_read_tmn ( id_id , fire_read_tmn )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: fire_read_tmn
  INTEGER id_id
  model_config_rec%fire_read_tmn(id_id) = fire_read_tmn
  RETURN
END SUBROUTINE nl_set_fire_read_tmn
SUBROUTINE nl_set_fire_read_atm_ht ( id_id , fire_read_atm_ht )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: fire_read_atm_ht
  INTEGER id_id
  model_config_rec%fire_read_atm_ht(id_id) = fire_read_atm_ht
  RETURN
END SUBROUTINE nl_set_fire_read_atm_ht
SUBROUTINE nl_set_fire_read_fire_ht ( id_id , fire_read_fire_ht )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: fire_read_fire_ht
  INTEGER id_id
  model_config_rec%fire_read_fire_ht(id_id) = fire_read_fire_ht
  RETURN
END SUBROUTINE nl_set_fire_read_fire_ht
SUBROUTINE nl_set_fire_read_atm_grad ( id_id , fire_read_atm_grad )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: fire_read_atm_grad
  INTEGER id_id
  model_config_rec%fire_read_atm_grad(id_id) = fire_read_atm_grad
  RETURN
END SUBROUTINE nl_set_fire_read_atm_grad
SUBROUTINE nl_set_fire_read_fire_grad ( id_id , fire_read_fire_grad )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: fire_read_fire_grad
  INTEGER id_id
  model_config_rec%fire_read_fire_grad(id_id) = fire_read_fire_grad
  RETURN
END SUBROUTINE nl_set_fire_read_fire_grad
SUBROUTINE nl_set_sfc_vegfra ( id_id , sfc_vegfra )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: sfc_vegfra
  INTEGER id_id
  model_config_rec%sfc_vegfra(id_id) = sfc_vegfra
  RETURN
END SUBROUTINE nl_set_sfc_vegfra
SUBROUTINE nl_set_sfc_canwat ( id_id , sfc_canwat )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: sfc_canwat
  INTEGER id_id
  model_config_rec%sfc_canwat(id_id) = sfc_canwat
  RETURN
END SUBROUTINE nl_set_sfc_canwat
SUBROUTINE nl_set_sfc_ivgtyp ( id_id , sfc_ivgtyp )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: sfc_ivgtyp
  INTEGER id_id
  model_config_rec%sfc_ivgtyp(id_id) = sfc_ivgtyp
  RETURN
END SUBROUTINE nl_set_sfc_ivgtyp
SUBROUTINE nl_set_sfc_isltyp ( id_id , sfc_isltyp )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: sfc_isltyp
  INTEGER id_id
  model_config_rec%sfc_isltyp(id_id) = sfc_isltyp
  RETURN
END SUBROUTINE nl_set_sfc_isltyp
SUBROUTINE nl_set_fire_lsm_reinit ( id_id , fire_lsm_reinit )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: fire_lsm_reinit
  INTEGER id_id
  model_config_rec%fire_lsm_reinit(id_id) = fire_lsm_reinit
  RETURN
END SUBROUTINE nl_set_fire_lsm_reinit
SUBROUTINE nl_set_fire_lsm_reinit_iter ( id_id , fire_lsm_reinit_iter )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: fire_lsm_reinit_iter
  INTEGER id_id
  model_config_rec%fire_lsm_reinit_iter(id_id) = fire_lsm_reinit_iter
  RETURN
END SUBROUTINE nl_set_fire_lsm_reinit_iter
SUBROUTINE nl_set_fire_upwinding_reinit ( id_id , fire_upwinding_reinit )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: fire_upwinding_reinit
  INTEGER id_id
  model_config_rec%fire_upwinding_reinit(id_id) = fire_upwinding_reinit
  RETURN
END SUBROUTINE nl_set_fire_upwinding_reinit
SUBROUTINE nl_set_fire_is_real_perim ( id_id , fire_is_real_perim )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: fire_is_real_perim
  INTEGER id_id
  model_config_rec%fire_is_real_perim(id_id) = fire_is_real_perim
  RETURN
END SUBROUTINE nl_set_fire_is_real_perim
SUBROUTINE nl_set_fire_lsm_band_ngp ( id_id , fire_lsm_band_ngp )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: fire_lsm_band_ngp
  INTEGER id_id
  model_config_rec%fire_lsm_band_ngp(id_id) = fire_lsm_band_ngp
  RETURN
END SUBROUTINE nl_set_fire_lsm_band_ngp
SUBROUTINE nl_set_fire_lsm_zcoupling ( id_id , fire_lsm_zcoupling )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: fire_lsm_zcoupling
  INTEGER id_id
  model_config_rec%fire_lsm_zcoupling(id_id) = fire_lsm_zcoupling
  RETURN
END SUBROUTINE nl_set_fire_lsm_zcoupling
SUBROUTINE nl_set_fire_lsm_zcoupling_ref ( id_id , fire_lsm_zcoupling_ref )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_lsm_zcoupling_ref
  INTEGER id_id
  model_config_rec%fire_lsm_zcoupling_ref(id_id) = fire_lsm_zcoupling_ref
  RETURN
END SUBROUTINE nl_set_fire_lsm_zcoupling_ref
SUBROUTINE nl_set_fire_tracer_smoke ( id_id , fire_tracer_smoke )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_tracer_smoke
  INTEGER id_id
  model_config_rec%fire_tracer_smoke(id_id) = fire_tracer_smoke
  RETURN
END SUBROUTINE nl_set_fire_tracer_smoke
SUBROUTINE nl_set_fire_viscosity_bg ( id_id , fire_viscosity_bg )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_viscosity_bg
  INTEGER id_id
  model_config_rec%fire_viscosity_bg(id_id) = fire_viscosity_bg
  RETURN
END SUBROUTINE nl_set_fire_viscosity_bg
SUBROUTINE nl_set_fire_viscosity_band ( id_id , fire_viscosity_band )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_viscosity_band
  INTEGER id_id
  model_config_rec%fire_viscosity_band(id_id) = fire_viscosity_band
  RETURN
END SUBROUTINE nl_set_fire_viscosity_band
SUBROUTINE nl_set_fire_viscosity_ngp ( id_id , fire_viscosity_ngp )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: fire_viscosity_ngp
  INTEGER id_id
  model_config_rec%fire_viscosity_ngp(id_id) = fire_viscosity_ngp
  RETURN
END SUBROUTINE nl_set_fire_viscosity_ngp
SUBROUTINE nl_set_fire_slope_factor ( id_id , fire_slope_factor )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: fire_slope_factor
  INTEGER id_id
  model_config_rec%fire_slope_factor(id_id) = fire_slope_factor
  RETURN
END SUBROUTINE nl_set_fire_slope_factor
SUBROUTINE nl_set_do_avgflx_em ( id_id , do_avgflx_em )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: do_avgflx_em
  INTEGER id_id
  model_config_rec%do_avgflx_em(id_id) = do_avgflx_em
  RETURN
END SUBROUTINE nl_set_do_avgflx_em
SUBROUTINE nl_set_do_avgflx_cugd ( id_id , do_avgflx_cugd )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: do_avgflx_cugd
  INTEGER id_id
  model_config_rec%do_avgflx_cugd(id_id) = do_avgflx_cugd
  RETURN
END SUBROUTINE nl_set_do_avgflx_cugd
SUBROUTINE nl_set_nens ( id_id , nens )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: nens
  INTEGER id_id
  model_config_rec%nens = nens 
  RETURN
END SUBROUTINE nl_set_nens
SUBROUTINE nl_set_skebs ( id_id , skebs )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: skebs
  INTEGER id_id
  model_config_rec%skebs(id_id) = skebs
  RETURN
END SUBROUTINE nl_set_skebs
SUBROUTINE nl_set_stoch_force_opt ( id_id , stoch_force_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: stoch_force_opt
  INTEGER id_id
  model_config_rec%stoch_force_opt(id_id) = stoch_force_opt
  RETURN
END SUBROUTINE nl_set_stoch_force_opt
SUBROUTINE nl_set_skebs_vertstruc ( id_id , skebs_vertstruc )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: skebs_vertstruc
  INTEGER id_id
  model_config_rec%skebs_vertstruc = skebs_vertstruc 
  RETURN
END SUBROUTINE nl_set_skebs_vertstruc
SUBROUTINE nl_set_stoch_vertstruc_opt ( id_id , stoch_vertstruc_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: stoch_vertstruc_opt
  INTEGER id_id
  model_config_rec%stoch_vertstruc_opt(id_id) = stoch_vertstruc_opt
  RETURN
END SUBROUTINE nl_set_stoch_vertstruc_opt
SUBROUTINE nl_set_tot_backscat_psi ( id_id , tot_backscat_psi )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: tot_backscat_psi
  INTEGER id_id
  model_config_rec%tot_backscat_psi(id_id) = tot_backscat_psi
  RETURN
END SUBROUTINE nl_set_tot_backscat_psi
SUBROUTINE nl_set_tot_backscat_t ( id_id , tot_backscat_t )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: tot_backscat_t
  INTEGER id_id
  model_config_rec%tot_backscat_t(id_id) = tot_backscat_t
  RETURN
END SUBROUTINE nl_set_tot_backscat_t
SUBROUTINE nl_set_ztau_psi ( id_id , ztau_psi )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: ztau_psi
  INTEGER id_id
  model_config_rec%ztau_psi = ztau_psi 
  RETURN
END SUBROUTINE nl_set_ztau_psi
SUBROUTINE nl_set_ztau_t ( id_id , ztau_t )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: ztau_t
  INTEGER id_id
  model_config_rec%ztau_t = ztau_t 
  RETURN
END SUBROUTINE nl_set_ztau_t
SUBROUTINE nl_set_rexponent_psi ( id_id , rexponent_psi )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: rexponent_psi
  INTEGER id_id
  model_config_rec%rexponent_psi = rexponent_psi 
  RETURN
END SUBROUTINE nl_set_rexponent_psi
SUBROUTINE nl_set_rexponent_t ( id_id , rexponent_t )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: rexponent_t
  INTEGER id_id
  model_config_rec%rexponent_t = rexponent_t 
  RETURN
END SUBROUTINE nl_set_rexponent_t
SUBROUTINE nl_set_zsigma2_eps ( id_id , zsigma2_eps )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: zsigma2_eps
  INTEGER id_id
  model_config_rec%zsigma2_eps = zsigma2_eps 
  RETURN
END SUBROUTINE nl_set_zsigma2_eps
SUBROUTINE nl_set_zsigma2_eta ( id_id , zsigma2_eta )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: zsigma2_eta
  INTEGER id_id
  model_config_rec%zsigma2_eta = zsigma2_eta 
  RETURN
END SUBROUTINE nl_set_zsigma2_eta
SUBROUTINE nl_set_kminforc ( id_id , kminforc )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: kminforc
  INTEGER id_id
  model_config_rec%kminforc = kminforc 
  RETURN
END SUBROUTINE nl_set_kminforc
SUBROUTINE nl_set_lminforc ( id_id , lminforc )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: lminforc
  INTEGER id_id
  model_config_rec%lminforc = lminforc 
  RETURN
END SUBROUTINE nl_set_lminforc
SUBROUTINE nl_set_kminforct ( id_id , kminforct )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: kminforct
  INTEGER id_id
  model_config_rec%kminforct = kminforct 
  RETURN
END SUBROUTINE nl_set_kminforct
SUBROUTINE nl_set_lminforct ( id_id , lminforct )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: lminforct
  INTEGER id_id
  model_config_rec%lminforct = lminforct 
  RETURN
END SUBROUTINE nl_set_lminforct
SUBROUTINE nl_set_kmaxforc ( id_id , kmaxforc )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: kmaxforc
  INTEGER id_id
  model_config_rec%kmaxforc = kmaxforc 
  RETURN
END SUBROUTINE nl_set_kmaxforc
SUBROUTINE nl_set_lmaxforc ( id_id , lmaxforc )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: lmaxforc
  INTEGER id_id
  model_config_rec%lmaxforc = lmaxforc 
  RETURN
END SUBROUTINE nl_set_lmaxforc
SUBROUTINE nl_set_kmaxforct ( id_id , kmaxforct )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: kmaxforct
  INTEGER id_id
  model_config_rec%kmaxforct = kmaxforct 
  RETURN
END SUBROUTINE nl_set_kmaxforct
SUBROUTINE nl_set_lmaxforct ( id_id , lmaxforct )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: lmaxforct
  INTEGER id_id
  model_config_rec%lmaxforct = lmaxforct 
  RETURN
END SUBROUTINE nl_set_lmaxforct
SUBROUTINE nl_set_iseed_skebs ( id_id , iseed_skebs )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: iseed_skebs
  INTEGER id_id
  model_config_rec%iseed_skebs = iseed_skebs 
  RETURN
END SUBROUTINE nl_set_iseed_skebs
SUBROUTINE nl_set_kmaxforch ( id_id , kmaxforch )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: kmaxforch
  INTEGER id_id
  model_config_rec%kmaxforch = kmaxforch 
  RETURN
END SUBROUTINE nl_set_kmaxforch
SUBROUTINE nl_set_lmaxforch ( id_id , lmaxforch )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: lmaxforch
  INTEGER id_id
  model_config_rec%lmaxforch = lmaxforch 
  RETURN
END SUBROUTINE nl_set_lmaxforch
SUBROUTINE nl_set_kmaxforcth ( id_id , kmaxforcth )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: kmaxforcth
  INTEGER id_id
  model_config_rec%kmaxforcth = kmaxforcth 
  RETURN
END SUBROUTINE nl_set_kmaxforcth
SUBROUTINE nl_set_lmaxforcth ( id_id , lmaxforcth )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: lmaxforcth
  INTEGER id_id
  model_config_rec%lmaxforcth = lmaxforcth 
  RETURN
END SUBROUTINE nl_set_lmaxforcth
SUBROUTINE nl_set_sppt ( id_id , sppt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: sppt
  INTEGER id_id
  model_config_rec%sppt(id_id) = sppt
  RETURN
END SUBROUTINE nl_set_sppt
SUBROUTINE nl_set_gridpt_stddev_sppt ( id_id , gridpt_stddev_sppt )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: gridpt_stddev_sppt
  INTEGER id_id
  model_config_rec%gridpt_stddev_sppt(id_id) = gridpt_stddev_sppt
  RETURN
END SUBROUTINE nl_set_gridpt_stddev_sppt
SUBROUTINE nl_set_stddev_cutoff_sppt ( id_id , stddev_cutoff_sppt )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: stddev_cutoff_sppt
  INTEGER id_id
  model_config_rec%stddev_cutoff_sppt(id_id) = stddev_cutoff_sppt
  RETURN
END SUBROUTINE nl_set_stddev_cutoff_sppt
SUBROUTINE nl_set_lengthscale_sppt ( id_id , lengthscale_sppt )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: lengthscale_sppt
  INTEGER id_id
  model_config_rec%lengthscale_sppt(id_id) = lengthscale_sppt
  RETURN
END SUBROUTINE nl_set_lengthscale_sppt
SUBROUTINE nl_set_timescale_sppt ( id_id , timescale_sppt )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: timescale_sppt
  INTEGER id_id
  model_config_rec%timescale_sppt(id_id) = timescale_sppt
  RETURN
END SUBROUTINE nl_set_timescale_sppt
SUBROUTINE nl_set_sppt_vertstruc ( id_id , sppt_vertstruc )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: sppt_vertstruc
  INTEGER id_id
  model_config_rec%sppt_vertstruc = sppt_vertstruc 
  RETURN
END SUBROUTINE nl_set_sppt_vertstruc
SUBROUTINE nl_set_iseed_sppt ( id_id , iseed_sppt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: iseed_sppt
  INTEGER id_id
  model_config_rec%iseed_sppt = iseed_sppt 
  RETURN
END SUBROUTINE nl_set_iseed_sppt
SUBROUTINE nl_set_rand_perturb ( id_id , rand_perturb )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: rand_perturb
  INTEGER id_id
  model_config_rec%rand_perturb(id_id) = rand_perturb
  RETURN
END SUBROUTINE nl_set_rand_perturb
SUBROUTINE nl_set_gridpt_stddev_rand_pert ( id_id , gridpt_stddev_rand_pert )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: gridpt_stddev_rand_pert
  INTEGER id_id
  model_config_rec%gridpt_stddev_rand_pert(id_id) = gridpt_stddev_rand_pert
  RETURN
END SUBROUTINE nl_set_gridpt_stddev_rand_pert
SUBROUTINE nl_set_stddev_cutoff_rand_pert ( id_id , stddev_cutoff_rand_pert )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: stddev_cutoff_rand_pert
  INTEGER id_id
  model_config_rec%stddev_cutoff_rand_pert(id_id) = stddev_cutoff_rand_pert
  RETURN
END SUBROUTINE nl_set_stddev_cutoff_rand_pert
SUBROUTINE nl_set_lengthscale_rand_pert ( id_id , lengthscale_rand_pert )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: lengthscale_rand_pert
  INTEGER id_id
  model_config_rec%lengthscale_rand_pert(id_id) = lengthscale_rand_pert
  RETURN
END SUBROUTINE nl_set_lengthscale_rand_pert
SUBROUTINE nl_set_timescale_rand_pert ( id_id , timescale_rand_pert )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: timescale_rand_pert
  INTEGER id_id
  model_config_rec%timescale_rand_pert(id_id) = timescale_rand_pert
  RETURN
END SUBROUTINE nl_set_timescale_rand_pert
SUBROUTINE nl_set_rand_pert_vertstruc ( id_id , rand_pert_vertstruc )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: rand_pert_vertstruc
  INTEGER id_id
  model_config_rec%rand_pert_vertstruc = rand_pert_vertstruc 
  RETURN
END SUBROUTINE nl_set_rand_pert_vertstruc
SUBROUTINE nl_set_iseed_rand_pert ( id_id , iseed_rand_pert )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: iseed_rand_pert
  INTEGER id_id
  model_config_rec%iseed_rand_pert = iseed_rand_pert 
  RETURN
END SUBROUTINE nl_set_iseed_rand_pert
SUBROUTINE nl_set_spp ( id_id , spp )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: spp
  INTEGER id_id
  model_config_rec%spp(id_id) = spp
  RETURN
END SUBROUTINE nl_set_spp
SUBROUTINE nl_set_hrrr_cycling ( id_id , hrrr_cycling )
  USE module_configure, ONLY : model_config_rec 
  logical , INTENT(IN) :: hrrr_cycling
  INTEGER id_id
  model_config_rec%hrrr_cycling = hrrr_cycling 
  RETURN
END SUBROUTINE nl_set_hrrr_cycling
SUBROUTINE nl_set_spp_conv ( id_id , spp_conv )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: spp_conv
  INTEGER id_id
  model_config_rec%spp_conv(id_id) = spp_conv
  RETURN
END SUBROUTINE nl_set_spp_conv
SUBROUTINE nl_set_gridpt_stddev_spp_conv ( id_id , gridpt_stddev_spp_conv )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: gridpt_stddev_spp_conv
  INTEGER id_id
  model_config_rec%gridpt_stddev_spp_conv(id_id) = gridpt_stddev_spp_conv
  RETURN
END SUBROUTINE nl_set_gridpt_stddev_spp_conv
SUBROUTINE nl_set_stddev_cutoff_spp_conv ( id_id , stddev_cutoff_spp_conv )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: stddev_cutoff_spp_conv
  INTEGER id_id
  model_config_rec%stddev_cutoff_spp_conv(id_id) = stddev_cutoff_spp_conv
  RETURN
END SUBROUTINE nl_set_stddev_cutoff_spp_conv
SUBROUTINE nl_set_lengthscale_spp_conv ( id_id , lengthscale_spp_conv )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: lengthscale_spp_conv
  INTEGER id_id
  model_config_rec%lengthscale_spp_conv(id_id) = lengthscale_spp_conv
  RETURN
END SUBROUTINE nl_set_lengthscale_spp_conv
SUBROUTINE nl_set_timescale_spp_conv ( id_id , timescale_spp_conv )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: timescale_spp_conv
  INTEGER id_id
  model_config_rec%timescale_spp_conv(id_id) = timescale_spp_conv
  RETURN
END SUBROUTINE nl_set_timescale_spp_conv
SUBROUTINE nl_set_vertstruc_spp_conv ( id_id , vertstruc_spp_conv )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: vertstruc_spp_conv
  INTEGER id_id
  model_config_rec%vertstruc_spp_conv = vertstruc_spp_conv 
  RETURN
END SUBROUTINE nl_set_vertstruc_spp_conv
SUBROUTINE nl_set_iseed_spp_conv ( id_id , iseed_spp_conv )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: iseed_spp_conv
  INTEGER id_id
  model_config_rec%iseed_spp_conv = iseed_spp_conv 
  RETURN
END SUBROUTINE nl_set_iseed_spp_conv
SUBROUTINE nl_set_spp_pbl ( id_id , spp_pbl )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: spp_pbl
  INTEGER id_id
  model_config_rec%spp_pbl(id_id) = spp_pbl
  RETURN
END SUBROUTINE nl_set_spp_pbl
SUBROUTINE nl_set_gridpt_stddev_spp_pbl ( id_id , gridpt_stddev_spp_pbl )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: gridpt_stddev_spp_pbl
  INTEGER id_id
  model_config_rec%gridpt_stddev_spp_pbl(id_id) = gridpt_stddev_spp_pbl
  RETURN
END SUBROUTINE nl_set_gridpt_stddev_spp_pbl
SUBROUTINE nl_set_stddev_cutoff_spp_pbl ( id_id , stddev_cutoff_spp_pbl )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: stddev_cutoff_spp_pbl
  INTEGER id_id
  model_config_rec%stddev_cutoff_spp_pbl(id_id) = stddev_cutoff_spp_pbl
  RETURN
END SUBROUTINE nl_set_stddev_cutoff_spp_pbl
SUBROUTINE nl_set_lengthscale_spp_pbl ( id_id , lengthscale_spp_pbl )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: lengthscale_spp_pbl
  INTEGER id_id
  model_config_rec%lengthscale_spp_pbl(id_id) = lengthscale_spp_pbl
  RETURN
END SUBROUTINE nl_set_lengthscale_spp_pbl
SUBROUTINE nl_set_timescale_spp_pbl ( id_id , timescale_spp_pbl )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: timescale_spp_pbl
  INTEGER id_id
  model_config_rec%timescale_spp_pbl(id_id) = timescale_spp_pbl
  RETURN
END SUBROUTINE nl_set_timescale_spp_pbl
SUBROUTINE nl_set_vertstruc_spp_pbl ( id_id , vertstruc_spp_pbl )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: vertstruc_spp_pbl
  INTEGER id_id
  model_config_rec%vertstruc_spp_pbl = vertstruc_spp_pbl 
  RETURN
END SUBROUTINE nl_set_vertstruc_spp_pbl
SUBROUTINE nl_set_iseed_spp_pbl ( id_id , iseed_spp_pbl )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: iseed_spp_pbl
  INTEGER id_id
  model_config_rec%iseed_spp_pbl = iseed_spp_pbl 
  RETURN
END SUBROUTINE nl_set_iseed_spp_pbl
SUBROUTINE nl_set_spp_lsm ( id_id , spp_lsm )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: spp_lsm
  INTEGER id_id
  model_config_rec%spp_lsm(id_id) = spp_lsm
  RETURN
END SUBROUTINE nl_set_spp_lsm
SUBROUTINE nl_set_gridpt_stddev_spp_lsm ( id_id , gridpt_stddev_spp_lsm )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: gridpt_stddev_spp_lsm
  INTEGER id_id
  model_config_rec%gridpt_stddev_spp_lsm(id_id) = gridpt_stddev_spp_lsm
  RETURN
END SUBROUTINE nl_set_gridpt_stddev_spp_lsm
SUBROUTINE nl_set_stddev_cutoff_spp_lsm ( id_id , stddev_cutoff_spp_lsm )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: stddev_cutoff_spp_lsm
  INTEGER id_id
  model_config_rec%stddev_cutoff_spp_lsm(id_id) = stddev_cutoff_spp_lsm
  RETURN
END SUBROUTINE nl_set_stddev_cutoff_spp_lsm
SUBROUTINE nl_set_lengthscale_spp_lsm ( id_id , lengthscale_spp_lsm )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: lengthscale_spp_lsm
  INTEGER id_id
  model_config_rec%lengthscale_spp_lsm(id_id) = lengthscale_spp_lsm
  RETURN
END SUBROUTINE nl_set_lengthscale_spp_lsm
SUBROUTINE nl_set_timescale_spp_lsm ( id_id , timescale_spp_lsm )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: timescale_spp_lsm
  INTEGER id_id
  model_config_rec%timescale_spp_lsm(id_id) = timescale_spp_lsm
  RETURN
END SUBROUTINE nl_set_timescale_spp_lsm
SUBROUTINE nl_set_vertstruc_spp_lsm ( id_id , vertstruc_spp_lsm )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: vertstruc_spp_lsm
  INTEGER id_id
  model_config_rec%vertstruc_spp_lsm = vertstruc_spp_lsm 
  RETURN
END SUBROUTINE nl_set_vertstruc_spp_lsm
SUBROUTINE nl_set_iseed_spp_lsm ( id_id , iseed_spp_lsm )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: iseed_spp_lsm
  INTEGER id_id
  model_config_rec%iseed_spp_lsm = iseed_spp_lsm 
  RETURN
END SUBROUTINE nl_set_iseed_spp_lsm
SUBROUTINE nl_set_skebs_on ( id_id , skebs_on )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: skebs_on
  INTEGER id_id
  model_config_rec%skebs_on = skebs_on 
  RETURN
END SUBROUTINE nl_set_skebs_on
SUBROUTINE nl_set_sppt_on ( id_id , sppt_on )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: sppt_on
  INTEGER id_id
  model_config_rec%sppt_on = sppt_on 
  RETURN
END SUBROUTINE nl_set_sppt_on
SUBROUTINE nl_set_spp_on ( id_id , spp_on )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: spp_on
  INTEGER id_id
  model_config_rec%spp_on = spp_on 
  RETURN
END SUBROUTINE nl_set_spp_on
SUBROUTINE nl_set_rand_perturb_on ( id_id , rand_perturb_on )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: rand_perturb_on
  INTEGER id_id
  model_config_rec%rand_perturb_on = rand_perturb_on 
  RETURN
END SUBROUTINE nl_set_rand_perturb_on
SUBROUTINE nl_set_num_stoch_levels ( id_id , num_stoch_levels )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: num_stoch_levels
  INTEGER id_id
  model_config_rec%num_stoch_levels = num_stoch_levels 
  RETURN
END SUBROUTINE nl_set_num_stoch_levels
SUBROUTINE nl_set_sfs_opt ( id_id , sfs_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: sfs_opt
  INTEGER id_id
  model_config_rec%sfs_opt(id_id) = sfs_opt
  RETURN
END SUBROUTINE nl_set_sfs_opt
SUBROUTINE nl_set_m_opt ( id_id , m_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: m_opt
  INTEGER id_id
  model_config_rec%m_opt(id_id) = m_opt
  RETURN
END SUBROUTINE nl_set_m_opt
SUBROUTINE nl_set_lakedepth_default ( id_id , lakedepth_default )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: lakedepth_default
  INTEGER id_id
  model_config_rec%lakedepth_default(id_id) = lakedepth_default
  RETURN
END SUBROUTINE nl_set_lakedepth_default
SUBROUTINE nl_set_lake_min_elev ( id_id , lake_min_elev )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: lake_min_elev
  INTEGER id_id
  model_config_rec%lake_min_elev(id_id) = lake_min_elev
  RETURN
END SUBROUTINE nl_set_lake_min_elev
SUBROUTINE nl_set_use_lakedepth ( id_id , use_lakedepth )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: use_lakedepth
  INTEGER id_id
  model_config_rec%use_lakedepth(id_id) = use_lakedepth
  RETURN
END SUBROUTINE nl_set_use_lakedepth
SUBROUTINE nl_set_p_lev_diags ( id_id , p_lev_diags )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: p_lev_diags
  INTEGER id_id
  model_config_rec%p_lev_diags = p_lev_diags 
  RETURN
END SUBROUTINE nl_set_p_lev_diags
SUBROUTINE nl_set_p_lev_diags_dfi ( id_id , p_lev_diags_dfi )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: p_lev_diags_dfi
  INTEGER id_id
  model_config_rec%p_lev_diags_dfi = p_lev_diags_dfi 
  RETURN
END SUBROUTINE nl_set_p_lev_diags_dfi
SUBROUTINE nl_set_num_press_levels ( id_id , num_press_levels )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: num_press_levels
  INTEGER id_id
  model_config_rec%num_press_levels = num_press_levels 
  RETURN
END SUBROUTINE nl_set_num_press_levels
SUBROUTINE nl_set_press_levels ( id_id , press_levels )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: press_levels
  INTEGER id_id
  model_config_rec%press_levels(id_id) = press_levels
  RETURN
END SUBROUTINE nl_set_press_levels
SUBROUTINE nl_set_use_tot_or_hyd_p ( id_id , use_tot_or_hyd_p )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: use_tot_or_hyd_p
  INTEGER id_id
  model_config_rec%use_tot_or_hyd_p = use_tot_or_hyd_p 
  RETURN
END SUBROUTINE nl_set_use_tot_or_hyd_p
SUBROUTINE nl_set_extrap_below_grnd ( id_id , extrap_below_grnd )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: extrap_below_grnd
  INTEGER id_id
  model_config_rec%extrap_below_grnd = extrap_below_grnd 
  RETURN
END SUBROUTINE nl_set_extrap_below_grnd
SUBROUTINE nl_set_p_lev_missing ( id_id , p_lev_missing )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: p_lev_missing
  INTEGER id_id
  model_config_rec%p_lev_missing = p_lev_missing 
  RETURN
END SUBROUTINE nl_set_p_lev_missing
SUBROUTINE nl_set_p_lev_interval ( id_id , p_lev_interval )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: p_lev_interval
  INTEGER id_id
  model_config_rec%p_lev_interval(id_id) = p_lev_interval
  RETURN
END SUBROUTINE nl_set_p_lev_interval
SUBROUTINE nl_set_z_lev_diags ( id_id , z_lev_diags )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: z_lev_diags
  INTEGER id_id
  model_config_rec%z_lev_diags = z_lev_diags 
  RETURN
END SUBROUTINE nl_set_z_lev_diags
SUBROUTINE nl_set_z_lev_diags_dfi ( id_id , z_lev_diags_dfi )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: z_lev_diags_dfi
  INTEGER id_id
  model_config_rec%z_lev_diags_dfi = z_lev_diags_dfi 
  RETURN
END SUBROUTINE nl_set_z_lev_diags_dfi
SUBROUTINE nl_set_num_z_levels ( id_id , num_z_levels )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: num_z_levels
  INTEGER id_id
  model_config_rec%num_z_levels = num_z_levels 
  RETURN
END SUBROUTINE nl_set_num_z_levels
SUBROUTINE nl_set_z_levels ( id_id , z_levels )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: z_levels
  INTEGER id_id
  model_config_rec%z_levels(id_id) = z_levels
  RETURN
END SUBROUTINE nl_set_z_levels
SUBROUTINE nl_set_z_lev_missing ( id_id , z_lev_missing )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: z_lev_missing
  INTEGER id_id
  model_config_rec%z_lev_missing = z_lev_missing 
  RETURN
END SUBROUTINE nl_set_z_lev_missing
SUBROUTINE nl_set_z_lev_interval ( id_id , z_lev_interval )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: z_lev_interval
  INTEGER id_id
  model_config_rec%z_lev_interval(id_id) = z_lev_interval
  RETURN
END SUBROUTINE nl_set_z_lev_interval
SUBROUTINE nl_set_afwa_diag_opt ( id_id , afwa_diag_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: afwa_diag_opt
  INTEGER id_id
  model_config_rec%afwa_diag_opt(id_id) = afwa_diag_opt
  RETURN
END SUBROUTINE nl_set_afwa_diag_opt
SUBROUTINE nl_set_afwa_ptype_opt ( id_id , afwa_ptype_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: afwa_ptype_opt
  INTEGER id_id
  model_config_rec%afwa_ptype_opt(id_id) = afwa_ptype_opt
  RETURN
END SUBROUTINE nl_set_afwa_ptype_opt
SUBROUTINE nl_set_afwa_vil_opt ( id_id , afwa_vil_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: afwa_vil_opt
  INTEGER id_id
  model_config_rec%afwa_vil_opt(id_id) = afwa_vil_opt
  RETURN
END SUBROUTINE nl_set_afwa_vil_opt
SUBROUTINE nl_set_afwa_radar_opt ( id_id , afwa_radar_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: afwa_radar_opt
  INTEGER id_id
  model_config_rec%afwa_radar_opt(id_id) = afwa_radar_opt
  RETURN
END SUBROUTINE nl_set_afwa_radar_opt
SUBROUTINE nl_set_afwa_severe_opt ( id_id , afwa_severe_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: afwa_severe_opt
  INTEGER id_id
  model_config_rec%afwa_severe_opt(id_id) = afwa_severe_opt
  RETURN
END SUBROUTINE nl_set_afwa_severe_opt
SUBROUTINE nl_set_afwa_icing_opt ( id_id , afwa_icing_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: afwa_icing_opt
  INTEGER id_id
  model_config_rec%afwa_icing_opt(id_id) = afwa_icing_opt
  RETURN
END SUBROUTINE nl_set_afwa_icing_opt
SUBROUTINE nl_set_afwa_vis_opt ( id_id , afwa_vis_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: afwa_vis_opt
  INTEGER id_id
  model_config_rec%afwa_vis_opt(id_id) = afwa_vis_opt
  RETURN
END SUBROUTINE nl_set_afwa_vis_opt
SUBROUTINE nl_set_afwa_cloud_opt ( id_id , afwa_cloud_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: afwa_cloud_opt
  INTEGER id_id
  model_config_rec%afwa_cloud_opt(id_id) = afwa_cloud_opt
  RETURN
END SUBROUTINE nl_set_afwa_cloud_opt
SUBROUTINE nl_set_afwa_therm_opt ( id_id , afwa_therm_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: afwa_therm_opt
  INTEGER id_id
  model_config_rec%afwa_therm_opt(id_id) = afwa_therm_opt
  RETURN
END SUBROUTINE nl_set_afwa_therm_opt
SUBROUTINE nl_set_afwa_turb_opt ( id_id , afwa_turb_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: afwa_turb_opt
  INTEGER id_id
  model_config_rec%afwa_turb_opt(id_id) = afwa_turb_opt
  RETURN
END SUBROUTINE nl_set_afwa_turb_opt
SUBROUTINE nl_set_afwa_buoy_opt ( id_id , afwa_buoy_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: afwa_buoy_opt
  INTEGER id_id
  model_config_rec%afwa_buoy_opt(id_id) = afwa_buoy_opt
  RETURN
END SUBROUTINE nl_set_afwa_buoy_opt
SUBROUTINE nl_set_afwa_ptype_ccn_tmp ( id_id , afwa_ptype_ccn_tmp )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: afwa_ptype_ccn_tmp
  INTEGER id_id
  model_config_rec%afwa_ptype_ccn_tmp = afwa_ptype_ccn_tmp 
  RETURN
END SUBROUTINE nl_set_afwa_ptype_ccn_tmp
SUBROUTINE nl_set_afwa_ptype_tot_melt ( id_id , afwa_ptype_tot_melt )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: afwa_ptype_tot_melt
  INTEGER id_id
  model_config_rec%afwa_ptype_tot_melt = afwa_ptype_tot_melt 
  RETURN
END SUBROUTINE nl_set_afwa_ptype_tot_melt
SUBROUTINE nl_set_afwa_bad_data_check ( id_id , afwa_bad_data_check )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: afwa_bad_data_check
  INTEGER id_id
  model_config_rec%afwa_bad_data_check = afwa_bad_data_check 
  RETURN
END SUBROUTINE nl_set_afwa_bad_data_check
SUBROUTINE nl_set_mean_diag ( id_id , mean_diag )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: mean_diag
  INTEGER id_id
  model_config_rec%mean_diag = mean_diag 
  RETURN
END SUBROUTINE nl_set_mean_diag
SUBROUTINE nl_set_mean_freq ( id_id , mean_freq )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: mean_freq
  INTEGER id_id
  model_config_rec%mean_freq = mean_freq 
  RETURN
END SUBROUTINE nl_set_mean_freq
SUBROUTINE nl_set_mean_interval ( id_id , mean_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: mean_interval
  INTEGER id_id
  model_config_rec%mean_interval(id_id) = mean_interval
  RETURN
END SUBROUTINE nl_set_mean_interval
SUBROUTINE nl_set_mean_diag_interval ( id_id , mean_diag_interval )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: mean_diag_interval
  INTEGER id_id
  model_config_rec%mean_diag_interval(id_id) = mean_diag_interval
  RETURN
END SUBROUTINE nl_set_mean_diag_interval
SUBROUTINE nl_set_mean_diag_interval_s ( id_id , mean_diag_interval_s )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: mean_diag_interval_s
  INTEGER id_id
  model_config_rec%mean_diag_interval_s(id_id) = mean_diag_interval_s
  RETURN
END SUBROUTINE nl_set_mean_diag_interval_s
SUBROUTINE nl_set_mean_diag_interval_m ( id_id , mean_diag_interval_m )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: mean_diag_interval_m
  INTEGER id_id
  model_config_rec%mean_diag_interval_m(id_id) = mean_diag_interval_m
  RETURN
END SUBROUTINE nl_set_mean_diag_interval_m
SUBROUTINE nl_set_mean_diag_interval_h ( id_id , mean_diag_interval_h )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: mean_diag_interval_h
  INTEGER id_id
  model_config_rec%mean_diag_interval_h(id_id) = mean_diag_interval_h
  RETURN
END SUBROUTINE nl_set_mean_diag_interval_h
SUBROUTINE nl_set_mean_diag_interval_d ( id_id , mean_diag_interval_d )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: mean_diag_interval_d
  INTEGER id_id
  model_config_rec%mean_diag_interval_d(id_id) = mean_diag_interval_d
  RETURN
END SUBROUTINE nl_set_mean_diag_interval_d
SUBROUTINE nl_set_mean_diag_interval_mo ( id_id , mean_diag_interval_mo )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: mean_diag_interval_mo
  INTEGER id_id
  model_config_rec%mean_diag_interval_mo(id_id) = mean_diag_interval_mo
  RETURN
END SUBROUTINE nl_set_mean_diag_interval_mo
SUBROUTINE nl_set_diurnal_diag ( id_id , diurnal_diag )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: diurnal_diag
  INTEGER id_id
  model_config_rec%diurnal_diag = diurnal_diag 
  RETURN
END SUBROUTINE nl_set_diurnal_diag
SUBROUTINE nl_set_nssl_ipelec ( id_id , nssl_ipelec )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: nssl_ipelec
  INTEGER id_id
  model_config_rec%nssl_ipelec(id_id) = nssl_ipelec
  RETURN
END SUBROUTINE nl_set_nssl_ipelec
SUBROUTINE nl_set_nssl_isaund ( id_id , nssl_isaund )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: nssl_isaund
  INTEGER id_id
  model_config_rec%nssl_isaund = nssl_isaund 
  RETURN
END SUBROUTINE nl_set_nssl_isaund
SUBROUTINE nl_set_nssl_iscreen ( id_id , nssl_iscreen )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: nssl_iscreen
  INTEGER id_id
  model_config_rec%nssl_iscreen = nssl_iscreen 
  RETURN
END SUBROUTINE nl_set_nssl_iscreen
SUBROUTINE nl_set_nssl_lightrad ( id_id , nssl_lightrad )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: nssl_lightrad
  INTEGER id_id
  model_config_rec%nssl_lightrad = nssl_lightrad 
  RETURN
END SUBROUTINE nl_set_nssl_lightrad
SUBROUTINE nl_set_nssl_idischarge ( id_id , nssl_idischarge )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: nssl_idischarge
  INTEGER id_id
  model_config_rec%nssl_idischarge = nssl_idischarge 
  RETURN
END SUBROUTINE nl_set_nssl_idischarge
SUBROUTINE nl_set_nssl_ibrkd ( id_id , nssl_ibrkd )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: nssl_ibrkd
  INTEGER id_id
  model_config_rec%nssl_ibrkd = nssl_ibrkd 
  RETURN
END SUBROUTINE nl_set_nssl_ibrkd
SUBROUTINE nl_set_nssl_ecrit ( id_id , nssl_ecrit )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: nssl_ecrit
  INTEGER id_id
  model_config_rec%nssl_ecrit = nssl_ecrit 
  RETURN
END SUBROUTINE nl_set_nssl_ecrit
SUBROUTINE nl_set_nssl_disfrac ( id_id , nssl_disfrac )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: nssl_disfrac
  INTEGER id_id
  model_config_rec%nssl_disfrac = nssl_disfrac 
  RETURN
END SUBROUTINE nl_set_nssl_disfrac
SUBROUTINE nl_set_elec_physics ( id_id , elec_physics )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: elec_physics
  INTEGER id_id
  model_config_rec%elec_physics = elec_physics 
  RETURN
END SUBROUTINE nl_set_elec_physics
SUBROUTINE nl_set_perturb_bdy ( id_id , perturb_bdy )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: perturb_bdy
  INTEGER id_id
  model_config_rec%perturb_bdy = perturb_bdy 
  RETURN
END SUBROUTINE nl_set_perturb_bdy
SUBROUTINE nl_set_perturb_chem_bdy ( id_id , perturb_chem_bdy )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: perturb_chem_bdy
  INTEGER id_id
  model_config_rec%perturb_chem_bdy = perturb_chem_bdy 
  RETURN
END SUBROUTINE nl_set_perturb_chem_bdy
SUBROUTINE nl_set_hybrid_opt ( id_id , hybrid_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: hybrid_opt
  INTEGER id_id
  model_config_rec%hybrid_opt = hybrid_opt 
  RETURN
END SUBROUTINE nl_set_hybrid_opt
SUBROUTINE nl_set_etac ( id_id , etac )
  USE module_configure, ONLY : model_config_rec 
  real , INTENT(IN) :: etac
  INTEGER id_id
  model_config_rec%etac = etac 
  RETURN
END SUBROUTINE nl_set_etac
SUBROUTINE nl_set_num_wif_levels ( id_id , num_wif_levels )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: num_wif_levels
  INTEGER id_id
  model_config_rec%num_wif_levels = num_wif_levels 
  RETURN
END SUBROUTINE nl_set_num_wif_levels
SUBROUTINE nl_set_wif_input_opt ( id_id , wif_input_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: wif_input_opt
  INTEGER id_id
  model_config_rec%wif_input_opt = wif_input_opt 
  RETURN
END SUBROUTINE nl_set_wif_input_opt
SUBROUTINE nl_set_diag_nwp2 ( id_id , diag_nwp2 )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: diag_nwp2
  INTEGER id_id
  model_config_rec%diag_nwp2 = diag_nwp2 
  RETURN
END SUBROUTINE nl_set_diag_nwp2
SUBROUTINE nl_set_chem_opt ( id_id , chem_opt )
  USE module_configure, ONLY : model_config_rec 
  integer , INTENT(IN) :: chem_opt
  INTEGER id_id
  model_config_rec%chem_opt(id_id) = chem_opt
  RETURN
END SUBROUTINE nl_set_chem_opt
#endif
#endif
!ENDOFREGISTRYGENERATEDINCLUDE
